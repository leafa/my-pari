
/home/mengxue/pari/src/gp/whatnow.h,356
typedef struct whatnow_t1,0
  const char *old,old3,27
  const char *old,  *name,name3,27
  const char *old,  *name, *oldarg,oldarg3,27
  const char *old,  *name, *oldarg, *newarg;newarg3,27
} whatnow_t;4,72
#define SAME 6,86
#define REMOV 7,104
#define _REMOV 9,130
#define _SAME 10,161
static const whatnow_t whatnowlist[whatnowlist11,191

/home/mengxue/pari/src/gp/emacs.c,19
init_emacs(23,984

/home/mengxue/pari/src/gp/gp_rl.c,1319
typedef int (*RLCI)RLCI26,998
typedef char* (*GF)GF27,1071
#define USE_VARARGS31,1215
#define PREFER_STDARG32,1235
static int pari_rl_back;38,1406
static int did_init_matched 39,1431
static entree *current_ep current_ep40,1464
change_state(43,1510
pari_rl_complete(70,2212
static int did_matched_insert;87,2666
pari_rl_matched_insert_suspend(90,2709
pari_rl_matched_insert_restore(102,3045
static const char paropen[paropen110,3215
static const char parclose[parclose111,3252
pari_rl_matched_insert(115,3358
pari_rl_default_matched_insert(132,3870
pari_rl_forward_sexp(142,4099
pari_rl_backward_sexp(212,6104
add_paren(219,6275
match_concat(242,6842
#define add_comma(249,7034
treat_single(253,7163
#undef add_comma265,7448
matches_for_emacs(269,7482
get_matches(294,8268
add_prefix(303,8538
init_prefix(309,8717
is_internal(320,8945
hashtable_generator(326,9194
member_generator(362,10341
command_generator(397,11365
default_generator(400,11486
ext_help_generator(404,11606
rl_print_aide(430,12167
add_space(448,12719
pari_completion(462,13077
rl_short_help(558,16419
rl_long_help(575,16896
init_histfile(578,16989
history_is_new(590,17452
gp_add_history(601,17699
gprl_input(609,17975
get_line_from_readline(648,19000
init_readline(684,19801
#define KSbind(720,21166

/home/mengxue/pari/src/gp/gp.c,965
static jmp_buf *env;env23,980
static pari_stack s_env;24,1001
gp_ask_confirm(29,1116
gp_err_recover(38,1269
gp_pre_recover(44,1378
reset_ctrlc(54,1530
is_silent(62,1634
static int stdin_isatty 64,1690
is_interactive(66,1730
print_shortversion(75,2163
usage(87,2473
gp_head(105,3287
read_arg(127,4073
read_arg_equal(136,4269
init_trivial_stack(145,4484
free_trivial_stack(154,4684
typedef struct { char *key,key159,4750
typedef struct { char *key, *val;val159,4750
typedef struct { char *key, *val; } pair_t;159,4750
record_default(163,4927
read_opt(175,5168
test_is_interactive(263,8048
test_output(266,8101
init_test(274,8216
normal_output(289,8737
gp_output(317,9235
gp_main_loop(327,9476
read_main(391,11110
static long frame_level=408,11430
break_loop(411,11484
cyg_environment(497,13765
main(534,14465
pari_breakpoint(611,16521
pari_breakpoint(611,16521
dbg_down(620,16711
dbg_err(629,16829
dbg_up(632,16903
gp_quit(641,17040
gp_quit(641,17040
whatnow0(652,17252
whatnow0(652,17252

/home/mengxue/pari/src/gp/highlvl.h,53
entree functions_highlevel[functions_highlevel4,98

/home/mengxue/pari/src/gp/whatnow.c,29
msg(20,663
whatnow(32,1003

/home/mengxue/pari/src/gp/gp_init.h,39
entree functions_gp[functions_gp4,98

/home/mengxue/pari/src/gp/texmacs.c,577
#define DATA_BEGIN 24,981
#define DATA_END 25,1012
#define DATA_ESCAPE 26,1043
static int did_complete 33,1426
print_escape_string(42,1594
completion_word(63,1995
tm_completion(95,2685
tm_completion(128,3550
  char *cmd;cmd132,3638
  long n;133,3651
  char **v;v134,3682
} tm_cmd;135,3705
tm_parse_command(138,3728
tm_free_cmd(173,4677
tm_handle_command(180,4790
tm_is_interactive(196,5142
static int tm_is_waiting 198,5177
tm_start_output(201,5260
tm_end_output(208,5446
tm_fgets(214,5563
tm_get_line(225,5722
tm_output(242,6083
init_texmacs(253,6317

/home/mengxue/pari/src/headers/paristio.h,7542
  long s,17,660
  long s, us;17,660
} pari_timer;18,674
typedef unsigned char *byteptr;byteptr20,689
typedef ulong pari_sp;21,721
  int strategy;25,789
  GEN bb;26,818
  ulong c,27,863
  ulong c, q;27,863
  byteptr d;30,947
  ulong p;31,978
  ulong b;32,1018
  unsigned char *sieve;sieve35,1088
  ulong cache[cache36,1112
  ulong chunk;37,1171
  ulong a,38,1219
  ulong a, end,38,1219
  ulong a, end, sieveb;38,1219
  ulong pos,40,1364
  ulong pos, maxpos;40,1364
  GEN pp;45,1487
} forprime_t;46,1497
  int first;49,1529
  GEN b,50,1542
  GEN b, n,50,1542
  GEN b, n, p;50,1542
  forprime_t T;51,1557
} forcomposite_t;52,1573
typedef struct forvec_t 54,1592
  long first;55,1618
  GEN *a,a56,1632
  GEN *a, *m,m56,1632
  GEN *a, *m, *M;M56,1632
  long n;57,1688
  GEN (*next)next58,1711
} forvec_t;59,1745
  long k;64,1805
  long amax,65,1815
  long amax, amin,65,1815
  long amax, amin, nmin,65,1815
  long amax, amin, nmin, nmax,65,1815
  long amax, amin, nmin, nmax, strip;65,1815
  GEN v;66,1853
} forpart_t;67,1862
typedef struct GENbin 70,1893
  size_t len;71,1917
  GEN x;72,1950
  GEN base;73,1982
  int canon;74,2021
} GENbin;76,2137
struct pari_mainstack78,2148
  pari_sp top,80,2172
  pari_sp top, bot,80,2172
  pari_sp top, bot, vbot;80,2172
  size_t size,81,2198
  size_t size, rsize,81,2198
  size_t size, rsize, vsize,81,2198
  size_t size, rsize, vsize, memused;81,2198
struct pari_thread86,2294
  struct pari_mainstack st;88,2315
  GEN data;89,2343
typedef struct pariFILE 92,2359
  FILE *file;file93,2385
  int type;94,2399
  const char *name;name95,2411
  struct pariFILE* prev;96,2431
  struct pariFILE* next;97,2456
} pariFILE;98,2481
enum { mf_IN 100,2513
enum { mf_IN  = 1, mf_PIPE 100,2513
enum { mf_IN  = 1, mf_PIPE = 2, mf_FALSE 100,2513
enum { mf_IN  = 1, mf_PIPE = 2, mf_FALSE = 4, mf_OUT 100,2513
enum { mf_IN  = 1, mf_PIPE = 2, mf_FALSE = 4, mf_OUT = 8, mf_PERM 100,2513
typedef struct entree 102,2588
  const char *name;name103,2612
  ulong valence;104,2632
  void *value;value105,2649
  long menu;106,2664
  const char *code;code107,2677
  const char *help;help108,2697
  void *pvalue;pvalue109,2717
  long arity;110,2733
  ulong hash;111,2747
  struct entree *next;next112,2761
} entree;113,2784
struct pari_parsestate115,2795
  long node;117,2820
  int once;118,2833
  long discarded;119,2845
  const char *lex_start;lex_start120,2863
  GEN lasterror;121,2888
struct pari_compilestate124,2909
  long opcode,126,2936
  long opcode, operand,126,2936
  long opcode, operand, data,126,2936
  long opcode, operand, data, localvars,126,2936
  long opcode, operand, data, localvars, frames,126,2936
  long opcode, operand, data, localvars, frames, dbginfo;126,2936
  long offset;127,2994
  const char *dbgstart;dbgstart128,3009
struct pari_evalstate131,3037
  pari_sp avma;133,3061
  long sp;134,3077
  long rp;135,3088
  long var;136,3099
  long lvars;137,3111
  long prec;138,3125
  long trace;139,3138
  long pending_threads;140,3152
  struct pari_compilestate comp;141,3176
struct pari_varstate144,3213
  long nvar,146,3236
  long nvar, max_avail,146,3236
  long nvar, max_avail, min_priority,146,3236
  long nvar, max_avail, min_priority, max_priority;146,3236
struct gp_context149,3292
  long listloc;151,3312
  long prettyp;152,3328
  struct pari_varstate var;153,3344
  struct pari_evalstate eval;154,3372
  struct pari_parsestate parse;155,3402
  pariFILE *file;file156,3434
  jmp_buf *iferr_env;iferr_env157,3452
  GEN err_data;158,3474
struct mt_state161,3494
  GEN worker;163,3512
  GEN pending;164,3526
  long workid;165,3541
struct pari_mt168,3560
  struct mt_state mt;170,3577
  GEN (*get)get171,3599
  void (*submit)submit172,3663
  void (*end)end173,3725
typedef struct PariOUT 176,3750
  void (*putch)putch177,3775
  void (*puts)puts178,3798
  void (*flush)flush179,3827
} PariOUT;180,3850
typedef struct hashentry 183,3879
  void *key,key184,3906
  void *key, *val;val184,3906
  ulong hash;185,3925
  struct hashentry *next;next186,3955
} hashentry;187,3981
typedef struct hashtable 189,3995
  ulong len;190,4022
  hashentry **table;table191,4054
  ulong nb,192,4091
  ulong nb, maxnb;192,4091
  ulong pindex;193,4169
  ulong (*hash)hash194,4203
  int (*eq)eq195,4250
  int use_stack;196,4304
} hashtable;197,4364
  void **data;data200,4395
  long n;201,4410
  long alloc;202,4420
  size_t size;203,4434
} pari_stack;204,4449
  GEN z;208,4495
  time_t t;209,4517
} gp_hist_cell;210,4557
  gp_hist_cell *v;v212,4590
  size_t size;213,4647
  ulong total;214,4674
} gp_hist;215,4732
  pariFILE *file;file218,4775
  char *cmd;cmd219,4793
} gp_pp;220,4806
  char *PATH;PATH223,4853
  char **dirs;dirs224,4867
} gp_path;225,4882
  char format;227,4921
  long sigd;228,4948
  int sp;229,5018
  int prettyp;230,5075
  int TeXstyle;231,5132
} pariout_t;232,5148
enum { gpd_QUIET=234,5182
enum { gpd_QUIET=1, gpd_TEST=234,5182
enum { gpd_QUIET=1, gpd_TEST=2, gpd_EMACS=234,5182
enum { gpd_QUIET=1, gpd_TEST=2, gpd_EMACS=256, gpd_TEXMACS=234,5182
enum { DO_MATCHED_INSERT 235,5247
enum { DO_MATCHED_INSERT = 2, DO_ARGS_COMPLETE 235,5247
  gp_hist *hist;hist237,5318
  gp_pp *pp;pp238,5335
  gp_path *path,path239,5348
  gp_path *path, *sopath;sopath239,5348
  pariout_t *fmt;fmt240,5374
  ulong lim_lines,241,5392
  ulong lim_lines, flags,241,5392
  ulong lim_lines, flags, linewrap,241,5392
  ulong lim_lines, flags, linewrap, readline_state;241,5392
  int echo,242,5444
  int echo, breakloop,242,5444
  int echo, breakloop, recover,242,5444
  int echo, breakloop, recover, use_readline;242,5444
  char *help,help243,5490
  char *help, *histfile,histfile243,5490
  char *help, *histfile, *prompt,prompt243,5490
  char *help, *histfile, *prompt, *prompt_cont,prompt_cont243,5490
  char *help, *histfile, *prompt, *prompt_cont, *prompt_comment;prompt_comment243,5490
  GEN colormap,244,5555
  GEN colormap, graphcolors;244,5555
  int secure,246,5585
  int secure, simplify,246,5585
  int secure, simplify, strictmatch,246,5585
  int secure, simplify, strictmatch, strictargs,246,5585
  int secure, simplify, strictmatch, strictargs, chrono;246,5585
  pari_timer *T;T247,5642
  ulong primelimit;248,5659
  ulong threadsizemax,249,5696
  ulong threadsizemax, threadsize;249,5696
} gp_data;250,5731
enum logstyles 259,5936
    logstyle_none,260,5953
    logstyle_plain,261,5987
    logstyle_color,262,6022
    logstyle_TeX 263,6057
enum { c_ERR,266,6094
enum { c_ERR, c_HIST,266,6094
enum { c_ERR, c_HIST, c_PROMPT,266,6094
enum { c_ERR, c_HIST, c_PROMPT, c_INPUT,266,6094
enum { c_ERR, c_HIST, c_PROMPT, c_INPUT, c_OUTPUT,266,6094
enum { c_ERR, c_HIST, c_PROMPT, c_INPUT, c_OUTPUT, c_HELP,266,6094
enum { c_ERR, c_HIST, c_PROMPT, c_INPUT, c_OUTPUT, c_HELP, c_TIME,266,6094
enum { c_ERR, c_HIST, c_PROMPT, c_INPUT, c_OUTPUT, c_HELP, c_TIME, c_LAST,266,6094
       c_NONE 267,6169
       c_NONE = 0xffffUL xffffUL267,6169
enum { TEXSTYLE_PAREN=269,6198
enum { TEXSTYLE_PAREN=2, TEXSTYLE_BREAK=269,6198
#define DISABLE_MEMUSED 272,6272
#define gcopyifstack(276,6376
#define copyifstack(279,6543
#define icopyifstack(282,6709
#  define low_stack(288,6964
#  define gc_needed(289,6991
#  define low_stack(291,7025
#  define gc_needed(292,7082
#define stack_lim(295,7150
#  define SIG_IGN 298,7247
#  define SIGINT 301,7300

/home/mengxue/pari/src/headers/paripriv.h,5446
typedef int (*QSCOMP)QSCOMP20,711
#define ucoeff(22,763
#define umael(23,809
#define uel(24,855
#define numberof(26,898
#define BL_HEAD 29,976
#define bl_base(30,994
#define bl_refc(31,1036
#define bl_next(32,1070
#define bl_prev(33,1105
#define bl_num(34,1140
clone_lock(36,1186
clone_unlock(38,1250
#define lswap(41,1315
#define pswap(42,1358
#define swap(43,1401
#define dswap(44,1444
#define pdswap(45,1491
#define swapspec(46,1540
struct abpq 52,1656
struct abpq { GEN *a,a52,1656
struct abpq { GEN *a, *b,b52,1656
struct abpq { GEN *a, *b, *p,p52,1656
struct abpq { GEN *a, *b, *p, *q;q52,1656
struct abpq_res 53,1693
struct abpq_res { GEN P,53,1693
struct abpq_res { GEN P, Q,53,1693
struct abpq_res { GEN P, Q, B,53,1693
struct abpq_res { GEN P, Q, B, T;53,1693
enum { t_FF_FpXQ 247,8888
enum { t_FF_FpXQ = 0, t_FF_Flxq 247,8888
enum { t_FF_FpXQ = 0, t_FF_Flxq = 1, t_FF_F2xq 247,8888
enum { t_LFUN_GENERIC,252,9023
enum { t_LFUN_GENERIC, t_LFUN_ZETA,252,9023
enum { t_LFUN_GENERIC, t_LFUN_ZETA, t_LFUN_NF,252,9023
enum { t_LFUN_GENERIC, t_LFUN_ZETA, t_LFUN_NF, t_LFUN_ELL,252,9023
enum { t_LFUN_GENERIC, t_LFUN_ZETA, t_LFUN_NF, t_LFUN_ELL, t_LFUN_KRONECKER,252,9023
       t_LFUN_CHIVEC,253,9100
       t_LFUN_CHIVEC, t_LFUN_CHIGEN,253,9100
       t_LFUN_CHIVEC, t_LFUN_CHIGEN, t_LFUN_ETA,253,9100
       t_LFUN_CHIVEC, t_LFUN_CHIGEN, t_LFUN_ETA, t_LFUN_DIV,253,9100
       t_LFUN_CHIVEC, t_LFUN_CHIGEN, t_LFUN_ETA, t_LFUN_DIV, t_LFUN_MUL,253,9100
       t_LFUN_SYMSQ,254,9173
       t_LFUN_SYMSQ, t_LFUN_SYMSQ_ELL,254,9173
       t_LFUN_SYMSQ, t_LFUN_SYMSQ_ELL, t_LFUN_QF 254,9173
enum { t_LDESC_INIT,255,9225
enum { t_LDESC_INIT, t_LDESC_THETA,255,9225
enum { t_LDESC_INIT, t_LDESC_THETA, t_LDESC_PRODUCT 255,9225
enum { R_PERIODS 259,9328
enum { R_PERIODS = 1, R_ETA,259,9328
enum { R_PERIODS = 1, R_ETA, R_ROOTS,259,9328
enum { R_PERIODS = 1, R_ETA, R_ROOTS, R_AB 259,9328
enum { Qp_ROOT 261,9375
enum { Qp_ROOT = 1, Qp_TATE 261,9375
enum { Q_GROUPGEN 262,9406
enum { Q_GROUPGEN = 5, Q_GLOBALRED,262,9406
enum { Q_GROUPGEN = 5, Q_GLOBALRED, Q_ROOTNO,262,9406
enum { Q_GROUPGEN = 5, Q_GLOBALRED, Q_ROOTNO, Q_MINIMALMODEL 262,9406
enum { FF_CARD 265,9497
enum { FF_CARD = 1, FF_GROUP,265,9497
enum { FF_CARD = 1, FF_GROUP, FF_GROUPGEN,265,9497
enum { FF_CARD = 1, FF_GROUP, FF_GROUPGEN, FF_O 265,9497
enum { fupb_NONE,268,9573
enum { fupb_NONE, fupb_RELAT,268,9573
enum { fupb_NONE, fupb_RELAT, fupb_LARGE,268,9573
enum { fupb_NONE, fupb_RELAT, fupb_LARGE, fupb_PRECI 268,9573
  long D;279,9857
  long t,280,9867
  long t, u,280,9867
  long t, u, v;280,9867
  ulong p,281,9883
  ulong p, pi;281,9883
  ulong T;282,9898
} norm_eqn_struct;283,9909
typedef norm_eqn_struct norm_eqn_t[norm_eqn_t284,9928
#define zv_to_longptr(286,9968
#define zv_to_ulongptr(287,10005
#define INV_J 305,10611
#define INV_F 306,10627
#define INV_F2 307,10643
#define INV_F3 308,10660
#define INV_F4 309,10677
#define INV_G2 310,10694
print_text(353,12209
out_print_text(355,12294
is_keyword_char(357,12393
  const char *s;s419,14336
  size_t ls;420,14353
  char **dir;dir421,14366
} forpath_t;422,14380
#define EpVALENCE(435,14680
#define EpSTATIC(436,14725
#define EpSETSTATIC(437,14770
enum { EpNEW 438,14819
enum { EpNEW = 100, EpALIAS,438,14819
enum { EpNEW = 100, EpALIAS, EpVAR,438,14819
enum { EpNEW = 100, EpALIAS, EpVAR, EpINSTALL 438,14819
#define initial_value(439,14868
typedef struct Buffer 447,15123
  char *buf;buf448,15147
  ulong len;449,15160
  jmp_buf env;450,15173
} Buffer;451,15188
  const char *s;s457,15315
  char *t,t458,15345
  char *t, *end;end458,15345
  int in_string,459,15391
  int in_string, in_comment,459,15391
  int in_string, in_comment, more_input,459,15391
  int in_string, in_comment, more_input, wait_for_brace;459,15391
  Buffer *buf;buf460,15448
} filtre_t;461,15463
typedef struct input_method 485,16351
  char * (*fgets)fgets487,16397
  char * (*getline)getline488,16434
  int free;489,16505
  const char *prompt,prompt491,16601
  const char *prompt, *prompt_cont;prompt_cont491,16601
  FILE *file;file493,16671
} input_method;494,16685
typedef long (*pivot_fun)pivot_fun510,17083
typedef struct GRHprime_t 554,18031
typedef struct GRHprime_t { ulong p;554,18031
typedef struct GRHprime_t { ulong p; double logp;554,18031
typedef struct GRHprime_t { ulong p; double logp; GEN dec;554,18031
typedef struct GRHprime_t { ulong p; double logp; GEN dec; } GRHprime_t;554,18031
typedef struct GRHcheck_t 555,18104
typedef struct GRHcheck_t { double cD,555,18104
typedef struct GRHcheck_t { double cD, cN;555,18104
typedef struct GRHcheck_t { double cD, cN; GRHprime_t *primes;primes555,18104
typedef struct GRHcheck_t { double cD, cN; GRHprime_t *primes; long clone,555,18104
typedef struct GRHcheck_t { double cD, cN; GRHprime_t *primes; long clone, nprimes,555,18104
typedef struct GRHcheck_t { double cD, cN; GRHprime_t *primes; long clone, nprimes, maxprimes;555,18104
typedef struct GRHcheck_t { double cD, cN; GRHprime_t *primes; long clone, nprimes, maxprimes; ulong limp;555,18104
typedef struct GRHcheck_t { double cD, cN; GRHprime_t *primes; long clone, nprimes, maxprimes; ulong limp; forprime_t P;555,18104
typedef struct GRHcheck_t { double cD, cN; GRHprime_t *primes; long clone, nprimes, maxprimes; ulong limp; forprime_t P; } GRHcheck_t;555,18104

/home/mengxue/pari/src/headers/paridecl.h,1869
struct bb_group22,972
  GEN   (*mul)mul24,990
  GEN   (*pow)pow25,1025
  GEN   (*rand)rand26,1060
  ulong (*hash)hash27,1086
  int   (*equal)equal28,1108
  int   (*equal1)equal129,1135
  GEN   (*easylog)easylog30,1159
struct bb_field34,1230
  GEN (*red)red36,1248
  GEN (*add)add37,1276
  GEN (*mul)mul38,1309
  GEN (*neg)neg39,1342
  GEN (*inv)inv40,1370
  int (*equal0)equal041,1398
  GEN (*s)s42,1420
struct bb_algebra46,1475
  GEN (*red)red48,1495
  GEN (*add)add49,1525
  GEN (*mul)mul50,1562
  GEN (*sqr)sqr51,1599
  GEN (*one)one52,1629
  GEN (*zero)zero53,1652
struct bb_ring57,1701
  GEN (*add)add59,1718
  GEN (*mul)mul60,1755
  GEN (*sqr)sqr61,1792
enum { d_SILENT 2206,86107
enum { d_SILENT = 0, d_ACKNOWLEDGE,2206,86107
enum { d_SILENT = 0, d_ACKNOWLEDGE, d_INITRC,2206,86107
enum { d_SILENT = 0, d_ACKNOWLEDGE, d_INITRC, d_RETURN 2206,86107
enum { h_REGULAR=2276,88998
enum { h_REGULAR=0, h_LONG=2276,88998
enum { h_REGULAR=0, h_LONG=1, h_APROPOS=2276,88998
enum { h_REGULAR=0, h_LONG=1, h_APROPOS=2, h_RL=2276,88998
enum { t_ELL_Rg 2307,89825
enum { t_ELL_Rg = 0, t_ELL_Q,2307,89825
enum { t_ELL_Rg = 0, t_ELL_Q, t_ELL_Qp,2307,89825
enum { t_ELL_Rg = 0, t_ELL_Q, t_ELL_Qp, t_ELL_Fp,2307,89825
enum { t_ELL_Rg = 0, t_ELL_Q, t_ELL_Qp, t_ELL_Fp, t_ELL_Fq,2307,89825
enum { t_ELL_Rg = 0, t_ELL_Q, t_ELL_Qp, t_ELL_Fp, t_ELL_Fq, t_ELL_NF 2307,89825
enum { f_RAW 2520,97889
enum { f_RAW = 0, f_PRETTYMAT 2520,97889
enum { f_RAW = 0, f_PRETTYMAT = 1, f_PRETTY 2520,97889
enum { f_RAW = 0, f_PRETTYMAT = 1, f_PRETTY = 3, f_TEX 2520,97889
enum { br_NONE 2546,98815
enum { br_NONE = 0, br_BREAK,2546,98815
enum { br_NONE = 0, br_BREAK, br_NEXT,2546,98815
enum { br_NONE = 0, br_BREAK, br_NEXT, br_MULTINEXT,2546,98815
enum { br_NONE = 0, br_BREAK, br_NEXT, br_MULTINEXT, br_RETURN 2546,98815

/home/mengxue/pari/src/headers/parigen.h,2910
typedef unsigned long long pari_ulong;17,657
#define long 18,696
#define labs 19,719
typedef unsigned long pari_ulong;21,744
#define ulong 23,785
typedef long *GEN;GEN24,810
#undef ULONG_MAX26,830
#undef LONG_MAX27,847
#  define BITS_IN_LONG 30,885
#  define TWOPOTBITS_IN_LONG 31,911
#  define LONG_MAX 32,942
#  define SMALL_ULONG(33,997
#  define BITS_IN_LONG 35,1055
#  define TWOPOTBITS_IN_LONG 36,1081
#  define LONG_MAX 37,1112
#  define SMALL_ULONG(38,1158
#define ULONG_MAX 40,1240
#define DEFAULTPREC 42,1268
#define MEDDEFAULTPREC 43,1320
#define BIGDEFAULTPREC 44,1373
#define LOWDEFAULTPREC 45,1426
#define EXTRAPRECWORD 46,1452
#define HIGHBIT 47,1478
#define BITS_IN_HALFULONG 48,1520
#define LOWMASK 50,1565
#define HIGHMASK 51,1612
#define HIGHWORD(53,1641
#define LOWWORD(54,1688
#define TYPnumBITS 63,1978
#define SIGNnumBITS 64,2001
#  define VARNnumBITS 67,2046
#  define VARNnumBITS 69,2111
#define   LGnumBITS 73,2186
#define VALPnumBITS 74,2238
#define EXPOnumBITS 75,2301
#define PRECPSHIFT 76,2350
#define  VARNSHIFT 77,2381
#define   TYPSHIFT 78,2412
#define  SIGNSHIFT 79,2459
#define EXPOBITS 81,2508
#define SIGNBITS 82,2551
#define  TYPBITS 83,2597
#define PRECPBITS 84,2643
#define LGBITS 85,2675
#define VALPBITS 86,2716
#define VARNBITS 87,2759
#define MAXVARN 88,2800
#define NO_VARIABLE 89,2843
#define VARARGBITS 90,2868
#define ARITYBITS 91,2896
#define HIGHEXPOBIT 93,2931
#define HIGHVALPBIT 94,2974
#define CLONEBIT 95,3017
#define evaltyp(97,3055
#define evalvarn(98,3104
#define evalsigne(99,3154
#define _evalexpo(100,3204
#define _evalvalp(101,3246
#define _evalprecp(102,3288
#define evallgefint(103,3338
#define evallgeflist(104,3366
#define _evallg(105,3394
#define typ(107,3421
#define settyp(108,3483
#define isclone(111,3594
#define setisclone(112,3647
#define unsetisclone(113,3701
#define lg(115,3761
#define setlg(116,3820
#define signe(119,3927
#define setsigne(120,3981
#define lgefint(123,4102
#define setlgefint(124,4163
#define realprec(127,4288
#define setprec(128,4347
#define incrprec(130,4453
#define expo(132,4484
#define setexpo(133,4562
#define valp(136,4681
#define setvalp(137,4759
#define precp(140,4878
#define setprecp(141,4943
#define varn(144,5064
#define setvarn(145,5138
#define list_typ(150,5271
#define list_nmax(151,5332
#define list_data(152,5390
  t_LIST_RAW 154,5431
  t_LIST_MAP 155,5449
  t_INT 161,5560
  t_REAL 162,5577
  t_INTMOD 163,5594
  t_FRAC 164,5611
  t_FFELT 165,5628
  t_COMPLEX=166,5645
  t_PADIC 167,5662
  t_QUAD 168,5679
  t_POLMOD 169,5696
  t_POL 170,5713
  t_SER 171,5731
  t_RFRAC 172,5749
  t_QFR 173,5767
  t_QFI 174,5785
  t_VEC 175,5803
  t_COL 176,5821
  t_MAT 177,5839
  t_LIST 178,5857
  t_STR 179,5875
  t_VECSMALL=180,5893
  t_CLOSURE 181,5911
  t_ERROR 182,5929
  t_INFINITY=183,5947

/home/mengxue/pari/src/headers/paricom.h,757
#  undef STMT_START20,955
#  undef STMT_END23,998
#define STMT_START 29,1205
#define STMT_END 30,1234
#define pari_CATCH2(44,1695
#define pari_CATCH2_reset(55,2052
#define pari_ENDCATCH2(56,2101
#define pari_CATCH(58,2151
#define pari_RETRY 59,2204
#define pari_TRY 60,2247
#define pari_CATCH_reset(61,2273
#define pari_ENDCATCH 62,2331
#  define M_PI 66,2440
  INIT_JMPm 97,3522
  INIT_SIGm 98,3539
  INIT_DFTm 99,3556
  INIT_noPRIMEm 100,3573
  INIT_noIMTm 101,3594
#  undef exp2105,3634
#  define exp2(106,3648
#  undef log2109,3714
#  define log2(110,3728
#define ONLY_REM 113,3778
#define ONLY_DIVIDES 114,3808
#define NEXT_PRIME_VIADIFF(116,3843
#define PREC_PRIME_VIADIFF(117,3914
#define NEXT_PRIME_VIADIFF_CHECK(118,3985

/home/mengxue/pari/src/headers/paricast.h,339
#define mael2(14,573
#define mael3(15,630
#define mael4(16,691
#define mael5(17,756
#define mael 18,825
#define gmael1(20,845
#define gmael2(21,900
#define gmael3(22,959
#define gmael4(23,1022
#define gmael5(24,1089
#define gmael(25,1160
#define gel(26,1195
#define gcoeff(28,1229
#define coeff(29,1272
#define GSTR(31,1314

/home/mengxue/pari/src/headers/pariinl.h,14088
#define retmkfrac(19,928
#define retmkintmod(23,1058
#define retmkcomplex(27,1192
#define retmkpolmod(31,1328
#define retmkvec(35,1462
#define retmkvec2(38,1563
#define retmkvec3(42,1692
#define retmkqfi(47,1848
#define retmkqfr(52,2003
#define retmkquad(58,2185
#define retmkvec4(63,2342
#define retmkvec5(69,2525
#define retmkcol(76,2735
#define retmkcol2(79,2836
#define retmkcol3(83,2965
#define retmkcol4(88,3121
#define retmkcol5(94,3304
#define retmkcol6(101,3514
#define retmkmat(109,3751
#define retmkmat2(112,3852
#define retmkmat3(116,3981
#define retmkmat4(121,4137
#define retmkmat5(127,4320
mkintmod(136,4542
mkintmodu(138,4598
mkpolmod(144,4727
mkfrac(146,4783
mkfraccopy(148,4835
mkrfrac(150,4906
mkrfraccopy(153,5010
mkcomplex(156,5132
gen_I(158,5190
gen_I(158,5190
cgetc(160,5249
mkquad(162,5312
mkvecsmall(166,5450
mkvecsmall2(168,5534
mkvecsmall3(171,5634
mkvecsmall4(174,5749
mkvecsmall5(177,5879
mkqfi(181,6025
mkvec(184,6094
mkvec2(186,6135
mkvec3(188,6187
mkvec4(190,6248
mkvec5(192,6318
mkvecs(194,6397
mkvec2s(196,6446
mkvec3s(198,6513
mkvec4s(200,6596
mkveccopy(202,6695
mkvec2copy(204,6783
mkcol(208,6911
mkcol2(210,6952
mkcol3(212,7004
mkcol4(214,7065
mkcol5(216,7135
mkcol6(218,7214
mkcols(220,7302
mkcol2s(222,7351
mkcol3s(224,7418
mkcol4s(226,7501
mkcolcopy(228,7600
mkmat(231,7698
mkmat2(233,7739
mkmat3(235,7791
mkmat4(237,7852
mkmat5(239,7922
mkmatcopy(241,8001
mkerr(243,8089
mkoo(245,8165
mkoo(245,8165
mkmoo(247,8245
inf_get_sign(249,8328
pol_x(252,8397
pol_1(259,8538
pol_0(265,8659
#define retconst_vec(270,8735
const_vec(276,8929
#define retconst_col(277,8978
const_col(283,9172
const_vecsmall(285,9232
zeropadic(296,9396
zeropadic_shallow(306,9577
zeroser(317,9779
ser_isexactzero(323,9891
zeropol(334,10063
zerocol(337,10127
zerovec(345,10264
zeromat(353,10403
zero_Flx(362,10584
zero_Flv(364,10638
zero_Flm(372,10775
zero_Flm_copy(381,10942
zero_F2v(389,11083
zero_F2m(398,11193
zero_F2m_copy(410,11354
zeromatcopy(421,11524
col_ei(430,11702
vec_ei(432,11788
F2v_ei(434,11874
vecsmall_ei(436,11957
Rg_col_ei(438,12040
shallowcopy(441,12133
vectrunc_init(446,12262
vectrunc_append(452,12372
vectrunc_append_batch(455,12463
vecsmalltrunc_init(463,12634
vecsmalltrunc_append(469,12754
vec_shorten(479,13210
vec_lengthen(488,13356
vec_append(498,13518
vec_setconst(507,13708
vecsmall_shorten(514,13823
vecsmall_lengthen(522,13958
vec_to_vecsmall(531,14105
vecsmall_to_vec(539,14253
vecsmall_to_col(547,14395
vecsmall_lexcmp(556,14538
vecsmall_prefixcmp(568,14771
vecsmall_prepend(578,15003
vecsmall_append(588,15181
vecsmall_concat(597,15356
vecsmall_coincidence(608,15646
vecsmall_isin(618,15876
vecsmall_pack(627,16010
vecsmall_indexmax(635,16150
vecsmall_max(644,16299
vecsmall_indexmin(653,16431
vecsmall_min(662,16579
ZV_isscalar(671,16709
QV_isscalar(679,16827
RgV_isscalar(687,16958
RgX_isscalar(695,17088
RgX_equal_var(703,17213
RgX_is_rational(706,17302
RgX_is_ZX(714,17443
RgX_is_QX(722,17571
RgX_is_monomial(730,17704
RgV_is_ZV(739,17861
RgV_is_QV(747,17989
pari_stack_base(761,18484
pari_stack_init(764,18548
pari_stack_alloc(774,18702
pari_stack_new(788,18977
pari_stack_delete(791,19063
pari_stack_pushp(798,19175
vecslice(811,19672
vecslicepermute(819,19830
rowslicepermute(828,20045
rowslice(836,20240
matslice(845,20413
vecsplice(852,20568
RgM_minor(864,20831
row(874,21014
Flm_row(882,21165
rowcopy(891,21332
row_i(900,21514
vecreverse(909,21694
vecreverse_inplace(918,21830
vecsmallpermute(930,22018
vecpermute(933,22087
rowpermute(941,22238
identity_perm(957,22896
cyclic_perm(967,23056
perm_mul(978,23294
perm_inv(988,23503
perm_conj(997,23650
#define BLOCK_SIGALRM_START 1008,23998
#define BLOCK_SIGINT_START 1014,24181
#define BLOCK_SIGINT_END 1020,24364
pari_free(1032,24730
pari_malloc(1039,24831
pari_realloc(1054,25106
pari_calloc(1066,25353
cgetalloc(1072,25456
icopy_avma(1085,25983
leafcopy_avma(1095,26204
gerepileuptoleaf(1104,26367
gerepileuptoint(1117,26603
gerepileupto(1124,26770
gerepilecopy(1141,27223
gerepilemany(1165,27739
gerepileall(1174,27943
gerepilecoeffs(1199,28515
bin_copy(1209,28773
GENbinbase(1227,29178
cgiv(1230,29238
killblock(1237,29339
is_universal_constant(1240,29385
cxcompotor(1249,29883
cxtofp(1260,30147
gtodouble(1264,30259
gtos(1275,30482
gtou(1281,30597
absfrac(1288,30732
absfrac_shallow(1295,30859
Q_abs(1298,30960
Q_abs_shallow(1300,31035
gtofp(1305,31207
gtomp(1329,31886
RgX_gtofp(1343,32218
RgC_gtofp(1351,32377
RgM_gtofp(1359,32529
RgC_gtomp(1367,32679
RgM_gtomp(1375,32831
RgX_fpnorml2(1384,32982
RgC_fpnorml2(1390,33105
RgM_fpnorml2(1396,33228
affgr(1404,33370
affc_fixlg(1417,33689
trunc_safe(1434,33967
ndec2nlong(1442,34381
ndec2prec(1444,34463
nbits2nlong(1449,34713
nbits2extraprec(1454,34816
nbits2prec(1460,34971
nbits2lg(1464,35074
nchar2nlong(1469,35204
bit_accuracy(1473,35311
bit_accuracy_mul(1475,35379
prec2nbits_mul(1477,35465
bit_prec(1479,35547
prec2nbits(1481,35613
prec2ndec(1483,35672
precdbl(1485,35747
divsBIL(1487,35798
remsBIL(1489,35862
Fp_red(1499,36336
Fp_add(1501,36392
Fp_sub(1521,36862
Fp_neg(1542,37301
Fp_halve(1559,37595
Fp_center(1567,37728
Fp_addmul(1572,37846
Fp_mul(1582,38080
Fp_sqr(1591,38296
Fp_mulu(1600,38496
Fp_muls(1616,38845
Fp_inv(1639,39319
Fp_invsafe(1646,39447
Fp_div(1653,39551
Flx_mulu(1663,39773
submulii(1672,40215
mulsubii(1687,40561
submuliu(1703,40881
addmuliu(1715,41123
submuliu_inplace(1727,41365
addmuliu_inplace(1739,41608
lincombii(1751,41851
is_const_t(1772,42541
is_extscalar_t(1774,42598
is_intreal_t(1776,42657
is_matvec_t(1778,42715
is_noncalc_t(1780,42785
is_rational_t(1782,42845
is_recursive_t(1784,42918
is_scalar_t(1786,42974
is_vec_t(1788,43029
sqrtr(1796,43447
cbrtr(1803,43615
sqrtnr(1813,43793
INLINE int ismpzero(1828,44313
INLINE int isintzero(1829,44386
INLINE int isint1(1830,44455
INLINE int isintm1(1831,44520
INLINE int equali1(1832,44585
INLINE int equalim1(1834,44686
INLINE int is_pm1(1837,44828
INLINE int is_bigint(1839,44894
INLINE int odd(1842,44994
INLINE int both_odd(1843,45035
isonstack(1846,45105
dbllog2r(1852,45300
mul_content(1856,45405
mul_denom(1863,45514
constant_term(1872,45641
leading_term(1874,45711
Flx_lead(1876,45790
degpol(1878,45856
lgpol(1880,45902
lgcols(1882,45947
nbrows(1884,45998
truecoeff(1886,46050
RgXQ_mul(1889,46117
RgXQ_sqr(1891,46196
ZXQ_mul(1894,46266
ZXQ_sqr(1896,46342
RgX_copy(1899,46409
RgX_coeff(1909,46664
RgX_renormalize(1915,46780
RgX_div(1917,46855
RgX_rem(1919,46921
RgXQX_div(1921,46991
RgXQX_rem(1923,47070
FpX_div(1925,47153
Flx_div(1927,47229
F2x_div(1929,47307
FpV_FpC_mul(1931,47374
pol0_Flx(1933,47452
pol1_Flx(1935,47508
polx_Flx(1937,47568
zero_zx(1939,47631
polx_zx(1941,47684
zx_shift(1943,47737
zx_renormalize(1945,47799
zero_F2x(1947,47873
pol0_F2x(1949,47927
pol1_F2x(1951,47981
polx_F2x(1953,48035
F2x_equal1(1955,48095
F2x_equal(1957,48150
F2v_copy(1959,48212
Flv_copy(1961,48263
Flx_copy(1963,48314
vecsmall_copy(1965,48365
Flx_equal1(1967,48421
ZX_equal1(1969,48488
ZX_renormalize(1972,48563
FpX_renormalize(1974,48642
FpXX_renormalize(1976,48721
FpXQX_renormalize(1978,48800
F2x_renormalize(1980,48879
F2v_to_F2x(1982,48958
ZX_ZXY_resultant(1988,49074
sturm(1990,49158
resultant(1992,49219
gval(1995,49292
RgX_shift_inplace_init(2002,49409
RgX_shift_inplace(2006,49567
zv_to_ZV(2026,50024
zc_to_ZC(2028,50082
ZV_to_zv(2030,50140
zx_to_zv(2032,50198
zv_to_zx(2034,50261
zm_to_zxV(2036,50326
zero_zm(2038,50393
zero_zv(2040,50454
zm_transpose(2042,50505
zm_copy(2044,50565
zv_copy(2046,50615
zm_row(2048,50665
ZC_hnfrem(2051,50724
ZM_hnfrem(2053,50794
ZM_lll(2055,50864
RgM_dimensions(2057,50945
RgM_inv(2059,51037
RgM_shallowcopy(2061,51094
F2m_copy(2069,51232
Flm_copy(2072,51291
ZV_dvd(2077,51458
Fq_red(2087,51612
Fq_to_FpXQ(2090,51707
gener_Fq_local(2097,51836
FpXQX_div(2103,51970
FlxqX_rem(2105,52062
FlxqX_div(2107,52160
FqX_red(2111,52265
FqX_add(2113,52354
FqX_neg(2115,52445
FqX_sub(2117,52526
FqX_Fp_mul(2119,52617
FqX_Fq_mul(2122,52724
FqX_mul(2125,52853
FqX_mulu(2128,52955
FqX_sqr(2131,53058
FqX_powu(2134,53147
FqX_div(2137,53254
FqX_rem(2140,53367
FqX_divrem(2143,53464
FqX_div_by_X_x(2146,53582
FqX_gcd(2149,53712
FqX_extgcd(2152,53804
FqXQ_add(2157,53941
FqXQ_sub(2160,54062
FqXQ_div(2163,54183
FqXQ_inv(2166,54294
FqXQ_invsafe(2169,54394
FqXQ_mul(2172,54502
FqXQ_sqr(2175,54613
FqXQ_pow(2178,54713
FpXQ_add(2183,54834
FpXQ_sub(2186,54925
Flxq_add(2191,55026
Flxq_sub(2194,55119
F2x_coeff(2200,55226
F2x_clear(2207,55333
F2x_set(2214,55439
F2x_flip(2221,55540
F2v_coeff(2230,55654
F2v_clear(2233,55720
F2v_set(2236,55779
F2v_flip(2239,55836
F2m_coeff(2244,55905
F2m_clear(2247,55986
F2m_set(2250,56060
F2m_flip(2253,56130
matpascal(2257,56218
Z_issquare(2259,56280
Z_ispower(2261,56345
sqrti(2263,56419
gaddgs(2265,56472
gcmpgs(2267,56529
gequalgs(2269,56587
gmaxsg(2271,56648
gminsg(2273,56705
gmulgs(2275,56762
gsubgs(2277,56819
gdivsg(2279,56878
cxnorm(2283,56959
quadnorm(2286,57048
quad_disc(2303,57475
qfb_disc3(2314,57747
qfb_disc(2316,57838
sqrfrac(2319,57918
normalize_frac(2327,58045
powii(2332,58158
powIs(2348,58512
INLINE void mpexpz(2363,59035
INLINE void mplogz(2365,59124
INLINE void mpcosz(2367,59213
INLINE void mpsinz(2369,59302
INLINE void gnegz(2371,59391
INLINE void gabsz(2373,59478
INLINE void gaddz(2375,59581
INLINE void gsubz(2377,59677
INLINE void gmulz(2379,59773
INLINE void gdivz(2381,59869
INLINE void gdiventz(2383,59965
INLINE void gmodz(2385,60067
INLINE void gmul2nz(2387,60163
INLINE void gshiftz(2389,60264
INLINE GEN ell_get_a1(2397,60716
INLINE GEN ell_get_a2(2398,60766
INLINE GEN ell_get_a3(2399,60816
INLINE GEN ell_get_a4(2400,60866
INLINE GEN ell_get_a6(2401,60916
INLINE GEN ell_get_b2(2402,60966
INLINE GEN ell_get_b4(2403,61016
INLINE GEN ell_get_b6(2404,61066
INLINE GEN ell_get_b8(2405,61116
INLINE GEN ell_get_c4(2406,61166
INLINE GEN ell_get_c6(2407,61217
INLINE GEN ell_get_disc(2408,61268
INLINE GEN ell_get_j(2409,61321
INLINE long ell_get_type(2410,61371
INLINE GEN ellff_get_field(2411,61428
INLINE GEN ellff_get_a4a6(2412,61490
INLINE GEN ellQp_get_zero(2413,61552
INLINE long ellQp_get_prec(2414,61613
INLINE GEN ellQp_get_p(2415,61694
INLINE long ellR_get_prec(2416,61772
INLINE long ellR_get_sign(2417,61848
INLINE GEN ellnf_get_nf(2418,61912
INLINE int ell_is_inf(2420,61972
INLINE GEN ellinf(2421,62024
INLINE GEN modpr_get_pr(2428,62424
INLINE GEN modpr_get_p(2429,62477
INLINE GEN modpr_get_T(2430,62546
INLINE GEN pr_get_p(2432,62617
INLINE GEN pr_get_gen(2433,62668
INLINE long pr_get_e(2435,62789
INLINE long pr_get_f(2436,62843
INLINE GEN pr_get_tau(2437,62897
pr_is_inert(2439,62959
pr_norm(2441,63036
nf_get_varn(2445,63140
nf_get_pol(2447,63199
nf_get_degree(2449,63252
nf_get_r1(2451,63323
nf_get_r2(2453,63399
nf_get_disc(2455,63474
nf_get_index(2457,63527
nf_get_M(2459,63581
nf_get_G(2461,63635
nf_get_roundG(2463,63689
nf_get_Tr(2465,63748
nf_get_diff(2467,63803
nf_get_ramified_primes(2469,63860
nf_get_roots(2471,63928
nf_get_zk(2473,63982
nf_get_invzk(2475,64033
nf_get_sign(2477,64088
abgrp_get_no(2485,64213
abgrp_get_cyc(2487,64265
abgrp_get_gen(2489,64318
bnf_get_nf(2491,64371
bnf_get_clgp(2493,64425
bnf_get_no(2495,64485
bnf_get_cyc(2497,64560
bnf_get_gen(2499,64637
bnf_get_reg(2501,64715
bnf_get_logfu(2503,64774
bnf_get_tuU(2505,64831
bnf_get_tuN(2507,64894
bnf_get_fu(2509,64959
bnf_get_fu_nocheck(2515,65108
bnr_get_bnf(2518,65175
bnr_get_bid(2520,65230
bnr_get_mod(2522,65285
bnr_get_nf(2524,65344
bnr_get_clgp(2526,65402
bnr_get_no(2528,65458
bnr_get_cyc(2530,65533
bnr_get_gen_nocheck(2532,65610
bnr_get_gen(2534,65695
bid_get_mod(2542,65871
bid_get_ideal(2544,65926
bid_get_arch(2546,65987
bid_get_grp(2548,66047
bid_get_no(2550,66102
bid_get_cyc(2552,66176
bid_get_gen_nocheck(2554,66252
bid_get_gen(2556,66337
gal_get_pol(2562,66509
gal_get_p(2564,66564
gal_get_e(2566,66621
gal_get_mod(2568,66678
gal_get_roots(2570,66737
gal_get_invvdm(2572,66794
gal_get_den(2574,66852
gal_get_group(2576,66907
gal_get_gen(2578,66964
gal_get_orders(2580,67019
rnf_get_degree(2584,67110
rnf_get_nfdegree(2586,67183
rnf_get_absdegree(2588,67269
rnf_get_idealdisc(2590,67343
rnf_get_k(2592,67408
rnf_get_alpha(2594,67466
rnf_get_nf(2596,67530
rnf_get_nfzk(2598,67586
rnf_get_polabs(2600,67677
rnf_get_pol(2602,67740
rnf_get_disc(2604,67795
rnf_get_index(2606,67851
rnf_get_varn(2608,67909
rnf_get_nfpol(2610,67971
rnf_get_nfvarn(2612,68034
rnf_get_zk(2614,68103
rnf_get_map(2616,68157
rnf_get_invzk(2618,68213
idealpseudomin(2623,68398
idealpseudomin_nonscalar(2630,68599
idealred_elt(2639,68809
idealred(2645,68951
INLINE long closure_arity(2652,69361
INLINE long closure_is_variadic(2653,69439
INLINE const char *closure_codestr(closure_codestr2654,69519
INLINE GEN closure_get_code(2655,69591
INLINE GEN closure_get_oper(2656,69648
INLINE GEN closure_get_data(2657,69705
INLINE GEN closure_get_dbg(2658,69762
INLINE GEN closure_get_text(2659,69819
INLINE GEN closure_get_frame(2660,69876
err_get_num(2668,70296
err_get_compo(2670,70343
pari_err_BUG(2673,70409
pari_err_CONSTPOL(2675,70472
pari_err_COPRIME(2677,70546
pari_err_DIM(2679,70636
pari_err_FILE(2681,70700
pari_err_FLAG(2683,70783
pari_err_IMPL(2685,70848
pari_err_INV(2687,70913
pari_err_IRREDPOL(2689,70985
pari_err_DOMAIN(2691,71068
pari_err_COMPONENT(2693,71192
pari_err_MAXPRIME(2695,71305
pari_err_OP(2697,71373
pari_err_OVERFLOW(2699,71453
pari_err_PREC(2701,71527
pari_err_PACKAGE(2703,71592
pari_err_PRIME(2705,71663
pari_err_MODULUS(2707,71740
pari_err_ROOTS0(2709,71830
pari_err_SQRTN(2711,71900
pari_err_TYPE(2713,71977
pari_err_TYPE2(2715,72052
pari_err_VAR(2717,72138
pari_err_PRIORITY(2719,72220

/home/mengxue/pari/src/headers/pari.h,67
#define __GENPARI__15,593
#  define _INCLUDE_POSIX_SOURCE 20,694

/home/mengxue/pari/src/headers/paritune.h,1897
#define PARI_TUNE1,0
#  define AGM_ATAN_LIMIT 52,1635
#  define DIVRR_GMP_LIMIT 53,1693
#  define EXPNEWTON_LIMIT 54,1752
#  define Flx_BARRETT_HALFMULII_LIMIT 55,1811
#  define Flx_BARRETT_KARATSUBA_LIMIT 56,1882
#  define Flx_BARRETT_MULII2_LIMIT 57,1953
#  define Flx_BARRETT_MULII_LIMIT 58,2021
#  define Flx_DIVREM_BARRETT_LIMIT 59,2088
#  define Flx_EXTGCD_LIMIT 60,2156
#  define Flx_GCD_LIMIT 61,2216
#  define Flx_HALFGCD_KARATSUBA_LIMIT 62,2273
#  define Flx_HALFGCD_HALFMULII_LIMIT 63,2344
#  define Flx_HALFGCD_MULII2_LIMIT 64,2415
#  define Flx_HALFGCD_MULII_LIMIT 65,2483
#  define Flx_INVBARRETT_HALFMULII_LIMIT 66,2550
#  define Flx_INVBARRETT_KARATSUBA_LIMIT 67,2624
#  define Flx_INVBARRETT_MULII2_LIMIT 68,2698
#  define Flx_INVBARRETT_MULII_LIMIT 69,2769
#  define Flx_MUL_HALFMULII_LIMIT 70,2839
#  define Flx_MUL_KARATSUBA_LIMIT 71,2906
#  define Flx_MUL_MULII2_LIMIT 72,2973
#  define Flx_MUL_MULII_LIMIT 73,3037
#  define Flx_REM_BARRETT_LIMIT 74,3100
#  define Flx_SQR_HALFSQRI_LIMIT 75,3165
#  define Flx_SQR_KARATSUBA_LIMIT 76,3231
#  define Flx_SQR_SQRI2_LIMIT 77,3298
#  define Flx_SQR_SQRI_LIMIT 78,3361
#  define FpX_BARRETT_LIMIT 79,3423
#  define FpX_DIVREM_BARRETT_LIMIT 80,3484
#  define FpX_EXTGCD_LIMIT 81,3552
#  define FpX_GCD_LIMIT 82,3612
#  define FpX_HALFGCD_LIMIT 83,3669
#  define FpX_INVBARRETT_LIMIT 84,3730
#  define FpX_REM_BARRETT_LIMIT 85,3794
#  define Fp_POW_BARRETT_LIMIT 86,3859
#  define Fp_POW_REDC_LIMIT 87,3923
#  define INVMOD_GMP_LIMIT 88,3984
#  define INVNEWTON_LIMIT 89,4044
#  define LOGAGMCX_LIMIT 90,4103
#  define LOGAGM_LIMIT 91,4161
#  define MULII_FFT_LIMIT 92,4217
#  define MULII_KARATSUBA_LIMIT 93,4276
#  define MULRR_MULII_LIMIT 94,4341
#  define RgX_MUL_LIMIT 95,4402
#  define RgX_SQR_LIMIT 96,4459
#  define SQRI_FFT_LIMIT 97,4516
#  define SQRI_KARATSUBA_LIMIT 98,4574

/home/mengxue/pari/src/headers/parierr.h,1498
enum err_list 14,573
  e_SYNTAX 16,619
  e_SYNTAX = 1, e_BUG,16,619
  e_ALARM,18,643
  e_ALARM, e_FILE,18,643
  e_MISC,20,663
  e_MISC, e_FLAG,20,663
  e_MISC, e_FLAG, e_IMPL,20,663
  e_MISC, e_FLAG, e_IMPL, e_ARCH,20,663
  e_MISC, e_FLAG, e_IMPL, e_ARCH, e_PACKAGE,20,663
  e_MISC, e_FLAG, e_IMPL, e_ARCH, e_PACKAGE, e_NOTFUNC,20,663
  e_PREC,22,720
  e_PREC, e_TYPE,22,720
  e_PREC, e_TYPE, e_DIM,22,720
  e_PREC, e_TYPE, e_DIM, e_VAR,22,720
  e_PREC, e_TYPE, e_DIM, e_VAR, e_PRIORITY,22,720
  e_PREC, e_TYPE, e_DIM, e_VAR, e_PRIORITY, e_USER,22,720
  e_STACK,24,773
  e_STACK, e_STACKTHREAD,24,773
  e_STACK, e_STACKTHREAD, e_OVERFLOW,24,773
  e_STACK, e_STACKTHREAD, e_OVERFLOW, e_DOMAIN,24,773
  e_STACK, e_STACKTHREAD, e_OVERFLOW, e_DOMAIN, e_COMPONENT,24,773
  e_MAXPRIME,26,835
  e_CONSTPOL,28,850
  e_CONSTPOL, e_IRREDPOL,28,850
  e_CONSTPOL, e_IRREDPOL, e_COPRIME,28,850
  e_CONSTPOL, e_IRREDPOL, e_COPRIME, e_PRIME,28,850
  e_CONSTPOL, e_IRREDPOL, e_COPRIME, e_PRIME, e_MODULUS,28,850
  e_CONSTPOL, e_IRREDPOL, e_COPRIME, e_PRIME, e_MODULUS, e_ROOTS0,28,850
  e_OP,30,918
  e_OP, e_TYPE2,30,918
  e_OP, e_TYPE2, e_INV,30,918
  e_MEM,32,943
  e_SQRTN,34,953
  e_NONE37,980
enum { warner,40,993
enum { warner, warnprec,40,993
enum { warner, warnprec, warnfile,40,993
enum { warner, warnprec, warnfile, warnmem,40,993
enum { warner, warnprec, warnfile, warnmem, warnuser,40,993
enum { warner, warnprec, warnfile, warnmem, warnuser, warnstack 40,993

/home/mengxue/pari/src/headers/pariold.h,10456
#define mathell 16,644
#define ghell 17,676
#define mpexp1 18,700
#define ggamd 19,723
#define gach 20,745
#define gash 21,765
#define gath 22,785
#define gch 23,805
#define gsh 24,823
#define gth 25,841
#define recip 26,859
#define gcmpX 27,884
#define ZM_hnfremdiv 28,906
#define rnfidealhermite 29,940
#define rnfelementabstorel 30,976
#define rnfelementreltoabs 31,1018
#define rnfelementdown 32,1060
#define rnfelementup 33,1094
#define exp_Ir 34,1124
#define vecbezout 35,1145
#define vecbezoutres 36,1171
#define init_primepointer 37,1208
#define geulerphi 38,1256
#define numbdiv 39,1283
#define gnumbdiv 40,1306
#define gsumdivk 41,1330
#define gnextprime 42,1355
#define gprecprime 43,1384
#define leftright_pow_fold 44,1413
#define leftright_pow_u_fold 45,1453
#define subell 46,1496
#define addell 47,1518
#define powell 48,1540
#define ggval 49,1562
#define stackmalloc 50,1587
#define fprintferr 51,1620
#define msgTIMER 52,1650
#define TIMER 53,1680
#define TIMERread 54,1706
#define TIMERstart 55,1734
#define rnfinitalg 56,1765
#define ordell 57,1792
#define gcmp0 58,1819
#define gcmp1 59,1841
#define gcmp_1 60,1863
#define nfsmith 61,1887
#define certifybuchall 62,1909
#define greffe(63,1943
#define newbloc 64,1983
#define killbloc 65,2008
#define taille2 66,2035
#define taille 67,2061
#define polymodrecip 68,2086
#define primedec 69,2118
#define initalg 70,2149
#define initalgred 71,2172
#define initalgred2 72,2201
#define initell 73,2232
#define smallinitell 74,2256
#define isunit 75,2290
#define zideallog 76,2315
#define ideallllred 77,2342
#define ideal_two_elt 78,2372
#define ideal_two_elt2 79,2406
#define ideal_two_elt0 80,2442
#define gregula 81,2478
#define gfundunit 82,2508
#define minideal(83,2535
#define idealhermite 84,2577
#define srgcd(85,2607
#define nfdiscf0(86,2635
#define discf(87,2666
#define discsr(88,2693
#define factorpadic4 89,2728
#define smith2 90,2761
#define gsmith2 91,2785
#define derivpol 92,2811
#define gpmalloc 93,2838
#define gprealloc 94,2867
#define gpfree 95,2898
#define pariprintf 96,2923
#define pariputc 97,2954
#define pariputs 98,2981
#define pariflush 99,3008
#define ellap0(100,3037
#define apell2(101,3073
#define apell 105,3201
#define gscalsmat 106,3221
#define sqred 107,3251
#define signat 108,3276
#define infile 109,3298
#define errfile 110,3325
#define logfile 111,3354
#define voir 112,3383
#define pointch 113,3403
#define coordch 114,3434
#define Flx_rand 115,3465
#define FpX_rand 116,3493
#define galois 117,3521
#define sindexlexsort 118,3546
#define sindexsort 119,3581
#define sindexrank 120,3610
#define decomp 121,3639
#define gmodulcp 122,3663
#define forcecopy 123,3688
#define lseriesell 124,3712
#define uissquarerem 125,3742
#define Z_issquarerem 126,3776
#define gissquarerem 127,3812
#define gcarrecomplet 128,3846
#define gcarreparfait 129,3881
#define rnfhermitebasis 130,3913
#define wf 131,3949
#define wf1 132,3967
#define wf2 133,3987
#define coefs_to_col 134,4007
#define coefs_to_int 135,4035
#define coefs_to_pol 136,4063
#define coefs_to_vec 137,4091
#define localreduction 138,4119
#define idmat 139,4154
#define globalreduction 140,4174
#define taniyama(141,4211
#define chinois 142,4255
#define binome 143,4279
#define egalii 144,4303
#define gegal 145,4326
#define gegalgs 146,4347
#define gegalsg 147,4372
#define gzero 148,4397
#define gun 149,4417
#define gdeux 150,4437
#define realzero 151,4457
#define realzero_bit 152,4481
#define realun 153,4513
#define realmun 154,4535
#define gen2str 155,4559
#define gpui 156,4584
#define gpuigs 157,4602
#define classno3 158,4624
#define strtoGEN 159,4650
#define flisexpr 160,4679
#define flisseq 161,4708
#define lisseq 162,4736
#define lisGEN 163,4759
#define lisexpr 164,4789
#define permute 165,4813
#define permuteInv 166,4839
#define evallgef(167,4868
#define lgef 168,4890
#define setlgef 169,4906
#define leadingcoeff(170,4928
#define poldivres 171,4970
#define nfdivres 172,4998
#define gred 173,5024
#define pvaluation 174,5043
#define svaluation 175,5072
#define isprincipalrayall 176,5101
#define rayclassno 177,5142
#define rayclassnolist 178,5172
#define idealhermite2 179,5210
#define gener_Fp 180,5242
#define gener_Fl 181,5269
#define cyclo 182,5296
#define tchebi 183,5319
#define legendre 184,5348
#define subcyclo 185,5377
#define leftright_pow 186,5406
#define leftright_pow_u 187,5436
#define apprgen 189,5470
#define apprgen9 190,5496
#define factmod9 191,5523
#define ggrandocp 192,5549
#define glogagm 193,5575
#define logagm 194,5596
#define mpsqrtz 195,5618
#define adduumod 196,5655
#define subuumod 197,5679
#define muluumod 198,5703
#define divuumod 199,5727
#define powuumod 200,5751
#define invumod 201,5776
#define invsmod 202,5799
#define mpinvmod 203,5829
#define powmodulo 204,5853
#define mpsqrtmod 205,5878
#define mpsqrtnmod 206,5904
#define mpsqrt 207,5932
#define mpsqrtn 208,5954
#define resii 209,5978
#define resis 210,5999
#define ressi 211,6020
#define resss 212,6041
#define resiiz 213,6062
#define resisz 214,6085
#define ressiz 215,6108
#define resssz 216,6131
#define gres 217,6154
#define lres 218,6175
#define gdivise 219,6196
#define divise 220,6217
#define mpdivis 221,6238
#define mpdivisis 222,6261
#define mpent 223,6286
#define mpentz 224,6308
#define mpnegz(225,6332
#define mpabsz(227,6423
#define absrz(229,6514
#define negrz(230,6550
#define err 232,6587
#define init 233,6608
#define zero 235,6632
#define un 236,6658
#define deux 237,6684
#define lhalf 238,6710
#define t_FRACN 241,6764
#define t_RFRACN 242,6788
#define is_frac_t(243,6813
#define is_rfrac_t(244,6852
#define labsi 247,6904
#define labsr 248,6931
#define lach 249,6958
#define lacos 250,6987
#define ladd 251,7015
#define laddgs 252,7042
#define laddii 253,7071
#define laddir 254,7099
#define laddis 255,7127
#define laddrr 256,7155
#define laddsg 257,7183
#define laddsi 258,7212
#define laddrs 259,7240
#define laddsr 260,7268
#define ladj 261,7296
#define larg 262,7322
#define lash 263,7349
#define lasin 264,7378
#define lassmat 265,7406
#define latan 266,7441
#define lath 267,7469
#define lbezout 268,7498
#define lbinome 269,7527
#define lcaract 270,7558
#define lcaradj 271,7587
#define lceil 272,7616
#define lch 273,7644
#define lchangevar 274,7672
#define lclone 275,7707
#define lconcat 276,7736
#define lconj 277,7765
#define lcontent 278,7793
#define lcopy 279,7824
#define lcos 280,7852
#define lcvtoi 281,7879
#define lderiv 282,7908
#define ldet2 283,7936
#define ldet 284,7963
#define ldeuc 285,7989
#define ldiscsr 286,8017
#define ldiventgs 287,8046
#define ldiventsg 288,8080
#define ldivgs 289,8114
#define ldivii 290,8143
#define ldivir 291,8171
#define ldivis 292,8199
#define ldivmod 293,8227
#define ldivri 294,8257
#define ldivrr 295,8285
#define ldivrs 296,8313
#define ldivsg 297,8341
#define ldivsi 298,8372
#define ldivsr 299,8400
#define ldvmdii 300,8428
#define ldvmdis 301,8457
#define ldvmdsi 302,8486
#define lexp 303,8515
#define lfibo 304,8542
#define lfloor 305,8569
#define lfrac 306,8598
#define lgamd 307,8626
#define lgamma 308,8656
#define lgauss 309,8685
#define lgcd 310,8713
#define lgetg 311,8740
#define lgeti 312,8768
#define lgetp 313,8796
#define lgetr 314,8824
#define licopy 315,8852
#define limag 316,8880
#define linteg 317,8908
#define linv 318,8936
#define linvmat 319,8963
#define linvmod 320,8993
#define llegendre 321,9023
#define llift 322,9056
#define llngamma 323,9083
#define llog 324,9116
#define lmaxgs 325,9143
#define lmax 326,9174
#define lmaxsg 327,9201
#define lmings 328,9232
#define lmin 329,9263
#define lminsg 330,9290
#define lmodgs 331,9321
#define lmodii 332,9352
#define lmod 333,9380
#define lmodsg 334,9407
#define lmodsi 335,9438
#define lmodulcp 336,9466
#define lmodulo 337,9498
#define lmpabs 338,9530
#define lmpadd 339,9558
#define lmpcos 340,9586
#define lmpdiv 341,9614
#define lmpent 342,9642
#define lmpeuler 343,9670
#define lmpexp1 344,9701
#define lmpexp 345,9731
#define lmpfact 346,9759
#define lmplog 347,9788
#define lmpmul 348,9816
#define lmpneg 349,9844
#define lmppgcd 350,9872
#define lmppi 351,9901
#define lmpshift 352,9928
#define lmpsin 353,9959
#define lmpsqrt 354,9987
#define lmpsub 355,10016
#define lmptrunc 356,10044
#define lmul2n 357,10075
#define lmulgs 358,10104
#define lmulii 359,10133
#define lmulir 360,10161
#define lmulis 361,10189
#define lmul 362,10217
#define lmulri 363,10244
#define lmulrr 364,10272
#define lmulrs 365,10300
#define lmulsg 366,10328
#define lmulsi 367,10357
#define lmulsr 368,10385
#define lmulss 369,10413
#define lnegi 370,10441
#define lneg 371,10468
#define lnegr 372,10495
#define lnorml2 373,10522
#define lnorm 374,10552
#define lpile 375,10580
#define lpilecopy 376,10611
#define lpileupto 377,10648
#define lpileuptoint 378,10685
#define lpileuptoleaf 379,10728
#define lpoleval 380,10773
#define lpowgs 381,10804
#define lprec 382,10833
#define lpsi 383,10861
#define lpuigs 384,10888
#define lpui 385,10917
#define lquadgen 386,10944
#define lquadpoly 387,10975
#define lracine 388,11008
#define lrcopy 389,11038
#define lreal 390,11066
#define lrecip 391,11094
#define lred 392,11122
#define lremii 393,11149
#define lrem 394,11177
#define lrndtoi 395,11204
#define lroots 396,11234
#define lscalmat 397,11262
#define lscalsmat 398,11295
#define lsh 399,11331
#define lshifti 400,11359
#define lshift 401,11388
#define lshiftr 402,11417
#define lsin 403,11446
#define lsqri 404,11473
#define lsqr 405,11500
#define lsqrt 406,11527
#define lstoi 407,11555
#define lsub 408,11582
#define lsubgs 409,11609
#define lsubii 410,11638
#define lsubir 411,11666
#define lsubis 412,11694
#define lsubres 413,11722
#define lsubri 414,11754
#define lsubrr 415,11782
#define lsubrs 416,11810
#define lsubst 417,11838
#define lsubsg 418,11867
#define lsubsi 419,11896
#define lsubsr 420,11924
#define ltan 421,11952
#define ltchebi 422,11979
#define lth 423,12014
#define ltrace 424,12042
#define ltrans 425,12071
#define ltrunc 426,12100
#define lutoi 427,12129
#define lround 428,12156
#define ldiv 429,12185

/home/mengxue/pari/src/headers/parinf.h,2551
  typ_NULL 16,615
  typ_POL,17,631
  typ_Q,18,642
  typ_NF,19,651
  typ_BNF,20,661
  typ_BNR,21,672
  typ_ELL,22,683
  typ_QUA,23,715
  typ_GAL,24,747
  typ_BID,25,779
  typ_PRID,26,790
  typ_MODPR,27,802
  typ_RNF28,815
  al_NULL 33,861
  al_TABLE,34,876
  al_CSA,35,888
  al_CYCLIC36,898
  al_INVALID 41,959
  al_TRIVIAL,42,977
  al_ALGEBRAIC,43,991
  al_BASIS,44,1007
  al_MATRIX45,1019
  id_PRINCIPAL 50,1057
  id_PRIME,51,1077
  id_MAT52,1089
  GEN x;56,1119
  GEN x0;57,1172
  GEN bas;58,1228
  long r1;59,1278
  GEN dK;61,1371
  GEN dKP;62,1395
  GEN index;64,1527
  GEN unscale;65,1563
  GEN dx;66,1616
  GEN basden;67,1642
} nfbasic_t;68,1685
  GEN T,71,1716
  GEN T, dT;71,1716
  GEN T0;72,1770
  GEN unscale;73,1809
  GEN dK;74,1862
  GEN index;75,1897
  GEN dTP,76,1954
  GEN dTP, dTE;76,1954
  GEN dKP,77,2035
  GEN dKP, dKE;77,2035
  GEN basis;78,2116
} nfmaxord_t;79,2161
  GEN x;82,2193
  GEN ro;83,2202
  long r1;84,2231
  GEN basden;85,2242
  long prec;86,2256
  long extraprec;88,2316
  GEN M;90,2383
  GEN G;91,2392
} nffp_t;92,2401
struct qfr_data 95,2430
struct qfr_data { GEN D,95,2430
struct qfr_data { GEN D, sqrtD,95,2430
struct qfr_data { GEN D, sqrtD, isqrtD;95,2430
  nf_ORIG 99,2521
  nf_GEN 100,2536
  nf_ABSOLUTE 101,2550
  nf_FORCE 102,2569
  nf_ALL 103,2585
  nf_GENMAT 104,2599
  nf_INIT 105,2616
  nf_RAW 106,2631
  nf_RED 107,2645
  nf_PARTIALFACT 108,2659
  nf_ROUND2 109,2682
  nf_ADDZK 110,2715
  nf_GEN_IF_PRINCIPAL 111,2734
  rnf_REL 115,2773
  rnf_COND 116,2788
  LLL_KER 121,2824
  LLL_IM 122,2858
  LLL_ALL 123,2891
  LLL_GRAM 124,2928
  LLL_GRAM       = 0x100,x100124,2928
  LLL_KEEP_FIRST 125,2954
  LLL_KEEP_FIRST = 0x200,x200125,2954
  LLL_INPLACE 126,2980
  LLL_INPLACE    = 0x400,x400126,2980
  LLL_COMPATIBLE 127,3006
  LLL_COMPATIBLE = 0x800 x800127,3006
enum { hnf_MODID 131,3094
enum { hnf_MODID = 1, hnf_PART 131,3094
enum { hnf_MODID = 1, hnf_PART = 2, hnf_CENTER 131,3094
  min_ALL 135,3172
  min_FIRST 136,3193
  min_PERF 137,3214
  min_VECSMALL 138,3235
  min_VECSMALL2 139,3256
  min_TOFILE 140,3277
typedef struct FP_chk_fun 143,3325
  GEN (*f)f144,3353
  GEN (*f_init)f_init146,3434
  GEN (*f_post)f_post147,3479
  void *data;data148,3524
  long skipfirst;149,3538
} FP_chk_fun;150,3556
  GEN lists;154,3614
  GEN ind;155,3644
  GEN P,156,3687
  GEN P, e;156,3687
  GEN archp;157,3740
  long n;158,3810
  GEN U;159,3889
} zlog_S;160,3950
#define coltoliftalg(175,4508

/home/mengxue/pari/src/headers/parisys.h,608
#  define   LITTLE_ENDIAN_64 17,668
#  define   BIG_ENDIAN_64 20,735
#  define   LITTLE_ENDIAN 23,802
#  define   BIG_ENDIAN 26,859
#  define   PDP_ENDIAN 29,916
#  define ANYARG 33,974
#  define BEGINEXTERN 34,995
#  define ENDEXTERN 35,1030
#  define ANYARG37,1058
#  define BEGINEXTERN38,1075
#  define ENDEXTERN39,1097
#  undef ASMINLINE43,1147
#    define INLINE 46,1193
#    define INLINE 48,1252
#    define VOLATILE 54,1349
#  define VOLATILE59,1413
#  define INLINE 62,1454
#  define THREAD 65,1503
#  define THREAD67,1535
#define CHECK_CTRLC 79,1990
#define CHECK_CTRLC81,2048

/home/mengxue/pari/src/systems/darwin/dlfcn.h,463
#define _DLFCN_H_31,1413
typedef struct dl_info 42,1517
        const char      *dli_fname;dli_fname43,1542
        void            *dli_fbase;dli_fbase44,1614
        const char      *dli_sname;dli_sname45,1690
        void            *dli_saddr;dli_saddr46,1759
} Dl_info;47,1831
#define RTLD_LAZY 56,2059
#define RTLD_NOW 57,2088
#define RTLD_LOCAL 58,2116
#define RTLD_GLOBAL 59,2146
#define RTLD_NOLOAD 60,2177
#define RTLD_NODELETE 61,2209

/home/mengxue/pari/src/systems/darwin/darwin.c,251
#define ERR_STR_LEN 37,1369
static const char *error(error43,1569
void *dlopen(dlopen67,2049
is_mach_header(126,4188
void *dlsymIntern(dlsymIntern133,4466
const char *dlerror(dlerror161,5256
int dlclose(166,5320
void *dlsym(dlsym182,5674

/home/mengxue/pari/src/systems/cygwin/cygwin.c,28
char* win32_datadir(19,645

/home/mengxue/pari/src/systems/mingw/mingw.c,323
static const char * pariwin32_basedir 20,675
win32_basedir(23,734
win32_datadir(39,1062
win32_console_color(48,1227
win32_ansi_fputs(72,1955
win32_terminal_width(120,2902
win32_terminal_height(129,3113
win32_set_pdf_viewer(138,3326
static HANDLE hTimerQueue 161,3916
win32_cb_alarm(164,3972
win32_alarm(172,4114

/home/mengxue/pari/src/systems/winCE/pariCE.c,256
int isspace(5,43
int isdigit(11,155
int isxdigit(16,238
int isalpha(23,416
int isalnum(29,546
static int checkDigit(36,723
long strtol(47,979
#define MAX_FILENAME_LEN 122,2995
int rename(124,3035
int unlink(135,3413
void *calloc(calloc145,3613

/home/mengxue/pari/src/systems/winCE/pariCE.h,22
#define PARICE_H3,50

/home/mengxue/pari/src/systems/os2/dlfcn.h,49
#define RTLD_LAZY 1,0
#define RTLD_GLOBAL 2,20

/home/mengxue/pari/src/systems/os2/os2.c,397
#define INCL_BASE3,20
static ULONG retcode;10,134
static char fail[fail11,156
static ULONG dllHandle;13,180
static char dllname[dllname14,204
static int handle_found;15,229
static int handle_loaded;16,254
unsigned long _DLL_InitTerm(19,304
find_myself(40,696
dlopen(70,1450
#define ERROR_WRONG_PROCTYPE 129,3490
dlsym(132,3538
dlerror(150,4011
dlclose(187,5240
get_stack(198,5399

/home/mengxue/pari/src/language/parse.h,981
# define YY_PARI_SRC_LANGUAGE_PARSE_H_INCLUDED34,1560
# define YYDEBUG 37,1644
# define YYTOKENTYPE45,1752
  enum yytokentype46,1773
    KPARROW 48,1796
    KARROW 49,1815
    KDOTDOT 50,1833
    KPE 51,1852
    KSE 52,1867
    KME 53,1882
    KDE 54,1897
    KDRE 55,1912
    KEUCE 56,1928
    KMODE 57,1945
    KAND 58,1962
    KOR 59,1978
    KID 60,1993
    KEQ 61,2008
    KNE 62,2023
    KGE 63,2038
    KLE 64,2053
    KSRE 65,2068
    KSLE 66,2084
    KSR 67,2100
    KSL 68,2115
    KDR 69,2130
    KPP 70,2145
    KSS 71,2160
    KINTEGER 72,2175
    KREAL 73,2195
    KENTRY 74,2212
    KSTRING 75,2230
    SEQ 76,2249
    DEFFUNC 77,2264
    INT 78,2283
    LVAL 79,2298
    SIGN 80,2314
typedef struct YYLTYPE YYLTYPE;88,2439
struct YYLTYPE89,2471
  int first_line;91,2488
  int first_column;92,2506
  int last_line;93,2526
  int last_column;94,2543
# define YYLTYPE_IS_DECLARED 96,2565
# define YYLTYPE_IS_TRIVIAL 97,2596

/home/mengxue/pari/src/language/members.c,1167
is_ell5(23,985
INLINE int is_ell(29,1122
member_err(35,1223
member_e(38,1285
member_e(38,1285
member_f(46,1381
member_f(46,1381
member_p(58,1541
member_p(58,1541
member_bid(83,2058
member_bid(83,2058
member_bnf(95,2240
member_bnf(95,2240
member_nf(103,2343
member_nf(103,2343
member_zk(116,2591
member_zk(116,2591
member_disc(136,2909
member_disc(136,2909
member_pol(153,3212
member_pol(153,3212
member_polabs(173,3624
member_polabs(173,3624
member_mod(181,3753
member_mod(181,3753
member_sign(200,4162
member_sign(200,4162
member_r1(207,4288
member_r1(207,4288
member_r2(209,4344
member_r2(209,4344
member_index(212,4401
member_index(212,4401
nfmats(225,4653
member_t2(235,4785
member_t2(235,4785
member_diff(243,4929
member_diff(243,4929
member_codiff(251,5064
member_codiff(251,5064
member_roots(262,5315
member_roots(262,5315
check_RES(282,5799
_member_clgp(291,5957
_check_clgp(312,6416
member_clgp(315,6512
member_clgp(315,6512
member_reg(319,6598
member_reg(319,6598
member_fu(333,6854
member_fu(333,6854
member_tu(353,7297
member_tu(353,7297
member_futu(376,7805
member_futu(376,7805
member_tufu(382,7937
member_tufu(382,7937
member_zkst(390,8187
member_zkst(390,8187
member_no(406,8478
member_no(406,8478
member_cyc(420,8780
member_cyc(420,8780
member_gen(436,9174
member_gen(436,9174
member_group(453,9548
member_group(453,9548
member_orders(462,9759
member_orders(462,9759
member_a1(471,9924
member_a1(471,9924
member_a2(478,10013
member_a2(478,10013
member_a3(485,10102
member_a3(485,10102
member_a4(492,10191
member_a4(492,10191
member_a6(499,10280
member_a6(499,10280
member_b2(506,10369
member_b2(506,10369
member_b4(513,10457
member_b4(513,10457
member_b6(520,10545
member_b6(520,10545
member_b8(527,10633
member_b8(527,10633
member_c4(534,10721
member_c4(534,10721
member_c6(541,10809
member_c6(541,10809
member_j(548,10897
member_j(548,10897
ell_is_complex(555,10989
member_omega(559,11084
member_omega(559,11084
member_eta(567,11269
member_eta(567,11269
member_area(575,11446
member_area(575,11446
member_tate(589,11825
member_tate(589,11825

/home/mengxue/pari/src/language/gplib.c,2654
pari_skip_space(37,1458
pari_skip_alpha(43,1551
static Buffer **bufstack;bufstack54,1990
static pari_stack s_bufstack;55,2016
pari_init_buffers(57,2051
pop_buffer(61,2151
kill_buffers_upto(69,2304
kill_buffers_upto_including(77,2437
static int disable_exception_handler 85,2594
#define BLOCK_EH_START 86,2636
#define BLOCK_EH_END 91,2790
gp_handle_exception(96,2902
pari_hit_return(112,3507
has_ext_help(126,3865
compare_str(129,3942
print_fun_list(136,4158
static const long MAX_SECTION 169,4839
commands(171,4887
pari_center(200,5543
community(215,5864
gentypes(235,6817
menu_commands(266,8529
slash_commands(298,9848
member_commands(332,11185
#define QUOTE 370,13428
#define DOUBQUOTE 371,13451
#define BACKQUOTE 372,13482
_cat(375,13528
filter_quotes(381,13621
nl_read(412,14361
external_help(416,14517
const char *keyword_list[keyword_list452,15474
ok_external_help(473,15709
cut_trailing_garbage(486,16014
digit_help(497,16243
simple_help(512,16529
default_help(515,16623
help(524,16779
gp_help(609,18960
what_readline(628,19626
what_cc(641,19893
#    define Format 646,19960
#    define Format 648,19998
convert_time(664,20273
gp_format_time(691,20822
err_gprc(713,21461
get_home(721,21622
gprc_chk(737,22016
gprc_get(746,22248
read_uint(789,23204
read_dot_uint(797,23372
read_version(804,23488
get_preproc_value(814,23641
next_expr(856,24584
filtered_buffer(878,24927
parse_key_val(889,25177
gp_initrc(901,25452
gp_load_gprc(965,27177
readline_prompt_color(990,28048
brace_color(1001,28307
color_prompt(1014,28588
color_prompt(1028,28939
gp_format_prompt(1032,29026
is_interactive(1050,29615
static const char esc 1053,29701
strip_prompt(1055,29772
update_logfile(1076,30186
gp_echo_and_log(1103,30902
get_line_from_file(1120,31326
gp_read_line(1143,31955
static THREAD pari_timer ti_alarm;1194,33485
gp_alarm_fun(1198,33573
gp_sigint_fun(1207,33760
break_loop_prompt(1218,34016
gp_alarm_handler(1229,34215
gp_allocatemem(1247,34831
gp_allocatemem(1247,34831
gp_input(1263,35168
gp_input(1263,35168
closure_alarmer(1276,35427
pari_alarm(1296,35992
gp_alarm(1310,36235
gp_alarm(1310,36235
prettyp_wait(1325,36902
prettyp_init(1337,37209
tex2mail_output(1351,37541
atocolor(1417,39389
sd_graphcolormap(1426,39502
sd_graphcolors(1519,42105
sd_help(1557,43015
sd_prompt_set(1579,43544
sd_prompt(1591,43825
sd_prompt_cont(1594,43924
sd_breakloop(1598,44039
sd_echo(1601,44147
sd_timer(1604,44240
sd_recover(1607,44337
sd_psfile(1611,44440
sd_lines(1615,44539
sd_linewrap(1618,44654
sd_readline(1631,44960
sd_histfile(1643,45373
pari_print_version(1665,46110
escape(1687,46801
chron(1787,49712
gp_meta(1804,50202

/home/mengxue/pari/src/language/eval.c,4572
static THREAD long br_status,25,1005
static THREAD long br_status, br_count;25,1005
static THREAD GEN br_res;26,1045
loop_break(29,1077
reset_break(44,1402
return0(51,1508
return0(51,1508
next0(60,1664
next0(60,1664
break0(73,1866
break0(73,1866
enum {PUSH_VAL PUSH_VAL90,2560
enum {PUSH_VAL = 0, COPY_VAL 90,2560
enum {PUSH_VAL = 0, COPY_VAL = 1, DEFAULT_VAL 90,2560
typedef struct var_cell 94,2701
  struct var_cell *prev;prev95,2727
  GEN value;96,2801
  char flag;97,2873
  long valence;98,2938
} var_cell;100,3050
#define INITIAL 101,3062
new_val_cell(105,3142
pop_val(124,3778
freeep(137,4041
pushvalue(153,4447
zerovalue 158,4526
pop_val_if_newer(174,4939
changevalue(189,5337
copyvalue(202,5685
err_var(214,5902
enum chk_VALUE 216,5978
enum chk_VALUE { chk_ERROR,216,5978
enum chk_VALUE { chk_ERROR, chk_NOCREATE,216,5978
enum chk_VALUE { chk_ERROR, chk_NOCREATE, chk_CREATE 216,5978
checkvalue(219,6047
checkvalueptr(242,6645
lvar_make_safe(250,6816
check_array_index(267,7253
safegel(274,7418
safelistel(283,7564
safeel(294,7767
safegcoeff(303,7905
typedef struct matcomp311,8093
  GEN *ptcell;ptcell313,8118
  GEN parent;314,8133
  int full_col,315,8147
  int full_col, full_row;315,8147
} matcomp;316,8173
typedef struct gp_pointer318,8185
  matcomp c;320,8213
  GEN x,321,8226
  GEN x, ox;321,8226
  entree *ep;ep322,8239
  long vn;323,8253
  long sp;324,8264
} gp_pointer;325,8275
change_compo(330,8379
struct var_lex370,9592
  long flag;372,9609
  GEN value;373,9622
struct trace376,9639
  long pc;378,9654
  GEN closure;379,9665
static THREAD long sp,382,9684
static THREAD long sp, rp,382,9684
static THREAD long sp, rp, dbg_level;382,9684
static THREAD long *st,st383,9722
static THREAD long *st, *precs;precs383,9722
static THREAD gp_pointer *ptrs;ptrs384,9754
static THREAD entree **lvars;lvars385,9786
static THREAD struct var_lex *var;var386,9816
static THREAD struct trace *trace;trace387,9851
static THREAD pari_stack s_st,388,9886
static THREAD pari_stack s_st, s_ptrs,388,9886
static THREAD pari_stack s_st, s_ptrs, s_var,388,9886
static THREAD pari_stack s_st, s_ptrs, s_var, s_lvars,388,9886
static THREAD pari_stack s_st, s_ptrs, s_var, s_lvars, s_trace,388,9886
static THREAD pari_stack s_st, s_ptrs, s_var, s_lvars, s_trace, s_prec;388,9886
changelex(391,9971
copylex(400,10175
pushlex(412,10357
freelex(420,10473
restore_vars(427,10595
restore_trace(439,10801
trace_push(451,10985
push_lex(463,11165
get_lex(473,11333
set_lex(480,11415
pop_lex(488,11577
static THREAD pari_stack s_relocs;497,11676
static THREAD entree **relocs;relocs498,11711
pari_init_evaluator(501,11748
pari_close_evaluator(519,12321
new_ptr(531,12584
push_localprec(549,12886
pop_localprec(556,12971
get_localprec(562,13015
localprec(568,13093
copyupto(577,13327
closure_return(588,13514
closure_evalbrk(605,13796
closure_varn(619,14014
closure_castgen(627,14121
closure_castlong(651,14478
closure_func_err(669,14746
get_next_label(687,15364
get_arg_name(705,15899
closure_err(712,16012
pari_self(758,17545
pari_self(758,17545
closure_context(766,17684
st_alloc(780,18085
ptr_proplock(791,18270
closure_eval(803,18428
#define EVAL_f(1216,28759
#undef EVAL_f1291,32808
closure_evalgen(1455,36856
evalstate_save(1464,37016
evalstate_restore(1478,37314
evalstate_restore_err(1492,37654
evalstate_reset(1500,37811
evalstate_clone(1515,38045
closure_trapgen(1528,38273
closure_evalnobrk(1540,38544
closure_evalvoid(1549,38722
closure_evalres(1557,38808
closure_returnupto(1563,38875
pareval_worker(1570,38975
pareval_worker(1570,38975
pareval(1576,39041
parvector_worker(1600,39669
parvector_worker(1600,39669
parfor_worker(1606,39742
parfor_worker(1606,39742
parvector(1612,39826
parsum(1633,40336
parfor(1667,41149
gp_evalvoid2(1703,42151
parfor0(1714,42323
parfor0(1714,42323
parforprime(1720,42440
parforprime0(1755,43372
parforprime0(1755,43372
parforvec(1761,43498
parforvec0(1797,44453
parforvec0(1797,44453
closure_callvoid1(1803,44582
closure_callgen1(1812,44745
closure_callgen1prec(1821,44915
closure_callgen2(1834,45161
closure_callgenvec(1845,45373
closure_callgenvecprec(1857,45708
closure_callgenall(1867,45867
gp_eval(1882,46237
gp_evalupto(1890,46342
gp_evalprec(1897,46442
gp_evalbool(1907,46576
gp_evalvoid(1915,46698
gp_call(1924,46822
gp_callprec(1931,46912
gp_call2(1938,47027
gp_callbool(1945,47129
gp_callvoid(1954,47285
disassemble_cast(1962,47412
closure_disassemble(1980,47637
opcode_need_relink(2228,53612
closure_relink(2302,54887
gen_relink(2318,55381
closure_unlink(2338,55860
gen_unlink(2360,56399
copybin_unlink(2380,56819
hash_from_link(2418,57683
bincopy_relink(2432,58004

/home/mengxue/pari/src/language/opcode.h,3565
typedef enum {Gvoid,Gvoid16,591
typedef enum {Gvoid, Gsmall,16,591
typedef enum {Gvoid, Gsmall, Gvec,16,591
typedef enum {Gvoid, Gsmall, Gvec, Gvar,16,591
typedef enum {Gvoid, Gsmall, Gvec, Gvar, Ggen,16,591
typedef enum {Gvoid, Gsmall, Gvec, Gvar, Ggen, Gclosure,16,591
typedef enum {Gvoid, Gsmall, Gvec, Gvar, Ggen, Gclosure, Gusmall}Gusmall16,591
typedef enum {Gvoid, Gsmall, Gvec, Gvar, Ggen, Gclosure, Gusmall} Gtype;16,591
typedef enum {OCpushlong=OCpushlong18,665
typedef enum {OCpushlong='A',OCpushgnil,18,665
typedef enum {OCpushlong='A',OCpushgnil,OCpushgen,18,665
typedef enum {OCpushlong='A',OCpushgnil,OCpushgen,OCpushreal,18,665
typedef enum {OCpushlong='A',OCpushgnil,OCpushgen,OCpushreal,OCpushstoi,18,665
typedef enum {OCpushlong='A',OCpushgnil,OCpushgen,OCpushreal,OCpushstoi,OCpushvar,18,665
              OCpop,19,748
              OCstoi,20,769
              OCstoi,OCitos,20,769
              OCstoi,OCitos,OCtostr,20,769
              OCstoi,OCitos,OCtostr,OCvarn,20,769
              OCstoi,OCitos,OCtostr,OCvarn,OCcopy,20,769
              OCstoi,OCitos,OCtostr,OCvarn,OCcopy,OCcopyifclone,20,769
              OCprecreal,21,834
              OCprecreal,OCprecdl,21,834
              OCvec,22,869
              OCvec,OCmat,22,869
              OCvec,OCmat,OCcol,22,869
              OCstackgen,23,902
              OCcompo1,24,928
              OCcompo1,OCcompo2,24,928
              OCcompo1,OCcompo2,OCcompoC,24,928
              OCcompo1,OCcompo2,OCcompoC,OCcompoL,24,928
              OCpushptr,25,979
              OCpushptr,OCendptr,25,979
              OCcompo1ptr,26,1013
              OCcompo1ptr,OCcompo2ptr,26,1013
              OCcompo1ptr,OCcompo2ptr,OCcompoCptr,26,1013
              OCcompo1ptr,OCcompo2ptr,OCcompoCptr,OCcompoLptr,26,1013
              OCcalllong,27,1076
              OCcalllong,OCcallgen,27,1076
              OCcalllong,OCcallgen,OCcallgen2,27,1076
              OCcalllong,OCcallgen,OCcallgen2,OCcallint,27,1076
              OCcalllong,OCcallgen,OCcallgen2,OCcallint,OCcallvoid,27,1076
              OCcalllong,OCcallgen,OCcallgen2,OCcallint,OCcallvoid,OCcalluser,27,1076
              OCnewframe,28,1155
              OCnewframe,OCsaveframe,28,1155
              OCpushdyn,29,1193
              OCpushdyn,OCstoredyn,29,1193
              OCpushdyn,OCstoredyn,OCnewptrdyn,29,1193
              OCpushdyn,OCstoredyn,OCnewptrdyn,OCsimpleptrdyn,29,1193
              OCpushlex,30,1256
              OCpushlex,OCstorelex,30,1256
              OCpushlex,OCstorelex,OCnewptrlex,30,1256
              OCpushlex,OCstorelex,OCnewptrlex,OCsimpleptrlex,30,1256
              OCgetargs,31,1319
              OCgetargs,OCdefaultarg,31,1319
              OCgetargs,OCdefaultarg,OClocalvar,31,1319
              OCgetargs,OCdefaultarg,OClocalvar,OClocalvar0,31,1319
              OCcheckargs,32,1380
              OCcheckargs,OCcheckargs0,32,1380
              OCcheckargs,OCcheckargs0,OCdefaultgen,32,1380
              OCcheckargs,OCcheckargs0,OCdefaultgen,OCdefaultlong,32,1380
              OCavma,33,1447
              OCavma,OCgerepile,33,1447
              OCcowvardyn,34,1480
              OCcowvardyn,OCcowvarlex,34,1480
              OCdup,35,1519
              OCdup,OCstoreptr,35,1519
              OCdup,OCstoreptr,OCcheckuserargs,35,1519
              OCitou,36,1567
              OCitou,OCutoi,36,1567
              OCitou,OCutoi,OCdefaultulong}OCdefaultulong36,1567
              OCitou,OCutoi,OCdefaultulong} op_code;36,1567

/home/mengxue/pari/src/language/paricfg.c,375
const char *paricfg_datadir paricfg_datadir15,591
const char *paricfg_version paricfg_version16,632
const char *paricfg_buildinfo paricfg_buildinfo17,675
const long  paricfg_version_code 18,717
const char *paricfg_vcsversion paricfg_vcsversion19,771
const char *paricfg_compiledate paricfg_compiledate20,821
const char *paricfg_mt_engine paricfg_mt_engine21,865

/home/mengxue/pari/src/language/parsec.h,659
static THREAD int pari_once;22,693
static THREAD long pari_discarded;23,722
static THREAD const char *pari_lex_start;pari_lex_start24,757
static THREAD GEN pari_lasterror;25,799
static void pari_error(27,834
static THREAD pari_stack s_node;34,1012
THREAD node *pari_tree;pari_tree35,1045
pari_init_parser(38,1075
pari_close_parser(57,1832
compile_err(60,1894
compile_varerr(66,1998
parsestate_reset(72,2109
parsestate_save(81,2251
parsestate_restore(90,2471
pari_compile_str(100,2694
newnode(125,3239
newconst(138,3512
newopcall(144,3603
newopcall3(153,3805
countarg(159,3948
addcurrexpr(168,4070
newintnode(184,4466
newfunc(199,4812

/home/mengxue/pari/src/language/default.c,1381
get_sep(24,782
safe_mul(48,1196
my_int(58,1358
get_int(88,2115
get_uint(104,2438
getrealprecision(120,3001
setrealprecision(126,3063
sd_toggle(134,3182
sd_ulong_init(161,3794
sd_ulong(179,4240
sd_realprecision(203,4916
sd_seriesprecision(232,5693
gp_get_color(239,5873
sd_colors(271,6754
sd_format(326,8310
sd_compatible(357,9035
sd_secure(370,9331
sd_debug(378,9535
sd_debugfiles(382,9635
sd_debugmem(386,9745
init_hist(391,9899
sd_histsize(399,10066
TeX_define(440,10946
TeX_define2(444,11086
open_logfile(449,11234
sd_log(459,11403
sd_TeXstyle(500,12574
sd_nbthreads(510,12862
sd_output(514,12983
sd_parisizemax(526,13306
sd_parisize(540,13613
sd_threadsizemax(554,13922
sd_threadsize(564,14148
sd_primelimit(574,14362
sd_simplify(579,14527
sd_strictmatch(583,14633
sd_strictargs(587,14748
sd_string(591,14860
sd_logfile(617,15554
sd_factor_add_primes(629,15797
sd_factor_proven(633,15919
sd_new_galois_format(637,16029
sd_datadir(641,16151
sd_PATH(657,16506
sd_path(672,16861
sd_sopath(675,16951
static const char *DFT_PRETTYPRINTER DFT_PRETTYPRINTER678,17037
sd_prettyprinter(680,17123
compare_name(720,18179
defaults_list(725,18328
call_f2(734,18573
setdefault(737,18683
default0(762,19244
default0(762,19244
init_path(771,19724
init_fmt(779,19857
init_pp(791,20107
init_help(799,20227
init_graphs(813,20433
default_gp_data(837,20957

/home/mengxue/pari/src/language/intnum.c,3268
static const long EXTRAPREC 18,632
  void *E;E29,937
  GEN (*f)f30,948
} invfun;31,974
_invf(35,1015
interp(43,1137
qrom3(57,1493
qrom2(99,2711
qromi(142,4031
rom_bsmall(152,4261
rombint(162,4604
intnumgaussinit(186,5252
intnumgauss(217,6216
intnumgauss0(250,7051
intnumgauss0(250,7051
typedef struct _intdata 257,7384
  long eps;258,7410
  GEN tabx0;259,7463
  GEN tabw0;260,7507
  GEN tabxp;261,7551
  GEN tabwp;262,7606
  GEN tabxm;263,7661
  GEN tabwm;264,7732
  GEN h;265,7803
} intdata;266,7835
static const long LGTAB 268,7847
#define TABh(269,7876
#define TABx0(270,7901
#define TABw0(271,7927
#define TABxp(272,7953
#define TABwp(273,7979
#define TABxm(274,8005
#define TABwm(275,8031
isinR(278,8069
isinC(285,8174
checktabsimp(292,8313
checktabdoub(308,8797
checktab(321,9059
intinit_start(330,9244
intinit_end(342,9527
divr2_ip(357,9988
inittanhsinh(362,10144
initsinhsinh(402,11328
initsinh(439,12375
initexpsinh(473,13322
initexpexp(508,14245
initnumsine(549,15488
  f_REG 607,17510
  f_SING 608,17549
  f_YSLOW 609,17593
  f_YVSLO 610,17660
  f_YFAST 611,17733
  f_YOSCS 612,17789
  f_YOSCC 613,17837
is_fin_f(617,17919
is_osc(620,18008
intn(627,18306
intnsing(658,19320
static GEN id(686,20277
intninfpm(693,20571
intninfinf(754,22571
f_getycplx(794,23951
err_code(809,24286
code_aux(817,24444
transcode(838,24953
homtab(870,25730
expvec(886,26133
expscalpr(895,26306
expvecpr(901,26457
exptab(912,26699
init_fin(930,27209
intnuminit_i(945,27636
intnuminit(1014,29691
intnuminit0(1021,29825
weight(1038,30247
intfuncinit_i(1048,30589
intfuncinit(1077,31336
intnum_i(1092,31795
intnum(1192,35058
typedef struct auxint_s 1203,35354
  GEN a,1204,35380
  GEN a, R,1204,35380
  GEN a, R, pi;1204,35380
  GEN (*f)f1205,35396
  GEN (*w)w1206,35420
  long prec;1207,35443
  void *E;E1208,35456
} auxint_t;1209,35467
auxcirc(1212,35491
intcirc(1221,35684
intnumromb(1236,35962
intnumromb0(1253,36491
intnumromb0(1253,36491
intnum0(1256,36614
intnum0(1256,36614
intcirc0(1259,36726
intcirc0(1259,36726
intfuncinit0(1264,36878
intfuncinit0(1264,36878
typedef struct auxf_s 1270,37032
  GEN x;1271,37056
  GEN (*f)f1272,37065
  void *E;E1273,37095
} auxf_t;1274,37106
typedef struct indi_s 1276,37117
  GEN (*c)c1277,37141
  GEN (*d)d1278,37165
  GEN (*f)f1279,37189
  void *Ec;Ec1280,37219
  void *Ed;Ed1281,37231
  void *Ef;Ef1282,37243
  GEN tabintern;1283,37255
  long prec;1284,37272
} indi_t;1285,37285
auxf(1288,37307
intnumdoubintern(1295,37401
intnumdoub(1308,37626
intnumdoub0(1330,38213
contfrac_Euler(1355,39118
contfracinit_i(1370,39507
contfracinit(1401,40336
contfraceval_inv(1428,41114
contfraceval(1470,42462
monrefine(1480,42680
monroots(1499,43221
Pade(1510,43555
_zeta(1532,44111
gzetaprime(1536,44258
sumnummonieninit0(1541,44423
struct mon_w 1586,45574
  GEN w,1587,45589
  GEN w, a,1587,45589
  GEN w, a, b;1587,45589
  long n,1588,45604
  long n, j,1588,45604
  long n, j, prec;1588,45604
wrapmonw(1593,45673
wrapmonw2(1606,46082
sumnummonieninit_w(1614,46284
sumnummonieninit_i(1675,47781
sumnummonieninit(1724,48973
RgV_Rg_addall(1732,49165
sumnummonien(1741,49311
get_oo(1769,50187
sumnuminit(1772,50242
checksumtab(1817,51493
sumnum(1823,51646
sumnummonien0(1861,52723
sumnummonien0(1861,52723
sumnum0(1864,52837
sumnum0(1864,52837

/home/mengxue/pari/src/language/default.h,49
entree functions_default[functions_default4,98

/home/mengxue/pari/src/language/init.c,7118
#undef _GNU_SOURCE 20,998
#define _GNU_SOURCE21,1037
const double LOG2 33,1276
const double LOG10_2 34,1332
const double LOG2_10 35,1391
GEN gnil,37,1451
GEN gnil, gen_0,37,1451
GEN gnil, gen_0, gen_1,37,1451
GEN gnil, gen_0, gen_1, gen_m1,37,1451
GEN gnil, gen_0, gen_1, gen_m1, gen_2,37,1451
GEN gnil, gen_0, gen_1, gen_m1, gen_2, gen_m2,37,1451
GEN gnil, gen_0, gen_1, gen_m1, gen_2, gen_m2, ghalf,37,1451
GEN gnil, gen_0, gen_1, gen_m1, gen_2, gen_m2, ghalf, err_e_STACK;37,1451
static const ulong readonly_constants[readonly_constants39,1519
static const long readonly_ghalf[readonly_ghalf57,2021
static const ulong readonly_err_STACK[readonly_err_STACK62,2170
THREAD GEN    bernzone;66,2260
GEN     primetab;67,2284
byteptr diffptr;68,2327
FILE    *pari_outfile,pari_outfile69,2344
FILE    *pari_outfile, *pari_errfile,pari_errfile69,2344
FILE    *pari_outfile, *pari_errfile, *pari_logfile,pari_logfile69,2344
FILE    *pari_outfile, *pari_errfile, *pari_logfile, *pari_infile;pari_infile69,2344
char    *current_logfile,current_logfile70,2411
char    *current_logfile, *current_psfile,current_psfile70,2411
char    *current_logfile, *current_psfile, *pari_datadir;pari_datadir70,2411
long    gp_colors[gp_colors71,2469
int     disable_color;72,2496
ulong   DEBUGFILES,73,2519
ulong   DEBUGFILES, DEBUGLEVEL,73,2519
ulong   DEBUGFILES, DEBUGLEVEL, DEBUGMEM;73,2519
long    DEBUGVAR;74,2561
ulong   pari_mt_nbthreads;75,2579
long    precreal;76,2606
ulong   precdl,77,2624
ulong   precdl, logstyle;77,2624
gp_data *GP_DATA;GP_DATA78,2650
GEN colormap,80,2669
GEN colormap, pari_graphcolors;80,2669
entree  **varentries;varentries82,2702
long    *varpriority;varpriority83,2724
THREAD pari_sp avma;85,2747
THREAD struct pari_mainstack *pari_mainstack;pari_mainstack86,2768
static void ** MODULES;88,2815
static pari_stack s_MODULES;89,2839
const long functions_tblsz 90,2868
entree **functions_hash,functions_hash91,2931
entree **functions_hash, **defaults_hash;defaults_hash91,2931
const char * pari_library_path 108,3552
static THREAD GEN global_err_data;110,3592
THREAD jmp_buf *iferr_env;iferr_env111,3627
const long CATCH_ALL 112,3654
static THREAD long next_block;122,4096
static THREAD GEN cur_block;123,4127
static THREAD long NUM;125,4203
pari_init_blocks(129,4247
pari_close_blocks(138,4354
newblock(150,4615
gcloneref(172,5120
gclone_refc(179,5218
gunclone(182,5261
gunclone_deep(205,5885
pop_entree_block(227,6355
THREAD void *PARI_stack_limit PARI_stack_limit242,7023
pari_stackcheck_init(248,7149
pari_stackcheck_init(263,7667
pari_stackcheck_init(279,8125
struct getheap_t 288,8460
struct getheap_t { long n,288,8460
struct getheap_t { long n, l;288,8460
f_getheap(290,8505
getheap(297,8619
traverseheap(305,8752
pari_daemon(319,9295
pari_daemon(338,9871
static int try_to_recover 350,10330
THREAD VOLATILE int PARI_SIGINT_block 351,10361
dflt_sigint_fun(358,10696
int win32ctrlc 361,10804
dowin32ctrlc(363,10844
pari_handle_SIGINT(371,10925
pari_sighandler(381,11049
pari_sig_init(445,12322
init_universal_constants(471,12893
pari_init_errcatch(484,13242
pari_init_defaults(494,13539
init_hashtable(535,14557
gp_init_entrees(563,15157
gp_init_functions(572,15412
pari_init_functions(577,15559
pari_add_module(588,15963
pari_add_defaults_module(595,16080
#define PARI_STACK_ALIGN 604,16417
#define MAP_ANONYMOUS 606,16489
#define MAP_NORESERVE 609,16549
pari_mainstack_malloc(612,16594
pari_mainstack_mfree(620,16811
pari_mainstack_mreset(626,16890
#define PARI_STACK_ALIGN 632,16980
pari_mainstack_malloc(634,17028
pari_mainstack_mfree(640,17142
pari_mainstack_mreset(643,17224
static const size_t MIN_STACK 647,17304
fix_size(649,17360
pari_mainstack_alloc(659,17555
pari_mainstack_free(679,18082
pari_mainstack_resize(687,18295
pari_mainstack_use(696,18500
paristack_alloc(703,18597
paristack_setsize(710,18743
parivstack_resize(717,18892
paristack_newrsize(732,19386
paristack_resize(746,19800
parivstack_reset(758,20165
new_chunk_resize(767,20435
pari_thread_valloc(783,20976
pari_thread_alloc(793,21192
pari_thread_free(800,21315
pari_thread_init(806,21396
pari_thread_close(819,21609
pari_thread_start(830,21784
pari_exit(842,22129
dflt_err_recover(849,22242
dflt_pari_quit(852,22317
pari_init_opts(858,22495
pari_init(906,23816
pari_close_opts(910,23940
pari_close(958,25171
gp_context_save(967,25600
gp_context_restore(982,26009
err_recover(1021,26940
err_init(1032,27136
err_init_msg(1042,27354
pari_warn(1053,27593
pari_sigint(1106,28839
#define retmkerr2(1125,29283
#define retmkerr3(1129,29410
#define retmkerr4(1134,29564
#define retmkerr5(1140,29745
#define retmkerr6(1147,29953
pari_err2GEN(1157,30200
type_dim(1254,32773
pari_err2str(1278,33206
pari_err_display(1433,38665
pari_err(1467,39426
pari_err_last(1493,39904
numerr_name(1496,39966
name_numerr(1539,41354
errname(1579,43022
trap0(1587,43226
trap0(1587,43226
const  long lontyp[lontyp1609,44077
list_internal_copy(1612,44171
listassign(1624,44429
listcopy(1635,44700
gcopy(1644,44844
gcopy_lg(1666,45404
cgetg_copy_avma(1688,45971
cgetlist_avma(1696,46153
gcopy_avma(1705,46336
gcopy_av0(1734,47088
icopy_avma_canon(1759,47783
gcopy_av0_canon(1772,48188
taille0(1810,49186
taille0_nolist(1834,49696
words_to_allocate(1861,50350
gsizeword(1880,50712
gsizebyte(1889,50942
gsizebyte(1889,50942
copy_bin(1893,51056
copy_bin_canon(1906,51376
gclone(1918,51646
shiftaddress(1953,52427
shiftaddress_canon(1976,52858
obj_init(2023,54105
obj_insert(2031,54268
obj_insert_shallow(2036,54455
obj_check(2048,54779
obj_checkbuild(2056,54957
obj_checkbuild_prec(2065,55138
obj_checkbuild_realprec(2074,55383
obj_checkbuild_padicprec(2077,55524
obj_free(2082,55726
dec_gerepile(2101,56314
gerepileallsp(2111,56565
gerepilemanysp(2124,56964
gerepilecoeffssp(2136,57343
dochk_gerepileupto(2146,57598
chk_gerepileupto(2170,58104
dbg_gerepile(2174,58207
dbg_gerepileupto(2209,59095
gerepile(2216,59192
fill_stack(2243,59886
debug_stack(2250,59996
setdebugvar(2260,60256
getdebugvar(2263,60298
getstack(2266,60343
static THREAD clockid_t time_type 2288,61049
static const THREAD clockid_t time_type 2290,61116
pari_init_timer(2293,61203
timer_start(2301,61317
static THREAD int rusage_type 2311,61525
static const THREAD int rusage_type 2313,61578
pari_init_timer(2316,61666
timer_start(2324,61755
pari_init_timer(2334,61931
timer_start(2337,61963
_get_time(2348,62099
pari_init_timer(2359,62366
timer_start(2362,62398
pari_init_timer(2374,62616
timer_start(2377,62648
#   define CLOCKS_PER_SEC 2382,62767
pari_init_timer(2385,62856
timer_start(2388,62888
timer_aux(2394,62986
timer_delay(2401,63168
timer_get(2404,63266
timer_vprintf(2407,63347
timer_printf(2415,63556
timer(2423,63709
gettime(2425,63782
static THREAD pari_timer timer2_T,2427,63853
static THREAD pari_timer timer2_T, abstimer_T;2427,63853
timer2(2429,63905
msgtimer(2431,63958
getabstime(2438,64099
timetoi(2442,64258
getwalltime(2450,64395
pari_version(2473,65208
pari_version(2473,65208

/home/mengxue/pari/src/language/sumiter.c,2020
iferrpari(19,636
iferrpari(19,636
forparii(55,1541
forpari(88,2206
forpari(88,2206
whilepari(110,2709
whilepari(110,2709
untilpari(124,2925
untilpari(124,2925
static int negcmp(138,3146
forstep(141,3206
optimize_chunk(181,4026
sieve_init(199,4590
u_forprime_set_prime_table(212,4921
arith_set(227,5233
u_forprime_arith_init(241,5672
u_forprime_init(303,7164
u_forprime_restrict(307,7325
forprime_init(311,7417
sieve_block(345,8309
shift_cache(375,9131
u_forprime_next(385,9320
forprime_next(497,12491
forprime(517,12983
forcomposite_init(536,13404
forcomposite_next(558,13982
forcomposite(580,14417
fordiv(598,14842
_next_i(622,15388
_next(637,15728
_next_le_i(651,16035
_next_le(677,16717
_next_lt_i(703,17371
_next_lt(732,18125
_next_void(758,18787
forvec_init(769,19081
forvec_next(840,21301
forvec(843,21355
somme(865,22005
somme(865,22005
suminf(894,22555
suminf0(920,23136
suminf0(920,23136
sumdivexpr(924,23225
sumdivexpr(924,23225
sumdivmultexpr(939,23506
sumdivmultexpr(939,23506
produit(970,24398
produit(970,24398
prodinf(999,24954
prodinf1(1024,25563
prodinf0(1049,26177
prodinf0(1049,26177
prodeuler(1061,26434
prodeuler0(1083,26902
prodeuler0(1083,26902
direuler0(1086,27006
direuler0(1086,27006
copyupto(1096,27465
vecexpr0(1105,27611
vecexpr0(1105,27611
vecexpr1(1130,28190
vecexpr1(1130,28190
vecteur(1137,28317
vecteur(1137,28317
vecteursmall(1157,28717
vecteursmall(1157,28717
vvecteur(1177,29108
vvecteur(1177,29108
matrice(1184,29199
matrice(1184,29199
delt(1219,30316
polzag1(1235,30717
polzag(1285,32079
polzag(1285,32079
sumalt(1293,32227
sumalt2(1323,33035
sumalt0(1352,33761
sumalt0(1352,33761
binsum(1366,34144
sumpos_init(1404,35267
sumpos(1413,35475
sumpos2(1442,36181
sumpos0(1465,36724
sumpos0(1465,36724
zbrent(1483,37387
zbrent0(1554,39796
zbrent0(1554,39796
solvestep(1566,40096
solvestep0(1615,41588
solvestep0(1615,41588
struct deriv_data1622,41935
  GEN code;1624,41955
  GEN args;1625,41967
static GEN deriv_eval(1628,41983
derivnum(1643,42481
derivfun(1671,43190
derivnum0(1690,43725
derivnum0(1690,43725
derivfun0(1696,43823
derivfun0(1696,43823
extgetmf(1708,44209
get_u(1717,44447
struct limit1741,44928
  long prec0;1743,44943
  long prec;1744,44979
  long N;1745,45015
  GEN u;1746,45047
  GEN na;1747,45086
  GEN nma;1748,45120
  GEN coef;1749,45176
limit_init(1753,45231
limitnum_i(1802,46398
limitnum(1813,46633
limitnum0(1820,46806
limitnum0(1820,46806
asympnum(1835,47115
asympnum0(1864,47892
asympnum0(1864,47892

/home/mengxue/pari/src/language/anal.h,304
#define EXPR_WRAP(21,993
#define EXPR_ARG 24,1110
#define EXPR_ARGPREC 25,1141
#define EXPR_ARGUPTO 26,1180
#define EXPR_ARGBOOL 27,1219
struct node_loc43,1587
  const char *start,start45,1605
  const char *start,*end;end45,1605
union token_value 48,1635
union token_value { long val;48,1635

/home/mengxue/pari/src/language/pariinl.c,85
#define PARI_NO_MPINL_H13,572
#define INLINE14,596
#  define DISABLE_INLINE16,634

/home/mengxue/pari/src/language/compile.c,4126
#define tree 20,667
enum COflags 22,691
enum COflags {COsafelex=COsafelex22,691
enum COflags {COsafelex=1, COsafedyn=22,691
translate(31,1134
matchQ(58,1627
pari_translate_string(67,1895
strntoGENexp(75,2126
typedef enum {Llocal,Llocal89,2708
typedef enum {Llocal, Lmy}Lmy89,2708
typedef enum {Llocal, Lmy} Ltype;89,2708
struct vars_s91,2743
  Ltype type;93,2759
  int inl;94,2810
  entree *ep;ep95,2821
struct frame_s98,2839
  long pc;100,2856
  GEN frame;101,2867
static THREAD pari_stack s_opcode,104,2884
static THREAD pari_stack s_opcode, s_operand,104,2884
static THREAD pari_stack s_opcode, s_operand, s_data,104,2884
static THREAD pari_stack s_opcode, s_operand, s_data, s_lvar;104,2884
static THREAD pari_stack s_dbginfo,105,2946
static THREAD pari_stack s_dbginfo, s_frame;105,2946
static THREAD char *opcode;opcode106,2991
static THREAD long *operand;operand107,3019
static THREAD GEN *data;data108,3048
static THREAD long offset;109,3073
static THREAD struct vars_s *localvars;localvars110,3100
static THREAD const char **dbginfo,dbginfo111,3140
static THREAD const char **dbginfo, *dbgstart;dbgstart111,3140
static THREAD struct frame_s *frames;frames112,3187
pari_init_compiler(115,3231
pari_close_compiler(126,3659
struct codepos134,3815
  long opcode,136,3832
  long opcode, data,136,3832
  long opcode, data, localvars,136,3832
  long opcode, data, localvars, frames;136,3832
  long offset;137,3872
  const char *dbgstart;dbgstart138,3887
getcodepos(142,3927
compilestate_reset(154,4138
compilestate_save(167,4296
compilestate_restore(180,4568
getfunction(193,4849
getclosure(247,6318
op_push_loc(253,6405
op_push(264,6629
op_insert_loc(270,6713
data_push(288,7086
var_push(296,7200
frame_push(305,7363
pack_localvars(313,7494
push_frame(330,7776
debug_context(363,8514
localvars_read_str(375,8738
localvars_find(394,9048
enum FLflag 417,9569
enum FLflag {FLreturn=FLreturn417,9569
enum FLflag {FLreturn=1, FLsurvive=417,9569
enum FLflag {FLreturn=1, FLsurvive=2, FLnocopy=417,9569
enum FLflag {FLreturn=1, FLsurvive=2, FLnocopy=4, FLnocopylex=417,9569
copyifclone(420,9648
typedef enum {PPend,PPend433,9986
typedef enum {PPend,PPstd,433,9986
typedef enum {PPend,PPstd,PPdefault,433,9986
typedef enum {PPend,PPstd,PPdefault,PPdefaultmulti,433,9986
typedef enum {PPend,PPstd,PPdefault,PPdefaultmulti,PPstar,433,9986
typedef enum {PPend,PPstd,PPdefault,PPdefaultmulti,PPstar,PPauto}PPauto433,9986
typedef enum {PPend,PPstd,PPdefault,PPdefaultmulti,PPstar,PPauto} PPproto;433,9986
parseproto(436,10077
detag(512,11270
get_ret_type(521,11394
compilecast_loc(537,11966
compilecast(572,12953
fetch_member_raw(575,13056
getfunc(585,13310
getentry(595,13565
getvar(609,13883
getmvar(618,14019
ctxmvar(633,14241
is_func_named(651,14582
is_node_zero(657,14670
str_defproto(664,14770
countlisttogen(673,15020
listtogen(682,15187
first_safe_arg(695,15410
checkdups(703,15567
enum {MAT_range,MAT_range709,15703
enum {MAT_range,MAT_std,709,15703
enum {MAT_range,MAT_std,MAT_line,709,15703
enum {MAT_range,MAT_std,MAT_line,MAT_column,709,15703
enum {MAT_range,MAT_std,MAT_line,MAT_column,VEC_std}VEC_std709,15703
matindex_type(712,15769
getlvalue(734,16353
compilestore(742,16516
compilenewptr(751,16658
compilelvalue(760,16803
compilematcoeff(810,17951
compilesmall(855,19013
compilevec(869,19298
compilemat(888,19641
cattovec(924,20344
compilelambda(955,20967
compilecall(968,21376
compilefuncinline(1005,22231
countvar(1041,23062
compileuninline(1059,23366
compilemy(1071,23625
localpush(1144,25479
compilelocal(1154,25635
compilefunc(1198,26709
genclosurectx(1634,38228
genclosure(1647,38447
snm_closure(1838,42675
strtoclosure(1849,42866
strtofunction(1873,43455
closurefunc(1879,43530
compileseq(1897,43940
compilenode(1909,44192
gp_closure(2143,50387
closure_deriv(2153,50595
vec_optimize(2192,51570
optimizevec(2205,51757
optimizemat(2215,51929
optimizematcoeff(2231,52232
optimizefunc(2251,52529
optimizecall(2385,55850
optimizeseq(2397,56071
optimizenode(2412,56313

/home/mengxue/pari/src/language/anal.c,2801
enum { A_ACTION_ASSIGN,42,1928
enum { A_ACTION_ASSIGN, A_ACTION_SET,42,1928
enum { A_ACTION_ASSIGN, A_ACTION_SET, A_ACTION_UNSET 42,1928
#define IS_ID(43,1984
eval_mnemonic(46,2064
eval_mnemonic(46,2064
hashvalue(209,6895
hashvalue_raw(217,7014
insertep(225,7148
initep(234,7310
findentry(253,7818
pari_is_default(268,8215
is_entry(271,8309
fetch_entry_raw(274,8397
fetch_entry(277,8496
readseq(285,8920
gp_read_str(296,9135
compile_str(304,9245
check_proto(312,9372
check_name(366,10636
install(375,10838
killep(399,11406
kill0(410,11688
kill0(410,11688
addhelp(418,11824
type0(426,11986
type0(426,11986
static const long MAX_DIGITS 439,12438
static const long MAX_XDIGITS 440,12474
static const long MAX_BDIGITS 441,12510
static const long MAX_DIGITS 443,12552
static const long MAX_XDIGITS 444,12587
static const long MAX_BDIGITS 445,12622
ishex(449,12677
isbin(461,12828
number(473,12981
hexnumber(482,13153
binnumber(505,13584
u_pow10(519,13804
int_read_more(549,14280
hex_read_more(563,14563
bin_read_more(577,14852
exponent(591,15145
real_0_digits(606,15409
real_read(612,15537
int_read_dec(656,16610
int_read(665,16758
strtoi(684,17080
strtor(687,17132
skipdigits(697,17345
skipexponent(702,17422
skipconstante(721,17718
skipstring(746,18150
pari_lex(761,18351
strntoGENstr(899,21805
strtoGENstr(908,21973
chartoGENstr(911,22044
static long max_priority,923,22505
static long max_priority, min_priority;923,22505
static long max_avail;924,22545
static long nvar;925,22600
static hashtable *h_polvar;h_polvar926,22647
varstate_save(929,22681
varentries_set(938,22851
_given_value(944,22975
varentries_unset(947,23048
varentries_reset(962,23422
varstate_restore(969,23517
pari_var_close(989,23890
pari_var_init(997,24006
long pari_var_next(1014,24607
long pari_var_next_temp(1015,24649
pari_var_create(1017,24706
delete_var(1035,25112
fetch_var(1044,25427
fetch_var_higher(1051,25590
_higher(1059,25767
_lower(1062,25870
var_register(1066,25973
varhigher(1072,26081
varlower(1087,26446
fetch_user_var(1101,26709
fetch_var_value(1118,27074
name_var(1131,27279
cmp_by_var(1150,27733
vars_sort_inplace(1153,27816
vars_to_RgXV(1156,27901
gpolvar(1164,28039
gpolvar(1164,28039
fill_hashtable_single(1178,28298
pari_fill_hashtable(1187,28494
pari_add_function(1193,28612
#define ALIAS(1204,29048
do_alias(1207,29107
alias0(1214,29200
alias0(1214,29200
ifpari(1230,29589
ifpari(1230,29589
ifpari_void(1239,29773
ifpari_void(1239,29773
ifpari_multi(1252,29963
ifpari_multi(1252,29963
andpari(1268,30305
andpari(1268,30305
orpari(1279,30469
orpari(1279,30469
GEN gmule(1289,30629
GEN gdive(1295,30689
GEN gdivente(1301,30749
GEN gdivrounde(1307,30815
GEN gmode(1313,30885
GEN gshiftle(1319,30945
GEN gshiftre(1325,31011
GEN gadde(1331,31078
GEN gadd1e(1337,31138
GEN gsube(1343,31221
GEN gsub1e(1349,31281
GEN gshift_right(1355,31364
cmp_epname(1363,31788
print_all_user_fun(1370,31900

/home/mengxue/pari/src/language/hash.c,614
static const ulong hashprimes[hashprimes22,1034
static const int hashprimes_len 27,1284
setlen(30,1353
get_prime_index(36,1456
hash_link(47,1728
hash_create(55,1903
hash_insert(82,2511
hash_select(119,3545
hash_keys(132,3824
hash_values(145,4056
hash_search2(160,4330
hash_search(172,4611
hash_remove_select(179,4735
hash_remove(197,5124
hash_destroy(213,5439
hash_id(225,5693
eq_id(227,5742
hash_create_ulong(229,5797
int strequal(233,5896
hash_create_str(235,5978
hashstr_import_static(239,6102
hashstr_dbg(247,6268
glue(269,6992
hash_GEN(271,7055
hash_str(303,7759
hash_str2(313,7967

/home/mengxue/pari/src/language/es.c,9353
static const char esc 36,1211
typedef struct outString 38,1269
  char *string;string39,1296
  char *end;end40,1345
  char *cur;cur41,1392
  size_t size;42,1456
  int use_stack;43,1489
} outString;44,1549
typedef void (*OUT_FUN)OUT_FUN46,1563
static void bruti(53,1882
static void texi(55,1960
pari_ask_confirm(59,2042
#define ONE_LINE_COMMENT 71,2576
#define MULTI_LINE_COMMENT 72,2605
#define LBRACE 73,2634
#define RBRACE 74,2653
in_help(77,2684
filtre0(86,2859
#undef ONE_LINE_COMMENT191,5243
#undef MULTI_LINE_COMMENT192,5267
gp_filter(195,5301
init_filtre(205,5490
new_buffer(219,5968
delete_buffer(228,6128
fix_buffer(235,6242
gp_read_stream_buf(242,6369
gp_read_stream(257,6582
gp_read_file(265,6734
gp_read_file(265,6734
gp_readvec_stream(287,7127
gp_readvec_file(311,7679
gp_readvec_file(311,7679
file_getline(325,7933
file_input(357,8740
input_loop(365,8939
PariOUT *pariOut,pariOut411,10170
PariOUT *pariOut, *pariErr;pariErr411,10170
_fputs(413,10210
_putc_log(421,10327
_puts_log(423,10408
_flush_log(439,10743
normalOutC(442,10805
normalOutS(444,10877
normalOutF(446,10958
static PariOUT defaultOut 447,11015
normalErrC(450,11094
normalErrS(452,11166
normalErrF(454,11247
static PariOUT defaultErr 455,11304
resetout(459,11447
initout(465,11541
static int last_was_newline 473,11661
set_last_newline(476,11707
out_putc(479,11774
pari_putc(481,11850
out_puts(484,11900
pari_puts(488,12010
pari_last_was_newline(491,12066
pari_set_last_newline(493,12128
pari_flush(496,12195
err_flush(499,12240
log10_2(502,12290
ex10(507,12444
zeros(525,12812
numdig(529,12940
utodec(544,13296
itostr_sign(562,13828
static const long MAX_EXPO_LEN 581,14606
wr_dec(585,14726
zerotostr(594,14919
real0tostr_width_frac(603,15071
real0tostr(616,15339
absrtostr_width_frac(636,15872
absrtostr(687,17285
str_alloc0(779,20012
str_alloc(798,20485
str_putc(805,20640
str_init(811,20767
str_puts(824,21038
str_putscut(827,21123
outpad(837,21330
fmtstr(862,21969
fmtnum(881,22544
v_get_arg(1042,27247
dosign(1050,27474
shift_add(1059,27654
get_sigd(1069,27787
fmtreal(1092,28255
sm_dopr(1167,30539
#define get_num_arg(1269,33984
decode_color(1394,37969
#define COLOR_LEN 1401,38126
out_term_color(1405,38244
term_color(1411,38353
term_get_color(1415,38472
strlen_real(1439,39037
#undef COLOR_LEN1456,39312
#undef larg 1463,39685
term_width_intern(1472,39865
term_height_intern(1498,40305
#define DFT_TERM_WIDTH 1523,40734
#define DFT_TERM_HEIGHT 1524,40761
term_width(1527,40793
term_height(1534,40885
static ulong col_index;1540,40976
putc_lw(1544,41083
puts_lw(1552,41264
static PariOUT pariOut_lw=1554,41318
init_linewrap(1557,41383
lim_lines_output(1562,41614
new_line(1589,42189
#define is_blank(1594,42295
print_prefixed_text(1601,42579
#define STR_LEN 1661,44256
#define MAX_TERM_COLOR 1662,44275
print_errcontext(1668,44488
get_fun(1710,45896
stack_strdup(1720,46039
stack_strcat(1727,46158
pari_strdup(1737,46365
pari_strndup(1745,46490
GENtostr_aux(1753,46641
GENtostr_fun(1759,46809
GENtostr(1769,47057
GENtoTeXstr(1774,47165
GENtostr1(1777,47248
RgV_to_str_fun(1785,47461
RgV_to_str(1815,48046
Str_fun(1818,48132
GEN Str(1823,48252
GEN Strtex(1824,48301
Strexpand(1826,48353
GENtoGENstr(1833,48505
GENtoGENstr_nospace(1839,48633
GENtostr_fun_unquoted(1850,48825
GENtostr_unquoted(1856,49000
ltoc(1860,49097
itoc(1866,49251
Strchr(1869,49294
itostr(1896,50095
str_absint(1903,50239
#define putsigne_nosp(1912,50406
#define putsigne(1913,50464
#define sp_sign_sp(1914,50521
#define semicolon_sp(1915,50593
#define comma_sp(1916,50667
str_ulong(1920,50803
str_long(1937,51103
wr_vecsmall(1944,51245
static const char *ordsuff[ordsuff1962,51854
eng_ord(1964,51921
type_name(1983,52474
vsigne(2018,53610
blancs(2026,53714
str_addr(2030,53805
dbg_addr(2033,53921
dbg_word(2036,54022
dbg(2040,54122
dbgGEN(2186,58371
dbgGEN(2186,58371
print_entree(2189,58424
print_functions_hash(2207,58972
get_var(2267,60609
do_append(2275,60758
get_texvar(2284,60943
dbg_pari_heap(2333,62166
isnull(2360,63160
isnull_for_pol(2384,63667
isone(2396,63905
isfactor(2422,64520
isdenom(2460,65490
texexpo(2495,66466
wrexpo(2508,66689
VpowE(2515,66797
texVpowE(2517,66885
monome(2521,66979
texnome(2526,67087
paren(2533,67212
texparen(2538,67321
times_texnome(2553,67600
times_monome(2558,67716
wr_monome(2565,67849
wr_texnome(2579,68181
wr_lead_monome(2597,68630
wr_lead_texnome(2610,68944
prints(2624,69264
quote_string(2628,69354
print_0_or_pm1(2651,69768
print_precontext(2666,70057
print_context(2686,70438
bruti_intern(2735,71588
bruti_sign(2966,77481
matbruti(2973,77631
texi_sign(3036,79520
_initout(3242,84902
gen_output_fun(3250,85019
fputGEN_pariout(3257,85145
gen_output(3265,85331
brute(3272,85446
matbrute(3279,85553
texe(3286,85666
output(3293,85771
outmat(3296,85842
err_printf(3300,85917
static char *homedir;homedir3310,86278
static THREAD char *last_filename;last_filename3312,86350
static THREAD pariFILE *last_tmp_file;last_tmp_file3314,86453
static THREAD pariFILE *last_file;last_file3316,86534
pari_last_tmp_file(3319,86581
#  define HAVE_PIPES3327,86782
#  define HAVE_PIPES3330,86830
#  define O_RDONLY 3333,86875
newfile(3337,86915
pari_kill_file(3361,87458
pari_fclose(3387,88054
pari_open_file(3397,88311
pari_fopen_or_fail(3406,88534
pari_fopen(3411,88651
pari_fread_chars(3418,88779
pari_safefopen(3428,89065
pari_safefopen(3437,89313
pari_unlink(3444,89416
popinfile(3456,89797
filestate_restore(3474,90302
kill_file_stack(3501,90936
killallfiles(3513,91120
pari_init_homedir(3520,91207
pari_close_homedir(3526,91259
pari_init_files(3532,91329
pari_close_files(3540,91427
ok_pipe(3550,91665
try_pipe(3566,91989
typedef void (*pari_sighandler_t)pari_sighandler_t3602,92814
os_signal(3605,92873
os_close(3625,93210
os_read(3634,93303
os_open(3644,93459
os_getenv(3662,93889
gp_getenv(3672,93999
gp_getenv(3672,93999
pari_get_homedir(3684,94232
pari_get_homedir(3713,94757
is_dir_opendir(3724,95260
is_dir_stat(3734,95412
pari_is_dir(3744,95580
pari_is_file(3760,95863
pari_stdin_isatty(3772,96041
_path_expand(3783,96221
_expand_env(3809,96885
path_expand(3861,98136
strftime_expand(3879,98443
strftime_expand(3889,98623
delete_dirs(3894,98707
#  define PATH_SEPARATOR 3906,98961
#  define PATH_SEPARATOR 3908,99033
pari_default_path(3912,99083
gp_expand_path(3923,99234
pari_get_infile(3953,100006
pari_fopengz(3975,100480
try_open(3994,100848
forpath_init(4002,100983
forpath_next(4009,101107
try_name(4025,101542
switchin_last(4050,102089
path_is_absolute(4062,102396
switchin(4080,102728
switchout_get_FILE(4105,103275
switchout(4125,103689
check_secure(4142,104237
gpsystem(4149,104387
gpsystem(4149,104387
get_lines(4161,104577
externstr(4184,105055
gpextern(4194,105211
gpextern(4194,105211
readstr(4205,105372
pari_fread_longs(4217,105821
_fwrite(4222,105968
_lfwrite(4225,106109
_cfwrite(4227,106197
enum { BIN_GEN,4229,106274
enum { BIN_GEN, NAM_GEN,4229,106274
enum { BIN_GEN, NAM_GEN, VAR_GEN,4229,106274
enum { BIN_GEN, NAM_GEN, VAR_GEN, RELINK_TABLE 4229,106274
rd_long(4232,106337
wr_long(4234,106418
wrGEN(4238,106507
wrstr(4254,106748
rdstr(4262,106860
writeGEN(4272,107027
writenamedGEN(4279,107104
rdGEN(4288,107265
readobj(4312,108030
#define MAGIC 4349,108791
#  define ENDIAN_CHECK 4351,108874
#  define ENDIAN_CHECK 4353,108923
static const long BINARY_VERSION 4355,108965
is_magic_ok(4358,109033
is_sizeoflong_ok(4368,109232
is_long_ok(4375,109345
check_magic(4383,109490
write_magic(4399,110012
file_is_binary(4408,110161
writebin(4415,110287
readbin(4455,111190
out_print0(4505,112840
str_print0(4522,113216
pari_sprint0(4542,113619
print0_file(4551,113792
print0(4563,113976
printsep(4566,114047
printsep1(4570,114153
dopr_arg_vector(4574,114295
printf0(4584,114478
printf0(4584,114478
Strprintf(4589,114617
out_vprintf(4594,114752
pari_vprintf(4600,114886
out_printf(4604,115003
pari_printf(4610,115138
pari_vsprintf(4617,115294
gvsprintf(4621,115377
pari_sprintf(4629,115516
stack_sprintf(4639,115699
gsprintf(4651,115887
pari_vfprintf(4662,116128
pari_fprintf(4668,116260
void print 4674,116389
void printtex(4675,116469
void print1 4676,116549
error0(4679,116618
error0(4679,116618
void warning0(4685,116730
wr_check(4688,116794
wr(4701,117048
void write0 4711,117304
void writetex(4712,117364
void write1 4713,117424
void gpwritebin(4714,117484
history(4725,118082
pari_get_hist(4747,118670
pari_get_hist(4747,118670
pari_get_histtime(4749,118723
pari_get_histtime(4749,118723
pari_add_hist(4752,118781
pari_nb_hist(4763,118983
#  define R_OK 4775,119402
#  define W_OK 4776,119419
#  define X_OK 4777,119436
#  define F_OK 4778,119453
unix_shell(4784,119520
pari_is_rwx(4799,119873
pari_file_exists(4813,120143
pari_dir_exists(4819,120280
pari_file_exists(4822,120371
pari_dir_exists(4824,120456
pari_file_exists(4827,120525
pari_dir_exists(4829,120582
env_ok(4833,120642
pari_tmp_dir(4850,120961
get_file(4872,121499
swap_slash(4890,121888
init_unique(4904,122053
pari_unique_filename(4934,122960
pari_unique_dir(4947,123445
try_dlopen(4966,124087
gp_dlopen(4971,124245
install0(4998,124848
#  define RTLD_GLOBAL 5003,124972
try_LoadLibrary(5018,125350
gp_LoadLibrary(5023,125508
install0(5043,126004
install0(5065,126552
dft_help(5071,126670
gpinstall(5075,126833
gpinstall(5075,126833

/home/mengxue/pari/src/language/tree.h,8866
typedef enum {Fseq,Fseq16,591
              Fmatrix,17,611
              Fmatrix,Frange,17,611
              Fassign,18,641
              Fmatcoeff,19,664
              Fmatrixelts,20,689
              Fmatrixelts,Fmatrixlines,20,689
              Fmat,21,729
              Fmat,Fvec,21,729
              Fmat,Fvec,Fnoarg,21,729
              Flistarg,22,761
              Frefarg,23,785
              Frefarg, Fvararg,23,785
              Fconst,24,817
              Fconst,Fsmall,24,817
              Ftag,25,846
              Fentry,26,866
              Fentry,Fcall,26,866
              Fentry,Fcall,Ffunction,26,866
              Fentry,Fcall,Ffunction,Flambda26,866
} Ffunc;27,911
#define Flastfunc 29,921
#define FneedENTRY 30,951
typedef struct node_s32,980
  Ffunc f;34,1004
  long x;35,1046
  long y;36,1088
  const char *str;str37,1130
  size_t len;38,1172
  long flags;39,1214
} node;40,1269
typedef enum {CSTstr,CSTstr42,1278
typedef enum {CSTstr, CSTquote,42,1278
typedef enum {CSTstr, CSTquote, CSTint,42,1278
typedef enum {CSTstr, CSTquote, CSTint, CSTreal,42,1278
typedef enum {CSTstr, CSTquote, CSTint, CSTreal, CSTmember,42,1278
typedef enum {CSTstr, CSTquote, CSTint, CSTreal, CSTmember, CSTentry}CSTentry42,1278
typedef enum {CSTstr, CSTquote, CSTint, CSTreal, CSTmember, CSTentry} CSTtype;42,1278
typedef enum {OPor,OPor44,1358
typedef enum {OPor, OPand,44,1358
typedef enum {OPor, OPand, OPid,44,1358
typedef enum {OPor, OPand, OPid, OPeq,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse 44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe 44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle 44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre 44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode 44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre 44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce 44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde 44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb, OPfact,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb, OPfact, OPderiv,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb, OPfact, OPderiv, OPtrans,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb, OPfact, OPderiv, OPtrans, OPrange,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb, OPfact, OPderiv, OPtrans, OPrange, OPcompr,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb, OPfact, OPderiv, OPtrans, OPrange, OPcompr, OPcomprc,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb, OPfact, OPderiv, OPtrans, OPrange, OPcompr, OPcomprc, OPhist,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb, OPfact, OPderiv, OPtrans, OPrange, OPcompr, OPcomprc, OPhist, OPhisttime,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb, OPfact, OPderiv, OPtrans, OPrange, OPcompr, OPcomprc, OPhist, OPhisttime, OPlength,44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb, OPfact, OPderiv, OPtrans, OPrange, OPcompr, OPcomprc, OPhist, OPhisttime, OPlength, OPnboperator}OPnboperator44,1358
typedef enum {OPor, OPand, OPid, OPeq, OPne, OPge, OPg, OPle, OPl, OPs, OPp, OPsl, OPsr, OPmod, OPdr, OPeuc, OPd, OPm, OPpow, OPcat, OPss, OPpp, OPse ,OPpe ,OPsle ,OPsre ,OPmode ,OPdre ,OPeuce ,OPde ,OPme, OPpl, OPn, OPnb, OPfact, OPderiv, OPtrans, OPrange, OPcompr, OPcomprc, OPhist, OPhisttime, OPlength, OPnboperator} OPerator;44,1358

/home/mengxue/pari/src/language/init.h,45
entree functions_basic[functions_basic4,98

/home/mengxue/pari/src/basemath/nffactor.c,2787
enum { FACTORS 25,1070
enum { FACTORS = 0, ROOTS,25,1070
enum { FACTORS = 0, ROOTS, ROOTS_SPLIT 25,1070
  long k;30,1232
  GEN p,31,1271
  GEN p, pk;31,1271
  GEN den;32,1294
  GEN prk;33,1358
  GEN prkHNF;34,1432
  GEN iprk;35,1468
  GEN GSmin;36,1500
  GEN Tp;38,1534
  GEN Tpk;39,1560
  GEN ZqProj;40,1571
  GEN tozk;42,1630
  GEN topow;43,1642
  GEN topowden;44,1655
  GEN dn;45,1712
} nflift_t;47,1848
  nflift_t *L;L51,1878
  GEN nf;52,1893
  GEN pol,53,1903
  GEN pol, polbase;53,1903
  GEN fact;54,1954
  GEN pr;55,1966
  GEN Br,56,1976
  GEN Br, bound,56,1976
  GEN Br, bound, ZC,56,1976
  GEN Br, bound, ZC, BS_2;56,1976
} nfcmbf_t;57,2003
lift_to_frac(64,2283
FpM_ratlift(83,3011
FpC_ratlift(103,3445
FpX_ratlift(117,3740
nfgcd_all(154,5108
nfgcd(218,7271
nfissquarefree(222,7350
nffactormod(242,7887
QXQX_normalize(270,8735
RgX_int_normalize(285,9119
proper_nf(303,9620
fix_nf(307,9691
get_nfsqff_data(343,10701
ensure_lt_INT(368,11296
nfroots(377,11457
nfissplit(425,12721
nf_bestlift(438,13045
nf_bestlift_to_pol(461,13652
nf_pol_lift(486,14166
zerofact(503,14490
fact_from_sqff(515,14860
nffactor(578,16497
arch_for_T2(630,17985
arch_for_T2_prec(636,18123
nf_Mignotte_bound(650,18572
nf_Beauzamy_bound(709,20408
nf_factor_bound(745,21325
nf_root_bounds(760,21692
L2_bound(793,22543
normlp(806,22965
get_Bhigh(828,23496
  GEN d;836,23661
  GEN dPinvS;837,23670
  double **PinvSdbl;PinvSdbl838,23718
  GEN S1,839,23764
  GEN S1, P1;839,23764
} trace_data;840,23808
get_trace(844,23907
init_trace(877,24687
update_trace(913,25485
FqX_centermod(923,25725
  GEN lt,942,26087
  GEN lt, C,942,26087
  GEN lt, C, Clt,942,26087
  GEN lt, C, Clt, C2lt,942,26087
  GEN lt, C, Clt, C2lt, C2ltpol;942,26087
} div_data;943,26120
init_div_data(946,26145
update_target(970,26621
cmbf_maxK(976,26855
nfcmbf(990,27302
nf_chk_factors(1174,32550
nf_to_Zq(1212,33532
ZqX(1228,33933
ZqX_normalize(1239,34173
bestlift_bound(1249,34523
get_R(1260,34874
init_proj(1277,35130
max_radius(1301,35819
bestlift_init(1319,36225
get_V(1356,37312
nf_LLL_cmbf(1377,37831
nf_combine_factors(1529,42731
nf_DDF_roots(1559,43455
get_good_factor(1602,44750
get_maxf(1627,45429
nf_pick_prime(1646,45951
nfsqff_trager(1725,48382
polfnf(1758,49426
polfnf(1758,49426
nfsqff_use_Trager(1786,50227
nfsqff(1800,50801
nfroots_split(1913,54332
  GEN q;1943,55774
  GEN modpr;1944,55783
  GEN pr;1945,55796
  nflift_t *L;L1946,55806
} prklift_t;1947,55821
nf_pick_prime_for_units(1953,55973
mybestlift_bound(1984,56914
nfcyclo_root(2000,57446
guess_roots(2023,58244
ZXirred_is_cyclo_translate(2072,59897
trivroots(2107,60876
rootsof1(2110,60983
rootsof1(2110,60983
nf_pm1(2211,64311
is_primitive_root(2216,64413
rootsof1_kannan(2234,64771

/home/mengxue/pari/src/basemath/hyperell.c,832
get_basis(40,1663
FpXXQ_red(49,1785
FpXXQ_sqr(70,2229
FpXXQ_mul(80,2452
ZpXXQ_invsqrt(90,2685
to_ZX(121,3477
is_sing(124,3556
get_UV(130,3673
frac_to_Fp(143,4016
ZpXXQ_frob(150,4143
revdigits(203,5680
diff_red(214,5886
ZC_to_padic(241,6566
ZM_to_padic(251,6728
ZX_to_padic(261,6897
ZXC_to_padic(272,7084
ZXM_to_padic(282,7254
ZlX_hyperellpadicfrobenius(292,7425
hyperellpadicfrobenius(334,8712
FpXXX_renormalize(343,8921
FpXQXXQ_red(346,9002
FpXQXXQ_sqr(367,9463
FpXQXXQ_mul(378,9715
FpXXX_red(390,10013
FpXXX_Fp_mul(407,10317
ZpXQXXQ_invsqrt(413,10408
frac_to_Fq(447,11324
ZpXQXXQ_frob(454,11493
Fq_diff_red(508,13139
Fq_get_UV(535,13851
ZXX_to_FpXC(549,14302
ZlXQX_hyperellpadicfrobenius(567,14669
nfhyperellpadicfrobenius(611,16210
Flx_genus2charpoly_naive(622,16526
hyperellcharpoly(654,17231

/home/mengxue/pari/src/basemath/Qfb.c,2091
check_quaddisc(22,973
check_quaddisc_real(31,1273
check_quaddisc_imag(37,1428
quadpoly_bc(46,1696
quadpoly(62,1971
quadpoly0(75,2221
quadpoly0(75,2221
quadgen(83,2318
qfi(92,2750
qfr(98,2885
Qfb0(105,3023
Qfb0(105,3023
qfb_sqr(124,3449
qfb_comp(149,4018
qficomp0(185,4954
qfrcomp0(194,5134
qfrcomp(203,5355
qfrcompraw(205,5409
qficomp(207,5466
qficompraw(209,5520
qfbcompraw(211,5577
qfisqr0(224,5849
qfrsqr0(235,6072
qfrsqr(246,6330
qfrsqrraw(248,6373
qfisqr(250,6419
qfisqrraw(252,6462
qfr_1_by_disc(255,6516
qfr_1(270,6954
qfr_1_fill(277,7091
qfr5_1(287,7352
qfr3_1(295,7509
qfi_1_by_disc(303,7659
qfi_1(313,7845
invraw(320,7960
qfrpowraw(327,8081
qfipowraw(349,8499
qfbpowraw(372,8915
parteucl(376,9013
nucomp(391,9348
nucomp(391,9348
nudupl(460,11354
mul_nucomp(501,12449
mul_nudupl(503,12527
nupow(505,12588
nupow(505,12588
dvmdii_round(529,13185
dvmdsu_round(541,13539
REDB(562,14040
sREDB(571,14259
REDBU(605,15077
redimagsl2(615,15362
setq_b0(669,16800
setq(673,16906
redimag_1_b0(677,17061
redimag_1(682,17198
redimag_av(729,18214
redimag(756,18974
rhoimag(759,19033
#define EMAX 795,20313
fix_expo(797,20341
qfr5_dist(807,20556
rho_get_BC(818,20770
qfr3_rho(833,21221
qfr5_rho(841,21382
qfr_to_qfr5(862,21874
qfr5_to_qfr(867,22049
qfr3_to_qfr(897,22674
ab_isreduced(907,22838
qfr_isreduced(919,23139
qfr5_red(926,23252
qfr3_red(932,23387
get_disc(938,23511
qfr_data_init(946,23724
qfr5_init(954,23873
qfr3_init(977,24471
#define qf_NOD 985,24659
#define qf_STEP 986,24677
redreal0(989,24707
redreal(1010,25312
rhoreal(1013,25372
redrealnod(1016,25438
rhorealnod(1019,25520
qfbred0(1022,25610
qfbred0(1022,25610
qfr5_comp(1030,25793
qfr3_comp(1049,26179
qfr_inv(1057,26341
qfr5_pow(1065,26466
qfr3_pow(1084,26842
qfrpow(1103,27199
primeform_u(1132,27903
primeform(1165,28775
primeform(1165,28775
SL2_div_mul_e1(1228,30517
SL2_swap_div_mul_e1(1237,30821
GL2_qfb_equal(1247,31123
qfbsolve_cornacchia(1255,31276
qfisolvep(1266,31517
redrealsl2step(1307,32802
redrealsl2(1326,33396
qfbredsl2(1354,34190
qfrsolvep(1390,34990
qfbsolve(1414,35697
cornacchia(1429,36031
cornacchia2(1463,37049

/home/mengxue/pari/src/basemath/subcyclo.c,1339
znstar_partial_coset_func(30,1295
znstar_coset_func(54,1919
znstar_partial_coset_bits_inplace(64,2227
znstar_coset_bits_inplace(73,2448
znstar_partial_coset_bits(79,2591
znstar_partial_bits(89,2857
znstar_bits(96,3004
znstar_generate(104,3176
znstar_order(127,3760
znstar_elts(132,3914
znstar_reduce_modulus(150,4349
znstar_conductor(162,4605
znstar_cosets(204,5529
vecmod_to_vecsmall(230,6353
znstar_small(243,6629
znstar_hnf_generators(253,6885
znstar_hnf(275,7325
znstar_hnf_elts(281,7428
gscycloconductor(296,7979
lift_check_modulus(308,8161
polsubcyclo_powz(330,8724
polsubcyclo_complex_bound(339,8940
polsubcyclo_cyclic(347,9178
struct _subcyclo_orbits_s371,9786
  GEN powz;373,9814
  GEN *s;s374,9826
  ulong count;375,9836
  pari_sp ltop;376,9851
_subcyclo_orbits(380,9883
polsubcyclo_orbits(393,10238
polsubcyclo_start(416,10811
polsubcyclo_complex_roots(447,11778
muliimod_sz(467,12367
polsubcyclo_roots(477,12544
galoiscyclo(499,13262
bnr_to_znstar(536,14339
galoissubcyclo(565,15091
polsubcyclo_g(688,18920
polsubcyclo(721,20064
struct aurifeuille_t 747,20803
  GEN z,748,20826
  GEN z, le;748,20826
  ulong l;749,20839
  long e;750,20850
factor_Aurifeuille_aux(776,21935
phi(908,25825
Aurifeuille_init(923,26073
factor_Aurifeuille_prime(933,26370
factor_Aurifeuille_prime(933,26370
factor_Aurifeuille(948,26741
factor_Aurifeuille(948,26741

/home/mengxue/pari/src/basemath/base4.c,3135
idealtyp(44,2053
idealhnf_two(76,2808
ZM_Q_mul(84,3022
idealhnf_principal(89,3111
vec_mulid(111,3687
idealhnf_shallow(120,3891
idealhnf(169,5548
idealtwoelt0(179,5720
idealtwoelt0(179,5720
idealpow0(186,5831
idealpow0(186,5831
idealmul0(193,5950
idealmul0(193,5950
idealdiv0(200,6069
idealdiv0(200,6069
idealaddtoone0(212,6296
idealaddtoone0(212,6296
hnf_Z_ZC(220,6461
hnf_Z_QC(223,6567
hnf_Q_QC(233,6809
hnf_QC_QC(255,7370
hnf_Q_Q(268,7711
idealhnf0(270,7796
idealhnf0(270,7796
ok_elt(296,8647
addmul_col(304,8779
addmul_mat(317,9069
get_random_a(330,9339
mat_ideal_two_elt(372,10434
idealtwoelt(451,12492
val_norm(473,13356
factor_norm(484,13596
idealfactor_HNF(496,13905
idealfactor(562,15308
idealval(620,16930
gpidealval(707,19649
gpidealval(707,19649
idealadd(716,19797
trivial_merge(747,20629
idealaddtoone_i(757,20807
unnf_minus_x(777,21291
idealaddtoone(788,21463
idealaddmultoone(800,21733
idealmul_HNF_two(851,23161
idealmul_HNF(871,23853
famat_mul_shallow(896,24396
to_famat(905,24596
to_famat_shallow(911,24728
append(918,24862
famat_add(928,25058
famat_mul(945,25327
famat_sqr(964,25785
famat_inv_shallow(975,26006
famat_inv(986,26235
famat_pow(997,26455
famat_Z_gcd(1009,26682
ext_sqr(1034,27214
ext_mul(1039,27319
ext_inv(1044,27460
ext_pow(1049,27565
extideal_HNF_mul(1056,27746
famat_to_nf(1063,27898
elt_cmp(1080,28290
elt_egal(1088,28465
famat_reduce(1095,28553
famatsmall_reduce(1130,29229
ZM_famat_limit(1164,29806
nf_to_Fp_simple(1198,30506
nf_to_Fq_simple(1206,30707
famat_to_Fp_simple(1215,30928
famat_to_Fq_simple(1237,31479
to_Fp_simple(1262,32134
to_Fq_simple(1273,32399
famat_makecoprime(1293,33131
famat_to_nf_moddivisor(1348,34681
vecmul(1368,35232
vecinv(1379,35438
vecpow(1390,35625
vecdiv(1401,35825
idealmulelt(1413,36070
idealmul_aux(1438,36748
idealmul(1490,38230
idealsqr(1508,38727
idealnorm(1523,39071
idealinv_HNF_aux(1554,39898
idealinv_HNF(1567,40359
pidealprimeinv(1579,40653
idealinv(1586,40801
idealnumden(1625,41799
idealpowprime(1671,43196
idealmulpowprime(1714,44075
idealdivpowprime(1739,44646
idealpow_aux(1745,44754
idealpow(1793,46115
idealpows(1813,46539
_idealmulred(1820,46695
_idealsqrred(1823,46783
_mul(1826,46862
_sqr(1828,46944
idealpowred(1832,47075
idealmulred(1848,47422
isideal(1855,47536
isideal(1855,47536
idealdiv(1885,48287
err_divexact(1912,49304
idealdivexact(1916,49435
idealintersect(1954,50552
chk_vdir(1986,51586
twistG(2000,51923
nf_get_Gtwist(2016,52259
nf_get_Gtwist1(2033,52553
RM_round_maxrank(2042,52717
idealred0(2057,52960
idealred0(2057,52960
idealmin(2132,54879
coprime_part(2157,55728
ucoprime_part(2168,55926
nf_coprime_part(2180,56132
make_integral(2215,57051
idealprodprime(2243,57873
factorbackprime(2256,58160
unif_mod_fZ(2270,58501
init_unif_mod_fZ(2287,58949
check_listpr(2300,59149
idealapprfact_i(2315,59604
idealapprfact(2359,60557
idealappr(2368,60793
idealappr0(2374,60919
idealappr0(2374,60919
merge_fact(2380,61085
idealchinese(2413,61906
idealextchinese(2463,63356
mat_ideal_two_elt2(2497,64284
not_in_ideal(2508,64545
idealtwoelt2(2515,64760
idealcoprimefact(2549,65615
idealcoprime(2559,65845
nfmulmodpr(2566,65981
nfmulmodpr(2566,65981
nfdivmodpr(2579,66281
nfdivmodpr(2579,66281
nfpowmodpr(2587,66443
nfpowmodpr(2587,66443
nfkermodpr(2599,66713
nfsolvemodpr(2611,67009

/home/mengxue/pari/src/basemath/lfun.c,4409
mysercoeff(28,1192
ldata_get_type(35,1290
ldata_get_an(38,1355
ldata_get_selfdual(41,1411
ldata_isreal(44,1479
ldata_get_gammavec(47,1541
ldata_get_degree(50,1603
ldata_get_k(53,1669
ldata_get_conductor(56,1729
ldata_get_rootno(59,1791
ldata_get_residue(62,1850
linit_get_type(65,1934
linit_get_ldata(68,1995
linit_get_tech(71,2053
is_linit(74,2111
lfun_get_step(81,2243
lfun_get_pol(84,2301
lfun_get_Residue(87,2358
lfun_get_k2(90,2419
lfun_get_w2(93,2475
lfun_get_expot(96,2531
lfun_get_factgammavec(99,2590
domain_get_dom(102,2664
domain_get_der(104,2730
domain_get_bitprec(106,2802
lfun_get_domain(108,2870
lfun_get_bitprec(110,2925
lfun_get_dom(112,3009
lfunprod_get_fact(115,3087
theta_get_an(118,3146
theta_get_K(120,3206
theta_get_R(122,3266
theta_get_bitprec(124,3327
theta_get_m(126,3394
theta_get_tdom(128,3460
theta_get_sqrtN(130,3520
isnegint(139,3904
gamma_R(148,4059
gamma_C(163,4427
gammafrac(177,4736
gammafactor(193,5118
deg1ser_shallow(256,6765
polgammaeval(269,7131
fracgammaeval(281,7371
gammafactproduct(291,7578
gammaordinary(307,8104
gammavec_expo(322,8444
get_cone(329,8734
get_cone_fuzz(347,9158
lfunthetaneed_bitprec(357,9570
fracgammadegree(395,10769
rtoR(404,11203
simple_pole(416,11594
lfunrtopoles(424,11751
normalizepoles(439,12002
lfunrtoR_i(463,12638
lfunrtoR_eno(494,13622
lfunrtoR(497,13744
lfunthetainit0_bitprec(502,13885
lfunthetainit_bitprec(524,14623
lfunthetainit(532,14942
lfunan(540,15136
mkvpow(549,15357
mkvroots(577,15960
lfunthetacheckinit(600,16415
lfunisvgaell(624,17202
vecan_nv_cmul(636,17513
vecan_n_cmul(643,17685
vecan_cmul(650,17833
theta2(657,18019
theta1(691,18771
lfuntheta_bitprec(735,19906
lfuntheta(784,21307
struct lfunp 791,21625
  long precmax,792,21640
  long precmax, Dmax,792,21640
  long precmax, Dmax, D,792,21640
  long precmax, Dmax, D, M,792,21640
  long precmax, Dmax, D, M, m0,792,21640
  long precmax, Dmax, D, M, m0, nmax,792,21640
  long precmax, Dmax, D, M, m0, nmax, d;792,21640
  double k1,793,21681
  double k1, E,793,21681
  double k1, E, logN2,793,21681
  double k1, E, logN2, logC,793,21681
  double k1, E, logN2, logC, A,793,21681
  double k1, E, logN2, logC, A, hd,793,21681
  double k1, E, logN2, logC, A, hd, dc,793,21681
  double k1, E, logN2, logC, A, hd, dc, dw,793,21681
  double k1, E, logN2, logC, A, hd, dc, dw, dh,793,21681
  double k1, E, logN2, logC, A, hd, dc, dw, dh, MAXs,793,21681
  double k1, E, logN2, logC, A, hd, dc, dw, dh, MAXs, sub;793,21681
  GEN L,794,21740
  GEN L, vprec,794,21740
  GEN L, vprec, an;794,21740
lfunparams(798,21776
powersshift(882,24190
lfuninit_vecc2(893,24400
lfuninit_vecc(918,25153
parse_dom(990,27477
sdomain_isincl(1001,27836
checklfuninit(1011,28048
lfuninit_make(1020,28306
lfunparams2(1035,28823
lfun_init_theta(1096,30288
lfuninit_bitprec(1113,30675
lfuninit(1183,32918
lfunpoleresidue(1191,33154
veccothderivn(1204,33409
polepart(1220,33750
lfunsumcoth(1228,33905
lfun_genproduct(1250,34450
der_level(1276,35197
ser_coeff0(1281,35305
get_domain(1284,35386
lfunlambda_bitprec_OK(1303,35781
lfunlambda_bitprec(1341,36908
lfunlambda(1352,37184
lfun_bitprec_OK(1358,37387
lfun_bitprec(1377,37924
lfun(1388,38188
sersplit1(1393,38340
derivnser(1407,38647
lfunlambdaord(1436,39359
lfunderiv_bitprec(1458,39953
lfunlambda0_bitprec(1497,41049
lfunlambda0(1504,41235
lfunlambda0(1504,41235
lfun0_bitprec(1510,41358
lfun0(1517,41532
lfun0(1517,41532
lfunhardy_bitprec(1521,41641
lfunhardy(1554,42722
theta_pole_contrib(1561,42894
theta_add_polar_part(1573,43248
lfuncheckfeq_bitprec(1591,43769
lfuncheckfeq(1661,45814
ropm1(1669,46193
lfunthetaspec_bitprec(1679,46446
Rtor(1735,48153
get_eno(1744,48424
lfunrootno_bitprec(1760,48938
lfunrootno(1793,49988
residues_known(1797,50081
lfunrootres_bitprec(1808,50359
lfunrootres(1879,52719
struct lhardyz_t 1885,53019
  long bitprec,1886,53038
  long bitprec, prec;1886,53038
  GEN linit;1887,53060
lfunhardyzeros(1891,53088
lfuncenterinit_bitprec(1901,53338
lfunorderzero_bitprec(1916,53803
lfunorderzero(1947,54574
lfunzeros_bitprec(1951,54674
lfunzeros(2041,57345
struct huntcond_t 2047,57674
  long k;2048,57694
  GEN data;2049,57704
  GEN *pM,pM2050,57716
  GEN *pM, *psqrtM;psqrtM2050,57716
wrap1(2055,57822
wrap2(2076,58432
checkconductor(2128,60182
parse_maxcond(2144,60496
lfunconductor(2165,60944

/home/mengxue/pari/src/basemath/base5.c,1464
eltreltoabs(24,994
rnfeltreltoabs(50,1603
eltabstorel_lift(83,2546
eltabstorel(96,2963
rnfeltabstorel(102,3125
modulereltoabs(156,4506
rnf_basM(195,5591
const long NFABS 211,5909
rnfnfabs(214,5943
check_and_build_nfabs(229,6275
nf_nfzk(233,6398
rnfinit(242,6619
rnfeltup(268,7389
nfeltup(282,7750
fail(295,8069
rnfeltdown(298,8176
rnfV_to_nfM(343,9245
rnfprincipaltohnf(352,9415
rnfideal0(363,9731
rnfidealhnf(366,9794
prodid(391,10404
prodidnorm(402,10600
rnfidealnormrel(413,10796
rnfidealnormabs(423,11050
rnfidealreltoabs(433,11283
rnfidealabstorel(446,11568
rnfidealdown(473,12162
rnfidealup(484,12426
rnfidealtwoelement(502,12898
rnfidealtwoelement(502,12898
rnfidealmul(520,13399
rnfequationall(539,13942
rnfequation0(562,14525
rnfequation0(562,14525
rnfequation(578,14917
rnfequation2(580,14985
nf_rnfeq(582,15054
nf_rnfeqsimple(594,15358
nftau(607,15901
initmat(617,16136
nftocomplex(626,16271
mattocomplex(635,16530
nf_all_roots(650,16832
rnfscal(671,17316
findmin(682,17546
RED(714,18299
check_0(735,18889
do_SWAP(744,19020
rel_T2(782,20258
rnflllgram(827,21514
rnfpolred(918,24057
nfreduce(986,26340
nfreduce(986,26340
element_close(999,26781
colcomb1(1014,27122
colcomb(1021,27278
element_mulvecrow(1030,27488
rowcomb(1062,28203
zero_nfbezout(1077,28537
nfbezout(1101,29085
idV_simplify(1138,30190
nfhnf0(1150,30461
nfhnf0(1150,30461
nfhnf(1242,32812
RgV_find_denom(1245,32874
nfsnf0(1262,33544
nfsnf0(1262,33544
nfsnf(1386,37056
nfdetint(1390,37183
nfcleanmod(1473,39401
nfhnfmod(1516,40405

/home/mengxue/pari/src/basemath/dirichlet.c,171
err_direuler(23,981
dirmuleuler(29,1176
direuler_bad(95,2542
dirseteuler(134,3638
localfactor(142,3794
direxpand_bad(148,3948
direxpand(198,5411
direuler(201,5479

/home/mengxue/pari/src/basemath/alglin3.c,1056
vecsum(30,1395
row_transpose(60,2181
row_transposecopy(68,2342
shallowtrans(78,2521
gtrans(97,2973
gtrans(97,2973
str_to_long(122,3770
get_range(132,3978
extract_selector_ok(162,4559
shallowextract(199,5290
select_0(306,7924
extract0(319,8100
extract0(319,8100
vecslice_parse_arg(350,8792
vecslice_i(372,9223
rowslice_i(385,9449
rowsmallslice_i(398,9686
vecsmallslice_i(411,9921
vecslice0(423,10129
vecslice0(423,10129
matslice0(440,10477
matslice0(440,10477
vecrange(467,11308
vecrange(467,11308
vecrangess(483,11646
genindexselect(496,11840
extract_copy(525,12411
vecselect(534,12632
genselect(543,12823
check_callgen1(574,13490
select0(581,13639
select0(581,13639
parselect(594,13935
veccatapply(622,14657
vecapply2(630,14838
vecapply1(638,15024
mapapply1(646,15197
vecapply(660,15560
genapply(667,15714
apply0(713,16818
apply0(713,16818
vecselapply(720,16921
veccatselapply(732,17261
parapply_worker(741,17535
parapply_worker(741,17535
parapply(747,17607
genfold(769,18173
fold0(784,18478
fold0(784,18478
gtomat(795,18976
gtomat(795,18976
diagonal(862,20713
diagonal(862,20713
diagonal_shallow(883,21124
matmuldiagonal(898,21338
matmultodiagonal(912,21742
RgM_diagonal_shallow(933,22311
RgM_diagonal(943,22487

/home/mengxue/pari/src/basemath/arith2.c,2666
static ulong _maxprime 23,1046
static ulong diffptrlen;24,1074
initprimes1(31,1398
#    define SLOW2_IN_ROOTS 151,6765
#    define SLOW2_IN_ROOTS 153,6810
#    define CACHE_ARENA 159,7004
#    define CACHE_ARENA 161,7091
#define CACHE_ALPHA 165,7189
#define CACHE_CUTOFF 166,7269
static double slow2_in_roots 168,7350
    ulong arena;171,7415
    double power;172,7432
    double cutoff;173,7450
} cache_model_t;174,7469
static cache_model_t cache_model 176,7487
good_arena_size(197,8537
set_optimize(303,12945
sieve_chunk(341,13866
initprimes0(363,14644
maxprime(433,17139
maxprime_check(436,17196
initprimes(443,17530
initprimetable(456,17862
init_primepointer_geq(471,18279
init_primepointer_lt(479,18416
init_primepointer_leq(488,18583
init_primepointer_gt(497,18763
boundfact(506,18920
Z_smoothen(525,19341
factoru_pow(546,20225
factorlim(571,20739
factor_pn_1_limit(576,20917
factor_pn_1(601,21603
to_mat(606,21688
factor_eulerphi(613,21830
RgV_is_ZVpos(667,23441
RgV_is_ZVnon0(679,23666
RgV_is_ZV0(691,23906
is_Z_factor_i(706,24123
is_Z_factorpos(709,24216
is_Z_factor(712,24297
is_Z_factornon0(716,24419
clean_Z_factor(719,24502
fuse_Z_factor(728,24675
check_arith_pos(747,25269
check_arith_non0(765,25726
check_arith_all(783,26174
set_fact_check(807,27019
set_fact(829,27547
divisors_init(832,27622
divisors(866,28381
divisorsu(896,29122
corefa(917,29569
core2fa(926,29741
corepartial(939,30013
core2partial(946,30187
core2_i(953,30368
core2(965,30607
core0(968,30685
core0(968,30685
_mod4(971,30757
corediscs(979,30871
coredisc(991,31120
coredisc2(1000,31280
coredisc0(1012,31533
coredisc0(1012,31533
omegau(1015,31610
omega(1024,31749
bigomegau(1041,32062
bigomega(1050,32204
eulerphiu_fact(1071,32647
eulerphiu(1090,32962
eulerphi(1099,33096
numdiv_aux(1136,33904
numdiv(1145,34061
u_euler_sumdiv(1169,34517
euler_sumdiv(1177,34695
u_euler_sumdivk(1184,34821
euler_sumdivk(1186,34913
sumdiv_aux(1189,35002
sumdiv(1198,35194
sumdivk_aux(1223,35661
sumdivk(1232,35863
sumdivk(1232,35863
usumdivkvec(1265,36597
uissquarefree_fact(1282,36968
uissquarefree(1291,37110
Z_issquarefree(1297,37190
issquarefree(1307,37339
set_vexp(1331,38104
get_vB(1342,38295
gen_digits_dac(1362,38734
gen_fromdigits_dac(1374,39033
gen_digits_i(1387,39419
gen_digits(1399,39718
gen_fromdigits(1407,39939
_addii(1417,40176
_sqri(1420,40269
_mulii(1422,40351
_dvmdii(1425,40445
static struct bb_ring Z_ring 1428,40541
check_basis(1431,40611
digits_dacsmall(1441,40869
digits(1455,41124
fromdigits(1498,42086
static ulong DS[DS1508,42358
sumdigitsu(1550,45282
sumdigits_block(1559,45474
sumdigits(1567,45605
sumdigits0(1602,46269
sumdigits0(1602,46269

/home/mengxue/pari/src/basemath/random.c,687
  typedef ulong u64;30,1565
  static THREAD ulong state[state31,1586
  #define u64state(32,1619
  #define u64stateset(33,1664
  typedef unsigned long long u64;35,1723
  static THREAD ulong state[state36,1757
  #define u64state(37,1791
  #define u64stateset(38,1855
_32to64(40,1930
_64to32(42,2001
static THREAD u64 xorgen_w;44,2078
static THREAD int xorgen_i;45,2106
static const u64 weyl 47,2188
block(50,2269
init_xor4096i(66,2740
void pari_init_rand(85,3274
rand64(88,3334
pari_rand(98,3584
setrand(101,3627
getrand(125,4203
random_bits(145,4720
random_Fl(155,5153
randomi(181,5847
random_F2x(224,6854
randomr(247,7289
polrandom(262,7579
genrand(273,7816
genrand(273,7816

/home/mengxue/pari/src/basemath/Fle.c,1182
Flj_dbl_indir_pre(38,1547
Flj_dbl_pre_inplace(67,2383
Flj_dbl_pre(73,2486
Flj_add_indir_pre(86,2768
Flj_add_pre_inplace(135,4179
Flj_add_pre(141,4292
Flj_neg(149,4441
  ulong n;155,4538
  ulong pbits,156,4584
  ulong pbits, nbits;156,4584
  ulong lnzb;157,4645
} naf_t;158,4686
naf_repr(165,4818
Flj_mulu_pre_naf(209,5847
Flj_mulu_pre(241,6473
Flj_order_ufact(249,6620
Fle_to_Flj(284,7294
Flj_to_Fle_pre(290,7427
random_Fle_pre_indir(304,7744
random_Flj_pre(319,8171
Fle_changepoint(332,8696
Fle_changepointinv(348,9081
Fle_dbl_slope(364,9488
Fle_dbl(377,9883
Fle_add_slope(384,9987
Fle_add(400,10481
Fle_neg(407,10594
Fle_sub(414,10703
struct _Fle421,10860
  ulong a4,423,10874
  ulong a4,a6;423,10874
  ulong p;424,10889
_Fle_dbl(428,10915
_Fle_add(435,11034
Fle_mulu(442,11154
_Fle_mul(453,11436
Fle_mul(468,11864
random_Fle_pre(478,12028
random_Fle(486,12180
_Fle_rand(490,12285
static const struct bb_group Fle_group=496,12386
Fle_order(499,12495
Fle_log(509,12675
Fl_ellj(519,12866
Fl_ellj_to_a4a6(535,13276
Fl_elldisc_pre(551,13658
Fl_elldisc(562,13955
nonsquare_Fl(577,14313
Fl_elltwist_disc(587,14423
Fl_elltwist(595,14617

/home/mengxue/pari/src/basemath/alglin2.c,1724
Flm_charpoly_i(29,1401
Flm_charpoly(54,2035
FpM_charpoly(61,2146
charpoly0(96,3028
charpoly0(96,3028
easychar(117,3592
RgM_Fp_charpoly(159,4598
charpoly(173,4854
fix_pol(198,5368
caract(206,5573
RgM_adj_from_char(235,6270
mattrace(252,6698
bad_char(262,6907
caradj(275,7239
adj(345,9063
adjsafe(353,9160
matadjoint0(366,9440
matadjoint0(366,9440
transL(401,10555
transD(415,10972
transS(434,11374
minpoly_polslice(447,11661
minpoly_listpolslice(459,11906
minpoly_dvdslice(469,12134
RgM_replace(478,12359
gerepilemat2_inplace(487,12532
weakfrobenius_step1(497,12725
weakfrobenius_step2(529,13506
weakfrobenius_step3(548,13917
RgM_Frobenius(568,14412
RgM_minpoly(610,15410
Frobeniusform(622,15694
matfrobenius(638,16044
easymin(680,17232
minpoly(696,17571
hess(726,18425
hess(726,18425
Flm_hess(765,19424
FpM_hess(795,20209
carhess(836,21327
charpoly_bound(867,22159
QM_charpoly_Flx(888,22706
ZX_CRT(897,22911
QM_charpoly_ZX2_bound(922,23630
QM_charpoly_ZX_i(952,24528
QM_charpoly_ZX_bound(975,25099
QM_charpoly_ZX(982,25261
ZM_charpoly(989,25406
carberkowitz(1001,25863
gnorm(1065,27963
gnorm(1065,27963
cxquadnorm(1104,28933
gnorml2_i(1113,29164
gnorml2(1151,29981
gnorml2(1151,29981
pnormlpvec(1155,30070
pnormlp(1173,30427
gnormlp(1188,30834
gnormlp(1188,30834
gnorml1(1214,31520
gnorml1_fake(1246,32304
store(1280,33068
gsupnorm_aux(1284,33245
gsupnorm(1307,33836
matcompanion(1326,34485
gtrace(1352,35126
gtrace(1352,35126
qfgaussred_positive(1421,36870
suitable(1465,38059
gaussred(1485,38605
qfgaussred(1587,41548
qfsign(1590,41597
rot(1595,41706
jacobi(1606,42011
jacobi(1606,42011
matrixqz0(1713,45087
matrixqz0(1713,45087
QM_minors_coprime(1725,45514
RgC_Z_mul(1783,46883
RgC_lincomb(1792,47059
QC_elem(1803,47379
QM_imZ_hnf_aux(1845,48643
QM_ImZ_hnf(1887,49474
QM_ImQ_hnf(1894,49587
intersect(1926,50302
intersect(1926,50302

/home/mengxue/pari/src/basemath/bibli2.c,2300
polchebyshev1(27,1214
polchebyshev1(27,1214
polchebyshev1_eval_aux(55,1814
polchebyshev1_eval(66,2234
polchebyshev2(86,2796
polchebyshev2_eval_aux(118,3480
polchebyshev2_eval(130,3949
polchebyshev(151,4402
polchebyshev_eval(162,4631
polchebyshev_eval(162,4631
polhermite(179,5140
polhermite_eval(205,5670
polhermite_eval(205,5670
pollegendre(233,6468
pollegendre_eval(262,7096
pollegendre_eval(262,7096
polcyclo_prime(287,7720
polcyclo(298,7922
polcyclo_eval(327,8619
polcyclo_eval(327,8619
mathilbert(431,12768
matqpascal(450,13219
matqpascal(450,13219
gprec(492,14469
gprec_w(539,15749
gprec_wtrunc(572,16627
serlaplace(608,17812
pollaplace(622,18110
laplace(635,18317
laplace(635,18317
convol(651,18755
convol(651,18755
dirval(681,19851
dirmul(689,19955
dirdiv(722,20862
binomialuu(767,22403
binomial(780,22677
vecbinome(839,23964
stirling2(862,24697
stirling1(900,25700
stirling(927,26350
numtoperm(944,26946
permtonum(971,27570
polrecip(1005,28562
RgV_polint(1018,29052
polint_i(1048,29805
polint(1113,31418
polint(1113,31418
err_reverse(1148,32427
RgXQ_reverse(1156,32630
QXQ_reverse(1173,33043
modreverse(1192,33490
cmp_small(1212,34186
veccmp(1218,34290
gen_sortspec_uniq(1238,34830
gen_sortspec(1305,36740
init_sort(1344,37993
sort_extract(1360,38343
gen_sort_uniq(1381,38779
gen_sort(1393,39110
gen_indexsort_uniq(1405,39417
gen_indexsort(1414,39675
gen_sort_inplace(1424,39926
closurecmp(1452,40527
check_positive_entries(1462,40769
typedef int (*CMP_FUN)CMP_FUN1469,40933
sort_function(1471,40987
#define cmp_IND 1497,41692
#define cmp_LEX 1498,41710
#define cmp_REV 1499,41773
#define cmp_UNIQ 1500,41791
vecsort0(1502,41814
vecsort0(1502,41814
indexsort(1530,42468
indexlexsort(1532,42544
indexvecsort(1534,42625
sort(1541,42763
lexsort(1543,42828
vecsort(1545,42898
vecsearch(1551,43026
ZV_indexsort(1563,43280
ZV_sort(1565,43361
ZV_sort_uniq(1567,43432
tablesearch(1574,43769
gen_search(1589,44065
ZV_search(1606,44416
zv_search(1609,44483
cmp_nodata(1615,44772
cmp_prime_over_p(1623,44964
cmp_prime_ideal(1631,45156
gen_cmp_RgX(1640,45401
cmp_RgX_Rg(1653,45696
cmp_RgX(1661,45826
merge_factor(1680,46459
merge_sort_uniq(1712,47393
sort_factor(1737,47999
sort_factor_pol(1754,48458
merge_factor_i(1762,48623
gtoset(1775,49161
gtoset(1775,49161
setisset(1796,49668
setsearch(1808,49872
setunion(1825,50286
ZV_union_shallow(1852,50911
setintersect(1876,51337
gen_setminus(1894,51819
setminus(1912,52257
setbinop(1920,52435

/home/mengxue/pari/src/basemath/QX_factor.c,999
ZX_divides_i(19,771
ZX_divides(68,1846
two_factor_bound(76,2148
Mignotte_bound(106,2909
Beauzamy_bound(128,3442
factor_bound(151,3972
cmbf(172,4562
factor_quad(351,9466
shifteval(371,10079
root_bound(384,10333
special_pivot(416,11021
chk_factors_get(437,11376
chk_factors(449,11706
LLL_check_progress(488,12675
next2pow(509,13209
LLL_cmbf(524,13624
cmbf_precs(681,18387
combine_factors(708,18992
pick_prime(746,20291
DDF_roots(793,21513
DDF(848,23066
ZX_DDF(877,23856
ZX_squff(908,24555
fact_from_DDF(947,25405
ZX_factor_i(969,25818
ZX_factor(986,26117
QX_factor(992,26206
ZX_is_irred(999,26309
nfrootsQ(1013,26581
ZX_is_squarefree(1034,27201
maxnorm(1044,27379
ZX_gcd_all(1062,27652
ZX_gcd(1140,29740
_gcd(1143,29806
QX_gcd(1151,29920
BD_deg1(1168,30572
BD_odd(1177,30809
myconcat(1190,31112
BD(1201,31395
polcyclofactors(1267,33527
ZXQ_mul_by_X(1285,33985
BD_odd_iscyclo(1296,34321
BD_iscyclo(1342,35873
poliscyclo(1367,36447
poliscycloprod(1381,36813

/home/mengxue/pari/src/basemath/mellininv.c,723
#define M_E 22,906
dbllambertW0(27,1018
dbllambertW_1(47,1516
lemma526_i(68,1967
dbllemma526(97,2589
dblcoro526(106,2811
static const double MELLININV_CUTOFF 112,2938
MOD2(115,3005
RgV_MOD2(117,3086
gammapoles(127,3252
sercoeff(146,3660
Kderivsmallinit(155,3878
evalvec(231,6158
Kderivsmall(251,6747
get_D(306,8908
Kderivlarge_optim(309,9019
Kderivlarge(337,9992
fun_vp(386,11395
Klargeinit0(414,12353
stripzeros(471,13902
gammamellininvasymp_i(483,14241
gammamellininvasymp(505,14944
ishankelspec(514,15302
gammamellininvinit_bitprec(534,15833
gammamellininvinit(574,17214
gammamellininvrt_bitprec(582,17609
gammamellininvrt(591,17834
gammamellininv_bitprec(597,18067
gammamellininv(615,18600

/home/mengxue/pari/src/basemath/Flx.c,8535
get_Flx_red(20,697
get_Flx_mod(27,811
get_Flx_var(30,875
get_Flx_degree(33,945
Flx_to_ZX(56,2037
Flx_to_FlxX(65,2199
Flv_to_ZV(74,2381
Flc_to_ZC(83,2512
Flm_to_ZM(92,2642
Flx_to_ZX_inplace(102,2815
Flx_to_Flv(111,2998
Flv_to_Flx(124,3259
Flm_to_FlxV(135,3454
FlxC_to_ZXC(145,3640
FlxV_to_ZXV(155,3807
FlxM_to_ZXM(165,3974
FlxM_Flx_add_shallow(174,4112
Fl_to_Flx(198,4927
Z_to_Flx(204,5010
ZX_to_Flx(212,5201
zx_to_Flx(223,5466
Rg_to_Fl(233,5656
Rg_to_F2(256,6206
RgX_to_Flx(279,6772
Rg_to_Flxq(290,7038
Flx_renormalize(328,8259
Flx_red(338,8454
random_Flx(348,8627
Flx_addspec(357,8817
Flx_add(370,9111
Flx_Fl_add(384,9413
Flx_subspec(401,9702
Flx_sub(422,10140
Flx_negspec(443,10602
Flx_neg(453,10756
Flx_neg_inplace(461,10857
Flx_double(470,10984
Flx_triple(478,11154
Flx_Fl_mul(486,11324
Flx_Fl_mul_to_monic(499,11619
Flx_shift(513,11934
Flx_normalize(532,12275
Flx_addshift(542,12513
Flx_shiftip(572,13187
maxlengthcoeffpol(587,13595
Flx_mullimb_ok(598,13797
Flx_mullimb(612,14040
Flx_mulspec_basecase(624,14267
int_to_Flx(648,14960
Flx_mulspec_mulii(657,15134
Flx_to_int_halfspec(664,15265
int_to_Flx_half(678,15525
Flx_mulspec_halfmulii(692,15819
Flx_eval2BILspec(702,16075
Z_mod2BIL_Flx_2(714,16322
Z_mod2BIL_Flx_3(728,16717
Z_mod2BIL_Flx(745,17256
Flx_mulspec_mulii_inflate(751,17388
Flx_mulspec(763,17810
Flx_mul(831,19382
Flx_sqrspec_basecase(838,19505
Flx_sqrspec_sqri(888,20630
Flx_sqrspec_halfsqri(895,20738
Flx_sqrspec_sqri_inflate(902,20874
Flx_sqrspec(910,21073
Flx_sqr(961,22259
Flx_powu(968,22357
Flx_recipspec(983,22596
Flx_recip(995,22801
Flx_rescale(1004,22932
Flx_multhreshold(1020,23212
Flx_invBarrett_basecase(1049,23712
Flx_lgrenormalizespec(1073,24260
Flx_invBarrett_Newton(1081,24386
Flx_invBarrett(1137,25967
Flx_get_red(1165,26633
Flx_rem_basecase(1178,27038
Flx_divrem_basecase(1249,28846
Flx_divrem_Barrettspec(1346,31120
Flx_divrem_Barrett_noGC(1366,31881
Flx_divrem(1426,33299
Flx_rem(1446,33841
Flx_mod_Xnm1(1464,34299
Flx_mod_Xn1(1480,34681
Flx_val(1496,35014
Flx_valrem(1504,35145
Flx_deriv(1519,35461
Flx_deflate(1533,35765
Flx_inflate(1547,36040
Flx_splitting(1562,36406
Flx_halfgcd_basecase(1584,36820
Flx_addmulmul(1608,37438
FlxM_Flx_mul2(1612,37558
FlxM_mul2_old(1622,37807
FlxM_mul2(1632,38117
Flx_FlxM_qmul(1651,38968
matid2_FlxM(1662,39278
Flx_halfgcd_split(1669,39413
Flx_halfgcd_i(1690,40034
Flx_halfgcd(1701,40381
Flx_gcd_basecase(1723,40951
Flx_gcd(1742,41331
Flx_is_squarefree(1766,41856
Flx_is_smooth_squarefree(1775,42025
Flx_is_l_pow(1791,42410
Flx_is_smooth(1800,42542
Flx_extgcd_basecase(1814,42830
Flx_extgcd_halfgcd(1838,43409
Flx_extgcd(1866,44161
Flx_resultant(1879,44440
Flx_extresultant(1914,45298
Flx_eval_powers_pre(1960,46492
Flx_eval_pre_i(1979,46982
Flx_eval_pre(1992,47210
Flx_eval(2007,47495
_Flx_mul(2013,47592
Flv_prod_pre(2019,47670
Flv_prod(2044,48224
FlxV_prod(2050,48302
Flv_roots_to_pol(2057,48415
Flv_inv_pre_indir(2072,48854
Flv_inv_pre_inplace(2099,49324
Flv_inv_pre(2105,49413
Flv_inv_indir(2113,49550
Flv_inv_inplace(2140,49982
Flv_inv(2149,50127
Flx_div_by_X_x(2160,50312
Flv_producttree(2191,50954
Flx_Flv_multieval_tree(2217,51627
FlvV_polint_tree(2255,52459
Flx_Flv_multieval(2286,53421
Flv_polint(2294,53601
Flv_FlvV_polint(2305,53903
Flxq_mul(2330,54822
Flxq_sqr(2337,54954
struct _Flxq 2342,55025
  GEN aut;2343,55040
  GEN T;2344,55051
  ulong p;2345,55060
_Flxq_red(2349,55086
_Flxq_add(2353,55197
_Flxq_sqr(2357,55310
_Flxq_mul(2363,55429
_Flxq_one(2369,55557
_Flxq_zero(2375,55673
_Flxq_cmul(2381,55790
Flxq_powu(2389,55973
Flxq_pow(2407,56376
Flxq_invsafe(2426,56839
Flxq_inv(2436,57043
Flxq_div(2445,57217
Flxq_powers(2452,57347
Flxq_matrix_pow(2461,57589
Flx_Frobenius(2467,57701
Flx_matFrobenius(2473,57795
static struct bb_algebra Flxq_algebra 2479,57922
Flx_FlxqV_eval(2482,58032
Flx_Flxq_eval(2490,58216
Flxq_autpow_sqr(2499,58460
Flxq_autpow_mul(2505,58587
Flxq_autpow(2512,58715
Flxq_autsum_mul(2522,58962
Flxq_autsum_sqr(2535,59400
Flxq_autsum(2539,59474
bounded_order(2547,59655
Flxq_pow_Frobenius(2574,60069
_Flxq_pow(2611,61234
_Flxq_rand(2618,61382
Fl_Flxq_log(2633,61683
Flxq_easylog(2664,62436
Flx_equal(2680,62856
static const struct bb_group Flxq_star=2689,63030
get_Flxq_star(2692,63171
Flxq_order(2700,63383
Flxq_log(2708,63529
Flxq_sqrtn(2720,63890
Flxq_sqrt(2742,64380
Flxq_issquare(2749,64498
Flxq_is2npower(2757,64660
Flxq_lroot_fast(2771,64964
Flxq_lroot(2779,65129
Flxq_norm(2797,65623
Flxq_trace(2807,65850
Flxq_charpoly(2821,66118
Flxq_minpoly(2831,66386
Flxq_conjvec(2848,66689
gener_Flxq(2859,66922
_Flxq_neg(2932,68513
_Flxq_rmul(2937,68618
_Flxq_inv(2942,68733
_Flxq_equal0(2947,68844
_Flxq_s(2950,68900
static const struct bb_field Flxq_field=2956,69045
const struct bb_field *get_Flxq_field(get_Flxq_field2959,69203
mkF2(2977,69904
Fl2_mul_pre(2980,69961
Fl2_sqr_pre(2998,70526
Fl2_norm_pre(3010,70818
Fl2_inv_pre(3017,70990
Fl2_equal1(3029,71325
struct _Fl2 3031,71375
  ulong p,3032,71389
  ulong p, pi,3032,71389
  ulong p, pi, D;3032,71389
_Fl2_sqr(3037,71423
_Fl2_mul(3043,71549
Fl2_pow_pre(3051,71728
_Fl2_pow(3067,72105
_Fl2_rand(3074,72242
static const struct bb_group Fl2_star=3081,72380
Fl2_sqrtn_pre(3085,72501
Flx_Fl2_eval_pre(3101,72859
FlxV_Flc_mul(3125,73577
ZXV_to_FlxV(3136,73798
ZXT_to_FlxT(3145,73952
FlxV_to_Flm(3159,74181
FlxV_red(3168,74335
FlxT_red(3178,74492
FlxqV_dotproduct(3192,74718
FlxX_renormalize(3215,75562
pol1_FlxX(3225,75788
polx_FlxX(3233,75925
Fly_to_FlxY(3243,76147
zxX_to_FlxX(3255,76375
FlxX_to_ZXX(3265,76570
ZXX_to_FlxX(3286,76988
ZXXV_to_FlxXV(3306,77369
FlxX_to_FlxC(3315,77538
FlxXV_to_FlxM(3328,77813
FlxX_to_Flm(3339,78112
Flm_to_FlxX(3349,78275
FlxX_swap(3361,78547
zxX_to_Kronecker_spec(3382,78949
zxX_to_Kronecker(3401,79444
FlxX_add(3408,79567
FlxX_Flx_add(3422,79897
FlxX_neg(3436,80213
FlxX_Fl_mul(3446,80376
FlxX_triple(3456,80579
FlxX_double(3466,80770
FlxX_subspec(3476,80968
FlxX_sub(3497,81451
FlxX_Flx_mul(3522,82030
FlxY_evalx(3533,82242
FlxY_Flx_translate(3543,82461
FlxY_evalx_powers_pre(3566,82959
FlxY_eval_powers_pre(3577,83251
FlxY_FlxqV_evalx(3587,83491
FlxY_Flxq_evalx(3598,83725
FlxY_Flx_div(3607,83957
FlxX_shift(3628,84352
FlxX_recipspec(3643,84621
Kronecker_to_FlxqX(3666,85358
FlxqX_red(3687,85871
FlxqX_mulspec(3697,86080
FlxqX_mul(3710,86385
FlxqX_sqr(3722,86644
FlxqX_Flxq_mul(3733,86847
FlxqX_Flxq_mul_to_monic(3743,87070
FlxqX_normalize(3754,87345
FlxqX_divrem(3763,87592
FlxqX_invBarrett_basecase(3852,89970
FlxX_lgrenormalizespec(3872,90424
FlxqX_invBarrett_Newton(3881,90563
static const long FlxqX_INVBARRETT_LIMIT 3937,92373
FlxqX_invBarrett(3941,92451
FlxqX_rem_Barrett(3964,92963
FlxqX_gcd(3988,93783
FlxqX_safegcd(4003,94053
FlxqX_extgcd(4028,94609
struct _FlxqX 4048,95106
struct _FlxqX {ulong p;4048,95106
struct _FlxqX {ulong p; GEN T;4048,95106
static GEN _FlxqX_mul(4049,95139
static GEN _FlxqX_sqr(4054,95265
FlxqX_pow(4061,95388
FlxqXV_prod(4068,95533
FlxqV_roots_to_pol(4075,95659
kron_pack_Flx_spec_half(4088,95972
kron_pack_Flx_spec(4095,96095
kron_pack_Flx_spec_2(4107,96309
kron_pack_Flx_spec_3(4112,96397
kron_unpack_Flx(4117,96485
kron_unpack_Flx_2(4127,96715
kron_unpack_Flx_3(4133,96833
FlxM_pack_ZM(4139,96947
ZM_unpack_FlxqM(4156,97294
FlxqM_mul_Kronecker(4175,97700
FlxqXQ_mul(4227,99076
FlxqXQ_sqr(4232,99179
FlxqXQ_invsafe(4237,99273
FlxqXQ_inv(4247,99500
FlxqXQ_div(4256,99678
FlxqXQ_mul_mg(4261,99793
FlxqXQ_sqr_mg(4269,99970
  GEN T,4277,100144
  GEN T, S,4277,100144
  GEN T, S, mg;4277,100144
  ulong p;4278,100160
} FlxqXQ_muldata;4279,100171
_FlxqXQ_add(4281,100200
_FlxqXQ_cmul(4286,100329
_FlxqXQ_red(4291,100480
_FlxqXQ_mul(4296,100607
_FlxqXQ_sqr(4301,100759
_FlxqXQ_one(4307,100903
_FlxqXQ_zero(4313,101029
static struct bb_algebra FlxqXQ_algebra 4318,101133
FlxqXQ_pow(4322,101298
FlxqXQ_powers(4338,101714
FlxqXQ_matrix_pow(4350,102052
FlxqX_FlxqXQV_eval(4356,102186
FlxqX_FlxqXQ_eval(4366,102466
FlxqXQ_autpow_sqr(4377,102800
FlxqXQ_autpow_mul(4392,103229
FlxqXQV_autpow(4408,103697
FlxqXQ_autsum_mul(4416,103876
FlxqXQ_autsum_sqr(4437,104640
FlxqXQV_autsum(4442,104718
  GEN S,4457,105308
  GEN S, T;4457,105308
  ulong p;4458,105320
} FlxYqq_muldata;4459,105331
FlxYqq_redswap(4463,105425
FlxYqq_sqr(4475,105700
FlxYqq_mul(4482,105857
FlxYqq_pow(4490,106097

/home/mengxue/pari/src/basemath/trans2.c,1202
trans_fix_arg(24,1044
mpatan(55,2024
gatan(134,4148
gatan(134,4148
mpasin(163,5229
gasin(178,5518
gasin(178,5518
acos0(228,7277
mpacos(232,7370
gacos(249,7693
gacos(249,7693
mparg(299,9476
rfix(326,10039
cxarg(339,10279
garg(347,10421
garg(347,10421
mpcosh(366,11141
gcosh(381,11412
gcosh(381,11412
mpsinh(410,12388
gsinh(424,12726
gsinh(424,12726
mptanh(453,13717
gtanh(475,14224
gtanh(475,14224
mpcotanh(502,14883
gcotanh(525,15420
gcotanh(525,15420
mpasinh(557,16413
gasinh(571,16751
gasinh(571,16751
mpacosh(616,18300
gacosh(626,18518
gacosh(626,18518
mpatanh(690,20459
gatanh(702,20763
gatanh(702,20763
bern(750,22432
static const long BERN_MINNB 756,22559
mpbern(759,22673
bernfrac(870,25894
bernvec_old(892,26452
bernvec(919,27165
bernpol_i(930,27425
bernpol(944,27794
faulhaber(950,27979
sumformal(960,28247
divrunu(997,29283
divgunu(1006,29457
darg(1020,29700
dcxlog(1031,29899
dabs(1038,30058
dnorm(1040,30120
red_mod_2z(1045,30254
lngamma1(1058,30606
cxgamma(1076,31140
gammahs(1318,37971
ggammah(1347,38565
ggammah(1347,38565
nboft(1367,39022
gadw(1384,39531
Qp_gamma_Dwork(1414,40388
Qp_gamma_Morita(1442,41016
Qp_gamma_neg_Morita(1460,41419
Qp_gamma(1472,41796
ggamma(1488,42228
ggamma(1488,42228
mpfactr(1566,44210
mpfactr(1566,44210
glngamma(1579,44442
glngamma(1579,44442
cxpsi(1633,46156
serpsi1(1721,48808
tr(1739,49247
serpsiz0(1746,49389
serpsi(1807,51574
gpsi(1840,52440
gpsi(1840,52440

/home/mengxue/pari/src/basemath/polarit3.c,3855
struct charact 28,1434
  GEN q;29,1451
  int isprime;30,1460
char_update_prime(33,1490
char_update_int(39,1669
charact(49,1859
charact_res(70,2381
characteristic(92,2964
residual_characteristic(99,3074
Rg_is_Fp(107,3198
RgX_is_FpX(128,3538
RgV_is_FpV(138,3681
RgM_is_FpM(147,3817
Rg_is_FpXQ(156,3956
RgX_is_FpXQX(198,4874
Rg_to_Fp(215,5508
Rg_to_FpXQ(240,6228
RgX_to_FpX(275,7089
RgV_to_FpV(284,7270
RgC_to_FpC(293,7424
RgM_to_FpM(302,7578
RgC_to_Flc(310,7733
RgM_to_Flm(318,7885
RgX_to_FpXQX(327,8033
RgX_to_FqX(335,8234
FpXV_FpC_mul(350,8561
FqX_Fq_add(364,8850
FqX_Fq_mul_to_monic(379,9199
FqX_normalize(388,9416
FqX_eval(409,9877
FqXY_evalx(434,10509
FqXY_eval(450,10860
monomial(459,11057
monomialcopy(483,11570
pol_x_powers(507,12093
FqXQ_powers(516,12240
FqXQ_matrix_pow(522,12365
Fq_add(534,12867
Fq_sub(548,13147
Fq_neg(562,13427
Fq_halve(569,13538
Fq_mul(577,13685
Fq_mulu(592,14024
Fq_Fp_mul(600,14175
Fq_sqr(608,14361
Fq_neg_inv(620,14525
Fq_invsafe(627,14656
Fq_inv(634,14778
Fq_div(641,14888
Fq_pow(654,15180
Fq_powu(661,15301
Fq_sqrt(668,15427
Fq_sqrtn(678,15627
struct _Fq_field701,16201
  GEN T,703,16220
  GEN T, p;703,16220
_Fq_red(707,16247
_Fq_add(713,16364
_Fq_neg(726,16610
_Fq_mul(729,16700
_Fq_inv(742,16946
_Fq_equal0(748,17061
_Fq_s(751,17115
static const struct bb_field Fq_field=753,17169
const struct bb_field *get_Fq_field(get_Fq_field756,17308
FpX_translate(771,17895
FqX_translate(795,18437
FqV_roots_to_pol(820,19008
FqV_red(840,19481
FqC_add(849,19638
FqC_sub(860,19860
FqC_Fq_mul(871,20082
FqV_to_FlxV(882,20288
FqC_to_FlxC(895,20581
FqM_to_FlxM(908,20881
Flxq_ffisom_inv(927,21379
FpXQ_ffisom_inv(937,21612
FpM_Frobenius(949,21935
Flm_Frobenius(967,22327
FpXQV_FpX_Frobenius(989,22806
FlxqV_Flx_Frobenius(1024,23534
Flm_Frobenius_pow(1063,24363
FpM_Frobenius_pow(1074,24618
Flx_intersect_ker(1092,25104
FpX_intersect_ker(1128,26191
Flx_ffintersect(1173,27813
Flx_ffisom(1279,31190
FpX_ffintersect(1289,31407
FpX_ffisom(1395,34857
FpX_factorgalois(1408,35256
Flx_factorgalois(1434,35879
Flx_factorff_irred(1464,36515
FpX_factorff_irred(1499,37529
Fl_chinese_coprime(1553,39158
Z_init_CRT(1566,39573
ZX_init_CRT(1568,39648
ZM_init_CRT(1580,39905
Z_incremental_CRT(1595,40206
ZX_incremental_CRT_raw(1610,40548
ZX_incremental_CRT(1644,41324
ZM_incremental_CRT(1652,41508
Flx_resultant_set_dglist(1674,42153
Flx_resultant_all(1708,43025
pol_comp(1776,44752
polint_triv(1791,45107
FpV_polint(1820,45783
Flv_polint_all(1849,46556
FlxY_evalx_drop(1887,47516
FpXY_Fq_evaly(1901,47829
ZX_norml1(1922,48359
ZX_ZXY_ResBound(1942,48816
Flx_FlxY_eval_resultant(1963,49410
FpX_FpXY_eval_resultant(1972,49663
Flx_FlxY_resultant_polint(1984,50021
FlxX_pseudorem(2004,50666
FlxX_resultant(2046,51902
FlxY_to_FlyX(2096,53234
Flx_FlxY_resultant(2106,53447
swap_vars(2127,54203
FpX_FpXY_resultant(2141,54504
FpX_direct_compositum(2177,55450
#define next_lambda(2185,55682
FpX_compositum(2187,55726
get_theta_x(2203,56244
init_modular(2208,56366
ZX_ZXY_resultant_all(2219,56846
ZX_ZXY_rnfequation(2404,62566
ZXQ_charpoly_sqf(2413,62826
ZXQ_charpoly(2446,63704
trivial_case(2452,63837
fp_resultant(2464,64078
get_nbprimes(2500,65002
ZX_resultant_prime(2512,65223
ZX_resultant_slice(2543,66088
ZX_resultant_all(2585,67203
QX_resultant(2644,68892
ZX_resultant(2659,69225
QXQ_intnorm(2662,69298
QXQ_norm(2683,69782
ZX_disc_all(2699,70156
GEN ZX_disc(2715,70530
QX_disc(2718,70583
QXQ_inv(2728,70810
ffinit_rand(2793,72794
f2init(2806,73080
ffinit_Artin_Shreier(2830,73816
fpinit_check(2847,74384
fpinit(2861,74828
ffinit_fact(2870,75040
ffinit_nofact(2884,75350
init_Fq_i(2908,75723
init_Fq(2924,76171
ffinit(2930,76278
ffnbirred(2937,76400
ffsumnbirred(2955,76726
ffnbirred0(2983,77289
ffnbirred0(2983,77289

/home/mengxue/pari/src/basemath/ifactor1.c,2700
#define NPRC 26,1238
static unsigned char prc210_no[prc210_no28,1301
static unsigned char prc210_rp[prc210_rp44,2091
static unsigned char prc210_d1[prc210_d152,2432
unextprime(60,2659
nextprime(98,3409
uprecprime(144,4377
precprime(177,5054
snextpr(227,6449
int factor_add_primes 281,7879
#define nbcmax 293,8666
#define bstpmax 294,8739
FpE_add_i(328,10706
ZV_aff(341,11129
ecm_elladd0(366,12227
ecm_elladd(403,13342
ecm_elladd2(412,13777
elldouble(465,15412
get_rule(503,16709
ellmult(523,17352
alloc_scratch(584,19756
static const long MR_Jaeschke_k1 675,24929
static const long MR_Jaeschke_k2 676,25005
ellfacteur(686,25584
#define VALUE(1132,44131
#define EXPON(1133,44157
#define CLASS(1134,44183
INIT(1137,44222
ifac_delete(1143,44319
rho_dbg(1146,44379
pollardbrent(1168,45448
#define one_iter(1244,48165
squfof_ambig(1421,54583
#define SQUFOF_BLACKLIST_SZ 1481,56179
squfof(1485,56250
L 1727,66024
check_res(1856,69176
uis_357_powermod(1865,69407
uis_357_power(1879,69979
uis_357_powermod_32bit_1(1916,70853
uis_357_powermod_32bit_2(1926,71221
is_357_power(1944,72040
is_kth_power(2001,73740
is_pth_power(2064,75807
#define LAST(2238,85061
#define FIRST(2239,85087
#define MOEBIUS(2241,85109
#define HINT(2242,85137
SHALLOWCOPY(2246,85188
COPY(2253,85312
ifac_factor_dbg(2261,85461
ifac_check(2269,85760
ifac_print(2275,85932
static const long decomp_default_hint 2299,86661
ifac_start_hint(2303,86823
ifac_start(2323,87619
ifac_find(2328,87786
ifac_defrag(2345,88269
ifac_realloc(2372,89571
ifac_sort_one(2422,91975
ifac_resort(2500,94834
ifac_isprime(2513,95331
ifac_checkprime(2526,95600
ifac_whoiswho(2539,96038
ifac_divide(2587,97740
update_pow(2643,99734
#define get_hint(2665,100675
ifac_crack(2683,101670
ifac_insert_multiplet(2834,107593
ifac_main(2923,110935
ifac_decomp(3013,114317
ifac_GC(3062,115932
ifac_moebius(3071,116114
ifac_read(3087,116359
ifac_skip(3096,116513
ifac_ispowerful(3103,116610
ifac_core(3120,116989
tridiv_bound(3140,117493
utridiv_bound(3150,117747
ifac_factoru(3162,117914
ifac_moebiusu(3176,118160
u_forprime_next_fast(3190,118346
factoru_sign(3203,118604
factoru(3279,120550
moebiusu(3283,120625
moebius(3337,121630
ispowerful(3390,122831
coreu(3451,124169
core(3470,124463
Z_issmooth(3532,125808
Z_issmooth_fact(3548,126106
aux_end(3586,127100
STORE(3606,127512
STOREu(3608,127595
STOREi(3610,127671
special_primes(3613,127779
ifactor_sign(3635,128351
ifactor(3768,131640
ifac_next(3772,131731
factorint(3784,132063
Z_factor_limit(3792,132198
absi_factor_limit(3798,132327
Z_factor(3804,132480
absi_factor(3807,132545
Z_factor_until(3813,132775

/home/mengxue/pari/src/basemath/prime.c,2059
  ulong n,22,990
  ulong n, sqrt1,22,990
  ulong n, sqrt1, sqrt2,22,990
  ulong n, sqrt1, sqrt2, t1,22,990
  ulong n, sqrt1, sqrt2, t1, t;22,990
  long r1;23,1022
} Fl_MR_Jaeschke_t;24,1033
  GEN n,27,1071
  GEN n, sqrt1,27,1071
  GEN n, sqrt1, sqrt2,27,1071
  GEN n, sqrt1, sqrt2, t1,27,1071
  GEN n, sqrt1, sqrt2, t1, t;27,1071
  long r1;28,1101
} MR_Jaeschke_t;29,1112
init_MR_Jaeschke(32,1142
Fl_init_MR_Jaeschke(43,1461
MR_Jaeschke_ok(58,1896
Fl_MR_Jaeschke_ok(77,2403
bad_for_base(92,2758
Fl_bad_for_base(114,3281
millerrabin(132,3686
gispseudoprime(157,4291
gispseudoprime(157,4291
ispseudoprime(161,4410
Fl_MR_Jaeschke(194,5775
MR_Jaeschke(225,6362
LucasMod(258,7451
u_LucasMod(298,8445
uislucaspsp(321,8969
IsLucasPsP(349,9635
iu_coprime(383,10372
uu_coprime(390,10513
is_2_prp_101(397,10665
u_2_prp(430,11127
uBPSW_psp(437,11249
uisprime(440,11316
uisprime_101(496,12554
uisprime_661(505,12730
BPSW_psp(508,12783
isanypower_nosmalldiv(543,13822
BPSW_psp_nosmalldiv(559,14259
BPSW_isprime_small(589,15373
BLS_test(604,15751
pl831(620,16206
check_prime(639,16704
selfridge_init(648,16949
isprimePL(668,17622
isprimeSelfridge(711,18812
BPSW_isprime_big(721,19016
BPSW_isprime(753,19913
gisprime(763,20072
gisprime(763,20072
isprime(776,20315
  ulong p;785,20761
  long n;786,20772
} prime_table[prime_table787,20782
static const int prime_table_len 827,21915
prime_table_closest_p(831,22032
prime_successor(850,22387
prime_table_find_n(860,22609
uprime(904,23443
prime(914,23669
randomprime(926,23897
prime_table_next_p(990,25452
uprimepi(1020,26070
primepi(1048,26567
primepi_upper_bound(1075,27339
primepi_lower_bound(1089,27696
gprimepi_upper_bound(1100,27882
gprimepi_lower_bound(1116,28233
primes(1134,28613
primes_zv(1148,28908
primes0(1160,29165
primes0(1160,29165
primes_interval(1173,29380
primes_interval_i(1217,30509
primes_interval_zv(1229,30827
primes_upto_zv(1243,31135
cleanprimetab(1258,31724
rmprime(1267,31879
addp_union(1281,32237
addp(1306,32812
addprimes(1330,33355
rmprimes(1333,33415
removeprimes(1355,33778

/home/mengxue/pari/src/basemath/ZV.c,2389
check_ZV(18,625
RgV_check_ZV(26,744
RgM_check_ZM(31,864
ZV_max_lg(44,1097
ZM_max_lg(51,1247
ZM_supnorm(67,1510
ZM_nc_mul_i(92,2217
ZV_zc_mul(110,2563
ZM_zc_mul_i(122,2838
ZM_zc_mul(138,3152
ZM_zm_mul(146,3329
ZM_nm_mul(157,3594
add_slices(174,3996
subtract_slices(217,5235
ZM_mul_sw(259,6483
ZMrow_ZC_mul_i(336,10031
ZMrow_ZC_mul(349,10320
ZM_ZC_mul_i(354,10460
ZM_mul_classical(363,10626
static const long ZM_sw_bound 373,10867
ZM_mul_i(376,10915
ZM_mul(385,11143
ZM_multosym(394,11350
ZV_dotproduct_i(416,11848
ZM_transmultosym(431,12151
ZM_transmul(451,12597
ZM_sqr_i(470,13013
ZM_sqr(479,13170
ZM_ZC_mul(486,13271
ZM_Z_div(493,13389
zv_dotproduct(509,13685
ZV_ZM_mul(521,13872
ZC_ZV_mul(532,14093
ZV_dotsquare(547,14370
ZV_dotproduct(560,14597
_ZM_mul(570,14768
_ZM_sqr(573,14861
ZM_pow(576,14938
ZM_powu(583,15096
ZC_add_i(595,15613
ZC_add(603,15764
ZC_Z_add(605,15823
ZC_sub_i(616,16051
ZC_sub(624,16202
ZC_Z_sub(626,16261
ZM_add(637,16483
ZM_sub(647,16707
ZC_Z_divexact(663,17330
ZM_Z_divexact(671,17484
ZC_Z_mul(680,17664
ZC_z_mul(691,17920
zv_z_mul(704,18173
nm_Z_mul(714,18308
ZM_Z_mul(735,18775
ZC_lincomb1_inplace(755,19241
Flc_lincomb1_inplace(762,19431
ZC_lincomb1(771,19647
ZC_lincomb_1(780,19837
ZC_lincomb(789,20064
ZV_to_nv(830,21207
zm_to_ZM(839,21342
zmV_to_ZMV(848,21479
ZM_to_zm(858,21671
zv_to_Flv(867,21808
zm_to_Flm(876,21953
ZMV_to_zmV(885,22103
ZC_copy(899,22597
ZM_copy(912,22785
ZV_neg_inplace(921,22909
ZC_neg(927,23002
zv_neg(935,23126
zv_neg_inplace(943,23231
ZM_neg(950,23323
ZV_togglesign(959,23445
ZM_togglesign(965,23539
ZC_hnfremdiv(978,24056
ZM_hnfdivrem(999,24469
zv_equal0(1025,25230
ZV_equal0(1034,25328
ZV_equal_lg(1043,25444
ZV_equal(1050,25564
ZM_equal(1057,25672
zv_equal(1069,25921
zvV_equal(1079,26061
ZM_ishnf(1089,26218
ZM_isidentity(1107,26564
ZC_is_ei(1128,26951
ZV_cmp(1149,27566
ZV_abscmp(1158,27749
zv_content(1167,27901
ZV_content(1176,28053
ZM_det_triangular(1193,28355
zv_prod(1207,28636
_mulii(1216,28774
zv_prod_Z(1221,28867
ZV_prod(1237,29271
zv_sum(1251,29601
ZV_sum(1259,29730
Zupdate_row(1279,30380
ZRED(1302,31103
ZincrementalGS(1313,31388
ZC_reducemodmatrix_i(1333,31930
ZC_reducemodmatrix(1345,32239
ZM_reducemodmatrix_i(1353,32487
ZM_reducemodmatrix(1372,32964
ZC_reducemodlll(1378,33081
ZM_reducemodlll(1385,33232

/home/mengxue/pari/src/basemath/buch4.c,662
lemma6(25,1082
lemma7(44,1551
zpsol(78,2223
hyperell_locally_soluble(99,2714
quad_char(112,3095
Z_quad_char(131,3599
psquarenf(141,3837
check2(163,4333
psquare2nf_i(174,4635
psquare2nf(181,4812
lemma6nf(190,4983
lemma7nf(208,5405
zpsolnf(244,6310
ZC_add_coeff(267,6906
repres(272,7055
nf_hyperell_locally_soluble(302,7814
den_remove(332,8746
hilb2nf(351,9146
nfhilbertp(369,9618
nfhilbert(408,10805
nfhilbert0(448,11958
nfhilbert0(448,11958
bnfsunit(468,12586
make_unit(563,15416
bnfissunit(629,17189
pr_append(645,17609
Zfa_pr_append(655,17862
fa_pr_append(666,18110
nfX_eltup(679,18424
rnfisnorminit(689,18655
rnfisnorm(760,20853
bnfisnorm(836,23317

/home/mengxue/pari/src/basemath/qfsolve.c,676
vecextend(26,868
completebasis(39,1257
kermodp(61,1858
principal_minor(76,2151
det_minors(78,2226
qflocalinvariant(91,2591
hilberts(109,3056
qflocalinvariants(120,3367
qfb(163,4500
qfbreduce(173,4769
partialgaussred(194,5444
qflllgram_indef(221,6161
qf_apply_transvect_Z(265,7264
qflllgram_indefgoon(278,7766
qf_apply_tau(334,9597
qflllgram_indefgoon2(346,9910
ZsymM_Z_divexact(396,11245
blocks4(412,11617
qfminimize(428,12227
qfbsqrt(574,17118
qfb_factorback(625,18514
id(636,18780
quadclass2(646,19170
both_pm1(726,21321
qftriv(736,21736
qfsolvemodp(771,22828
check_symmetric(815,24254
qfsolve_i(833,24879
qfsolve(1039,30899
qfparam(1051,31267

/home/mengxue/pari/src/basemath/polclass.c,1474
#define dbg_printf(17,614
hasse_bounds(27,873
famatsmall_divexact(40,1113
test_curve_order(76,1959
jac_eq_or_opp(155,3791
find_j_inv_with_given_trace(166,4148
  enum { MAX_X1_CURVE_LVL 179,4555
#define PCP_GEN_NORMS(272,7062
#define PCP_REL_ORDERS(273,7099
#define PCP_POW_RELS(274,7137
#define PCP_QFI_TABLE(275,7173
#define PCP_NGENS(276,7210
pcp_order(279,7272
next_prime_generator(282,7340
hash_GEN_wrapper(322,8519
gequal_wrapper(328,8589
minimal_polycyclic_presentation(337,8729
classno_wrapper(420,11115
#define HALFLOGPI 436,11362
logfac(444,11556
#define LOG2E 452,11691
upper_bound_on_classpoly_coeffs(457,11811
#define V_MAX 511,13716
#define NSMALL_PRIMES 513,13736
static const long SMALL_PRIMES[SMALL_PRIMES514,13761
is_smooth_enough(519,13857
hclassno_wrapper(539,14284
select_classpoly_prime_pool(562,14787
cmp_small(655,17763
primecmp(661,17836
height_margin(669,17939
select_classpoly_primes(682,18220
oneroot_of_classpoly(733,19573
enum_j_with_endo_ring_small_disc_r(803,21764
carray_isin(848,22874
enum_j_with_endo_ring_small_disc(858,23010
unique_root(874,23403
fill_parallel_path(905,24285
fill_box(930,25075
enum_j_with_endo_ring(990,26787
select_twisting_param(1031,28112
setup_norm_eqn(1042,28240
Flv_powsum_pre(1054,28491
adjust_signs(1064,28672
find_jinv(1093,29339
polclass_roots_modp(1120,30097
polclass_psum(1147,30856
  enum { MIN_STAB_CNT 1152,31048
polclass0(1206,32431
polclass(1287,34950

/home/mengxue/pari/src/basemath/lfunutils.c,2108
tag(24,981
is_tagged(28,1079
checkldata(34,1182
lfuncreate(53,1847
vecan_mul(74,2456
lfunconvol(83,2658
vecan_div(87,2741
lfunconvolinv(96,2950
lfunmulpoles(100,3035
lfunmul(136,3983
lfundivpoles(158,4835
lfundiv(181,5471
lfunzeta(223,6997
lfunzetainit_bitprec(231,7180
vecan_chivec(235,7306
lfunchivec(258,7771
vecan_Kronecker(277,8350
lfunchiquad(287,8588
lfunchitype(301,8961
lfunchi(314,9214
chigencheck(333,9795
cyc_get_d1(346,10154
chigeneval(354,10530
vecan_chigen(385,11312
vec01(424,12344
lfunchigen(434,12566
chigenker(463,13497
chigenkerfind(479,14061
chigenbnrtobnrs(521,15025
chigenprimitive(541,15635
lfunzetak_i(570,16496
lfunzetak(596,17115
lfunabelianrelinit_bitprec(601,17238
lfunabelianrelinit(634,18244
dirzetak0(643,18630
dirzetak(702,20349
linit_get_mat(716,20661
lfunproduct(725,20871
lfunzetaKinit_bitprec(737,21308
lfunzetaKQinit_bitprec(749,21751
lfunzetaKkinit_bitprec(769,22446
lfunzetakinit_bitprec(799,23755
lfunzetakinit(823,24449
lfunell(833,24799
lfunmfspec(847,25189
vecan_symsq(893,26651
ellsymsq_bad2(927,27520
ellsymsq_bad3(942,27880
c4c6_testp(960,28317
ellsymsq_badp(964,28454
ellsymsq(978,28840
vecan_ellsymsq(1009,29596
lfunsymsqfind_ell(1013,29715
lfunsymsqfind(1043,30463
lfunsymsq(1138,33242
lfunellsymsq(1158,33863
lfunissymsq(1174,34251
lfunsymsqspec(1178,34355
mfpeters(1231,36069
lfunmfpeters_bitprec(1241,36466
lfunmfpeters(1264,37163
lfunellmfpeters_bitprec(1268,37268
elldiscfix(1287,37835
ellmoddegree(1322,38787
eta_inflate_ZXn(1346,39727
vecan_eta(1365,40136
etaquocheck(1384,40692
etaquotype(1412,41456
lfunetaquo(1461,42741
vecan_qf(1482,43327
qf_iseven(1486,43417
lfunqf(1496,43549
enum { t_LFUNMISC_POL,1521,44341
enum { t_LFUNMISC_POL, t_LFUNMISC_CHI,1521,44341
enum { t_LFUNMISC_POL, t_LFUNMISC_CHI, t_LFUNMISC_CHIGEN,1521,44341
       t_LFUNMISC_ELLINIT,1522,44399
       t_LFUNMISC_ELLINIT, t_LFUNMISC_ETAQUO 1522,44399
lfundatatype(1524,44459
lfunmisc_to_ldata_i(1546,44964
lfunmisc_to_ldata(1568,45597
lfunmisc_to_ldata_shallow(1572,45673
ldata_vecan(1580,46047

/home/mengxue/pari/src/basemath/FpX.c,3459
get_FpX_red(20,680
get_FpX_mod(27,794
get_FpX_var(30,858
get_FpX_degree(33,934
to_Flx(53,1790
to_Flxq(61,1924
Z_to_FpX(69,2059
FpX_red(81,2335
FpXV_red(89,2509
FpXT_red(98,2655
FpX_normalize(112,2874
FpX_center(120,3032
FpX_add(129,3210
Fp_red_FpX(143,3598
Fp_neg_FpX(154,3793
FpX_Fp_add(165,3981
FpX_Fp_add_shallow(178,4280
FpX_Fp_sub(191,4585
FpX_Fp_sub_shallow(204,4884
FpX_neg(218,5185
FpX_subspec(228,5372
FpX_sub(252,5961
Fp_FpX_sub(260,6084
FpX_mul(279,6626
FpX_mulspec(282,6695
FpX_sqr(286,6800
FpX_mulu(289,6860
FpX_Fp_mulspec(300,7064
FpX_Fp_mul(311,7307
FpX_Fp_mul_to_monic(318,7423
_FpX_sqr(328,7628
_FpX_mul(331,7698
FpX_powu(334,7771
FpX_halve(341,7903
FpX_divrem_basecase(351,8070
FpX_div_by_X_x(453,10789
_FpX_divrem(466,11137
_FpX_add(468,11233
static struct bb_ring FpX_ring 470,11302
FpX_digits(473,11372
FpX_fromdigits(482,11571
FpX_valrem(490,11720
FpX_halfgcd_basecase(507,11955
FpX_addmulmul(530,12554
FpXM_FpX_mul2(536,12675
FpXM_mul2(546,12985
FpX_FpXM_qmul(556,13229
matid2_FpXM(567,13537
FpX_halfgcd_split(574,13652
FpX_halfgcd_i(595,14306
FpX_halfgcd(602,14453
FpX_gcd_basecase(629,15102
FpX_gcd(646,15429
FpX_gcd_check(679,16150
FpX_extgcd_basecase(697,16474
FpX_extgcd_halfgcd(721,17044
FpX_extgcd(749,17797
FpX_rescale(775,18325
FpX_deriv(790,18588
FpX_is_squarefree(793,18653
random_FpX(802,18790
FpX_eval(816,19173
FpX_chinese_coprime(852,20155
FpX_resultant(866,20525
FpX_disc(904,21443
FpXV_prod(915,21713
FpV_roots_to_pol(921,21793
FpV_inv(934,22129
FqV_inv(951,22494
FpX_invBarrett_basecase(975,23253
ZX_lgrenormalizespec(993,23661
FpX_recipspec(1002,23798
FpX_invBarrett_Newton(1008,23892
FpX_invBarrett(1063,25618
FpX_get_red(1087,26098
FpX_divrem_Barrettspec(1097,26346
FpX_divrem_Barrett_noGC(1117,27100
FpX_divrem(1179,28578
FpX_rem(1211,29453
FpXQ_red(1240,30442
FpXQ_mul(1247,30531
FpXQ_sqr(1254,30627
FpXQ_invsafe(1263,30822
FpXQ_inv(1273,31036
FpXQ_div(1282,31195
struct _FpXQ 1288,31315
  GEN T,1289,31330
  GEN T, p,1289,31330
  GEN T, p, aut;1289,31330
_FpXQ_add(1293,31362
_FpXQ_cmul(1299,31451
_FpXQ_sqr(1305,31560
_FpXQ_mul(1311,31679
_FpXQ_zero(1317,31807
_FpXQ_one(1323,31921
_FpXQ_red(1329,32034
static struct bb_algebra FpXQ_algebra 1335,32135
FpXQ_pow(1339,32314
FpXQ_powu(1362,32883
FpXQ_powers(1383,33390
FpXQ_matrix_pow(1399,33814
FpX_Frobenius(1405,33924
FpX_matFrobenius(1411,34012
FpX_FpXQV_eval(1418,34141
FpX_FpXQ_eval(1426,34324
FpXC_FpXQV_eval(1443,34770
FpXM_FpXQV_eval(1453,34961
FpXQ_autpowers(1463,35147
FpXQ_autpow_sqr(1481,35647
FpXQ_autpow_mul(1488,35775
FpXQ_autpow(1495,35903
FpXQ_autsum_mul(1505,36147
FpXQ_autsum_sqr(1519,36599
FpXQ_autsum(1523,36673
FpXQM_autsum_mul(1531,36851
FpXQM_autsum_sqr(1546,37329
FpXQM_autsum(1550,37405
bounded_order(1558,37591
FpXQ_pow_Frobenius(1585,37991
FpXQ_issquare(1623,39174
Fp_issquare(1634,39452
Fq_issquare(1641,39581
Fp_FpXQ_log(1649,39807
_FpXQ_pow(1681,40571
_FpXQ_rand(1688,40718
_FpXQ_easylog(1702,40946
static const struct bb_group FpXQ_star=1709,41120
get_FpXQ_star(1712,41260
FpXQ_order(1720,41470
FpXQ_log(1738,41793
Fq_log(1766,42398
FpXQ_sqrtn(1782,42724
FpXQ_sqrt(1826,43756
FpXQ_norm(1832,43839
FpXQ_trace(1843,44099
FpXQ_charpoly(1855,44385
FpXQ_minpoly(1868,44706
FpXQ_conjvec(1885,45014
gener_FpXQ_i(1905,45647
gener_FpXQ(1935,46406
gener_FpXQ2(1989,47741
gener_FpXQ_local(2007,48087

/home/mengxue/pari/src/basemath/polarit1.c,684
polmod_mod(29,1492
rem_scal_scal(40,1807
rem_pol_scal(49,2048
rem_scal_pol(57,2265
poldivrem(67,2445
gdeuc(104,3614
grem(120,4189
check_padic_p(176,6002
Zp_to_Z(183,6140
ZpX_to_ZX(196,6365
get_padic_content(204,6535
QpX_to_ZX(217,6829
Z_to_Zp(226,7003
ZV_to_ZpV(246,7395
ZX_to_ZpX(255,7596
ZX_to_ZpX_normalized(265,7918
ZXV_to_ZpXQV(277,8274
QpXQX_to_ZXY(287,8517
ZX_Zp_root(319,9466
Zp_appr(347,10219
ZX_Zp_roots(361,10637
pnormalize(380,11053
rootpadic(401,11573
rootpadic(401,11573
scalar_getprec(427,12304
getprec(438,12532
ZXY_ZpQ_root(447,12724
padicappr(471,13491
cmp_padic(504,14537
expo_is_squarefree(517,14770
ZX_monic_factorpadic(527,14941
factorpadic(578,16071

/home/mengxue/pari/src/basemath/buch2.c,5804
static const long RANDOM_BITS 22,1055
static const double BNF_C1 24,1104
static const long RELSUP 25,1152
static const long FAIL_DIVISOR 26,1182
static const long MINFAIL 27,1219
static const long BNF_RELPID 29,1268
static const long BMULT 30,1302
static const long maxtry_ELEMENT 31,1331
static const long maxtry_DEP 32,1377
static const long maxtry_FACT 33,1412
static const long RND_REL_RELPID 35,1463
static const long PREVENT_LLL_IN_RND_REL 36,1501
static const long MINSFB 38,1570
static const long SFB_MAX 39,1600
static const long DEPSIZESFBMULT 40,1631
static const long DEPSFBDIV 41,1670
static const ulong mod_p 43,1720
static const long maxtry_HONEST 45,1772
typedef struct FACT 47,1811
    long pr,48,1833
    long pr, ex;48,1833
} FACT;49,1850
typedef struct subFB_t 51,1859
  GEN subFB;52,1884
  struct subFB_t *old;old53,1897
} subFB_t;54,1920
typedef struct FB_t 63,2173
  GEN FB;64,2195
  GEN LP;65,2259
  GEN *LV;LV66,2308
  GEN iLP;69,2478
  GEN id2;70,2536
  GEN L_jid;71,2580
  long KC,72,2644
  long KC, KCZ,72,2644
  long KC, KCZ, KCZ2;72,2644
  GEN subFB;73,2666
  int sfb_chg;74,2741
  int newpow;75,2785
  GEN perm;76,2827
  GEN vecG,78,2957
  GEN vecG, G0;78,2957
  GEN idealperm;79,2973
  GEN minidx;80,3044
  subFB_t *allsubFB;allsubFB81,3120
  GEN embperm;82,3164
  GEN invs;83,3224
} FB_t;84,3266
enum { sfb_CHANGE 86,3275
enum { sfb_CHANGE = 1, sfb_INCREASE 86,3275
typedef struct REL_t 88,3319
  GEN R;89,3342
  long nz;90,3394
  GEN m;91,3451
  long relorig;92,3510
  long relaut;93,3565
  GEN junk[junk94,3646
} REL_t;95,3709
typedef struct RELCACHE_t 97,3719
  REL_t *chk;chk98,3747
  REL_t *base;base99,3783
  REL_t *last;last100,3820
  REL_t *end;end101,3863
  size_t len;102,3929
  long relsup;103,3986
  GEN basis;104,4057
  ulong missing;105,4117
} RELCACHE_t;106,4183
typedef struct FP_t 108,4198
  double **q;q109,4220
  GEN x;110,4234
  double *y;y111,4243
  double *z;z112,4256
  double *v;v113,4269
} FP_t;114,4282
typedef struct RNDREL_t 116,4291
  GEN Nideal;117,4317
  long jid;118,4331
  GEN ex;119,4343
  GEN m1;120,4353
} RNDREL_t;121,4363
wr_rel(124,4388
dbg_newrel(133,4560
dbg_cancelrel(145,4788
delete_cache(154,4979
unclone_subFB(167,5209
delete_FB(190,5605
reallocate(198,5710
#define pr_get_smallp(212,6042
bad_subFB(216,6146
assign_subFB(225,6317
FB_aut_perm(245,6780
subFBgen(311,8517
subFB_change(358,9718
init_famat(407,10708
red(410,10776
pre_allocate(428,11286
init_GRHcheck(435,11440
free_GRHcheck(451,11914
GRHok(463,12123
get_fs(471,12338
cache_prime_dec(506,13114
tailresback(534,13775
tailres(548,14474
primeneeded(564,15201
compute_invres(626,16806
nthideal(692,18586
FBgen(737,19881
GRHchk(804,21655
store(845,22613
divide_p_elt(854,22832
divide_p_id(869,23151
divide_p_quo(884,23468
smooth_norm(905,24022
divide_p(933,24559
can_factor(947,24982
factorgen(964,25500
addRe_modIm(982,25941
cleanarch(999,26247
not_given(1034,27033
exp_OK(1052,27507
getfu(1073,27960
init_units(1134,29804
get_norm_fact_primes(1162,30798
get_norm_fact(1182,31196
get_pr_lists(1200,31596
recover_partFB(1238,32424
add_to_fact(1263,32952
pr_index(1272,33237
Vbase_to_FB(1283,33461
SPLIT(1291,33658
split_ideal(1374,35942
get_Vbase(1398,36470
testprimes(1412,36823
triv_arch(1479,38901
get_arch(1484,39107
famat_to_arch(1500,39627
famat_get_arch_real(1523,40286
scalar_get_arch_real(1544,40796
low_prec(1562,41239
get_arch_real(1568,41540
init_red_mod_units(1595,42161
red_mod_units(1620,42790
act_arch(1642,43347
prec_arch(1679,44148
needed_bitprec(1690,44332
isprincipalarch(1705,44674
fact_ok(1741,45798
isprincipalall(1757,46316
triv_gen(1868,49540
bnfisprincipal0(1881,49860
bnfisprincipal0(1881,49860
isprincipal(1914,50733
isprincipalgen(1918,50824
isprincipalforce(1921,50900
isprincipalgenforce(1924,50980
add_principal_part(1928,51080
expand(1940,51396
expandext(1961,51901
expand(1986,52405
expandext(1999,52677
isprincipalfact(2015,53055
isprincipalfact_or_fail(2067,54360
bnfisunit(2092,55044
nfsign_from_logarch(2182,57614
nfsign_units(2197,57893
signunits(2218,58451
signunits(2218,58451
get_log_embed(2237,58851
perm_log_embed(2250,59236
set_fact(2266,59496
already_known(2295,60197
add_rel_i(2315,60767
add_rel(2405,63043
powPgen(2438,63831
powFBgen(2462,64398
step(2511,65712
Fincke_Pohst_ideal(2524,65902
small_norm(2643,69598
remove_content(2692,71029
get_random_ideal(2700,71148
rnd_rel(2724,71671
be_honest(2797,74063
clean_cols(2874,76343
compute_multiple_of_R_pivot(2900,76805
compute_multiple_of_R(2920,77436
bestappr_noer(2973,79228
compute_R(2994,79932
idnorm(3051,81668
inverse_if_smaller(3055,81797
neg_row(3070,82161
setlg_col(3077,82280
class_group_gen(3085,82441
decode_pr_lists(3170,85237
decodeprime(3191,85626
codeprime(3197,85728
codeprimes(3204,85859
makecycgen(3215,86133
get_y(3245,86854
makematal(3262,87435
#define MATAL 3315,88773
#define CYCGEN 3316,88790
check_and_build_cycgen(3318,88811
check_and_build_matal(3322,88902
get_regulator(3327,88998
get_archclean(3340,89317
my_class_group_gen(3363,89761
bnfnewprec_shallow(3370,89964
bnfnewprec(3410,91024
bnrnewprec_shallow(3417,91153
bnrnewprec(3426,91350
nfbasic_from_sbnf(3437,91564
get_clfu(3450,91825
buchall_end(3454,91935
bnftosbnf(3471,92250
bnfcompress(3492,92871
sbnf2bnf(3500,93007
bnfinit0(3545,94287
bnfinit0(3545,94287
Buchall(3573,94979
Buchall_deg1(3577,95097
extract_full_lattice(3594,95652
init_rel(3636,96558
cyclotomic_units(3669,97700
add_cyclotomic_units(3706,98807
shift_embed(3720,99101
shift_G(3738,99472
compute_vecG(3746,99644
automorphism_perms(3764,100176
automorphism_matrices(3815,101663
trim_list(3885,103411
try_elt(3907,103837
Buchall_param(3928,104364

/home/mengxue/pari/src/basemath/volcano.c,295
is_j_exceptional(19,657
node_degree(26,744
nhbr_polynomial(44,1170
walk_surface_of_2_volcano(63,1860
  enum { L 66,1967
extend_path(104,3107
ascend_volcano(129,3607
random_distinct_neighbours_of(193,5330
descend_volcano(226,6360
j_level_in_volcano(284,8063
walk_surface_path(329,9360

/home/mengxue/pari/src/basemath/zetamult.c,158
la(24,1121
rev(31,1231
etoa(40,1387
atoe(57,1703
phip(74,2053
isrhs(101,2767
istruerhs(116,3001
isinphi(126,3192
addevec(140,3506
zetamult(153,3729

/home/mengxue/pari/src/basemath/ellanal.c,1745
struct baby_giant22,969
  GEN baby,24,989
  GEN baby, giant,24,989
  GEN baby, giant, sum;24,989
  GEN bnd,25,1013
  GEN bnd, rbnd;25,1013
struct bg_data30,1072
  GEN E,32,1089
  GEN E, N;32,1089
  GEN bnd;33,1122
  ulong rootbnd;34,1176
  GEN an;35,1209
  GEN p;36,1263
typedef void bg_fun(39,1313
gen_BG_add(46,1551
gen_BG_init(73,2131
gen_BG_rec(84,2360
struct lcritical143,3877
  GEN h;145,3896
  long cprec;146,3919
  long L;147,3956
  GEN  K;148,3989
  long real;149,4022
logboundG0(153,4053
param_points(163,4280
vecF2_lk(181,4797
baby_init(224,5941
baby_size(249,6536
ellL1_add(261,6805
vecF2_lk_bsgs(277,7253
vecF(302,7913
glambda(335,8876
Lpoints(354,9379
Llambda(365,9668
ellgammafactor(373,9886
ellL1_eval(381,10094
ellL1_der(388,10299
ellL1_bitprec(396,10540
ellL1(413,11044
ellanalyticrank_bprec(416,11138
ellanalyticrank(450,12043
heegner_L1_bg(463,12382
heegner_L1(477,12793
baby_init2(492,13290
baby_init3(518,13958
heegner_psi(540,14509
lambda1(591,15931
lambdalist(618,16608
heightQ(655,17470
logplusQ(671,17790
hnaive_max(690,18167
qfb_root(704,18671
qimag2(711,18811
qfb_mult(724,19171
best_point_old(745,19887
qfb_eval(779,20756
nexti(788,20973
qfmin_eval(792,21051
gcduii(797,21203
best_point(807,21361
best_lift(907,24540
lift_points(918,24813
ltwist1(938,25325
heegner_indexmult(949,25584
omega_N_D(959,25849
heegner_indexmultD(969,26015
heegner_try_point(985,26352
heegner_find_point(1019,27420
fa_shift2(1048,28240
get_bad(1068,28688
find_div(1084,29057
testDisc(1099,29375
listDisc(1104,29605
listfill(1125,30038
listheegner(1148,30687
rootno(1181,31665
heegner_find_disc(1190,31815
ellanal_globalred_all(1261,34059
ellheegner(1271,34301

/home/mengxue/pari/src/basemath/ZX.c,1278
RgX_check_QX(23,969
RgX_check_ZX(26,1084
ZX_max_lg(29,1199
ZX_add(38,1352
ZX_sub(52,1740
ZX_neg(78,2313
ZX_copy(86,2455
scalar_ZX(100,2655
scalar_ZX_shallow(110,2825
ZX_Z_add(120,2996
ZX_Z_add_shallow(132,3292
ZX_Z_sub(145,3598
Z_ZX_sub(166,4057
ZX_Z_divexact(179,4354
ZX_Z_mul(188,4518
ZX_mulu(199,4720
ZX_shifti(210,4917
ZX_remi2n(220,5101
ZXT_remi2n(230,5285
zx_to_ZX(244,5511
ZX_deriv(253,5672
ZX_equal(265,5871
ZX_valspec(275,6046
ZX_val(284,6169
ZX_valrem(293,6307
ZX_div_by_X_1(304,6515
ZX_rescale2n(322,6922
ZX_rescale(337,7207
ZX_rescale_lt(353,7605
ZX_eval2BILspec(372,8008
ZX_expispec(397,8574
Z_mod2BIL_ZX(409,8732
ZX_sqrspec_sqri(435,9463
ZX_mulspec_mulii(444,9667
ZX_sqrspec_basecase_limb(453,9937
ZX_sqrspec_basecase(475,10350
Z_sqrshiftspec_ZX(491,10745
Z_ZX_mulshiftspec(502,10948
ZX_sqrspec(513,11201
ZX_sqr(539,13373
ZX_mulspec(547,13460
ZX_mul(563,13945
ZX_rem(575,14180
ZX_eval1(628,15479
ZX_mod_Xnm1(646,15796
ZXV_equal(668,16466
ZXV_Z_mul(678,16622
ZXV_remi2n(687,16764
ZXV_dotproduct(695,16908
RgX_check_ZXX(717,17563
ZXX_renormalize(733,17932
ZXX_max_lg(743,18147
ZXX_Z_mul(756,18360
ZXX_Z_add_shallow(769,18599
ZXX_Z_divexact(783,18886
ZXX_to_Kronecker_spec(799,19265
ZXX_to_Kronecker(828,19867

/home/mengxue/pari/src/basemath/FpXX.c,2518
to_FlxqX(27,1104
ZXX_copy(38,1359
FpXX_red(41,1401
FpXX_add(65,1867
FpXX_sub(78,2196
FpXX_subspec(100,2725
FpXX_neg(120,3223
FpXX_Fp_mul(130,3413
FpXX_mulu(143,3669
Kronecker_to_FpXQX(162,4294
Kronecker_to_ZXX(184,4872
ZXX_mul_Kronecker(206,5402
ZXX_sqr_Kronecker(210,5512
FpXQX_red(214,5592
ZXX_is_ZX_spec(227,5879
ZXX_is_ZX(236,6006
FpXX_FpX_mulspec(239,6076
FpXX_FpX_mul(255,6465
FpXY_FpY_mulspec(259,6566
FpXQX_mulspec(270,6886
FpXQX_mul(291,7422
FpXQX_sqr(298,7557
FpXQX_FpXQ_mul(309,7789
FpXQX_divrem_basecase(322,8161
FpXQX_gcd(426,11121
FpXQX_extgcd(449,11671
ZXX_lgrenormalizespec(490,12898
FpXQX_invBarrett_basecase(499,13036
FpXQX_recipspec(516,13466
FpXQX_invBarrett_Newton(522,13562
const long FpXQX_INVBARRETT_LIMIT 575,15296
const long FpXQX_DIVREM_BARRETT_LIMIT 576,15336
const long FpXQX_REM_BARRETT_LIMIT 577,15380
FpXQX_invBarrett(581,15462
FpXQX_divrem_Barrettspec(607,16092
FpXQX_divrem_Barrett_noGC(627,16876
FpXQX_divrem_Barrett(690,18424
FpXQX_divrem(701,18718
FpXQX_rem_Barrett(720,19233
FpXQX_rem(727,19395
Fq_addmul(744,19824
FpXQX_div_by_X_x(754,20066
struct _FpXQX 766,20418
struct _FpXQX { GEN T,766,20418
struct _FpXQX { GEN T,p;766,20418
static GEN _FpXQX_mul(768,20447
static GEN _FpXQX_sqr(774,20575
FpXQX_powu(781,20701
FpXQXV_prod(790,20886
_FpXQX_divrem(811,21283
_FpXQX_add(818,21431
static struct bb_ring FpXQX_ring 824,21544
FpXQX_digits(827,21624
FpXQX_fromdigits(839,21884
FpXY_evalx(851,22147
FpXY_evaly(865,22439
FpXY_eval(882,22908
FpXY_FpXQV_evalx(889,23043
FpXY_FpXQ_evalx(901,23353
  GEN S,917,24001
  GEN S, T,917,24001
  GEN S, T, p;917,24001
} FpXYQQ_muldata;918,24016
FpXYQQ_redswap(922,24109
FpXYQQ_sqr(934,24382
FpXYQQ_mul(941,24539
FpXYQQ_pow(949,24779
FpXQXQ_mul(971,25190
FpXQXQ_sqr(976,25297
FpXQXQ_invsafe(983,25499
FpXQXQ_inv(994,25805
FpXQXQ_div(1003,25981
  GEN T,1010,26136
  GEN T, S;1010,26136
  GEN p;1011,26148
} FpXQXQ_muldata;1012,26157
_FpXQXQ_add(1014,26186
_FpXQXQ_cmul(1019,26315
_FpXQXQ_red(1026,26543
_FpXQXQ_mul(1031,26670
_FpXQXQ_sqr(1036,26812
_FpXQXQ_one(1042,26946
_FpXQXQ_zero(1048,27060
static struct bb_algebra FpXQXQ_algebra 1053,27164
FpXQXQ_pow(1057,27329
FpXQXQ_powers(1083,27956
FpXQXQ_matrix_pow(1092,28197
FpXQX_FpXQXQV_eval(1098,28320
FpXQX_FpXQXQ_eval(1107,28564
FpXQXQ_autpow_sqr(1117,28862
FpXQXQ_autpow_mul(1131,29283
FpXQXQV_autpow(1146,29751
FpXQXQ_autsum_mul(1154,29928
FpXQXQ_autsum_sqr(1174,30684
FpXQXQV_autsum(1178,30761

/home/mengxue/pari/src/basemath/lll.c,668
static const double LLLDFT 18,650
lll_trivial(22,770
lll_get_im(52,1559
lll_finish(62,1722
Babai(100,3303
rotate(319,11384
fplll(336,11817
ZM_lll_norms(506,16981
pslg(534,17885
REDgen(542,18001
do_SWAPgen(556,18349
incrementalGSgen(613,19745
lllgramallgen(638,20341
lllallgen(680,21283
lllgen(687,21441
lllkerimgen(689,21492
lllgramgen(691,21549
lllgramkerimgen(693,21614
lllall(696,21693
lllint(702,21799
lllkerim(704,21847
lllgramint(706,21898
lllgramkerim(708,21961
rescale_to_int(711,22035
lllfp(750,22937
lllgram(761,23144
lll(763,23207
qflll0(766,23258
qflll0(766,23258
qflllgram0(783,23700
qflllgram0(783,23700
kerint0(804,24482
kerint(812,24650
matkerint0(819,24759
matkerint0(819,24759

/home/mengxue/pari/src/basemath/F2xqE.c,1633
RgE_to_F2xqE(35,1456
F2xqE_changepoint(42,1583
F2xqE_changepointinv(58,2037
nonzerotrace_F2xq(74,2472
F2xq_elltwist(90,2709
F2xqE_dbl_slope(107,3101
F2xqE_dbl(133,3849
F2xqE_add_slope(141,3990
F2xqE_add(173,4861
F2xqE_neg_i(181,5013
F2xqE_neg(190,5190
F2xqE_sub(200,5398
struct _F2xqE207,5558
  GEN a2,209,5574
  GEN a2, a6;209,5574
  GEN T;210,5588
_F2xqE_dbl(214,5612
_F2xqE_add(221,5739
_F2xqE_mul(228,5874
F2xqE_mul(240,6198
random_F2xqE(249,6363
_F2xqE_rand(279,7139
static const struct bb_group F2xqE_group=285,7256
get_F2xqE_group(288,7395
F2xqE_order(297,7614
F2xqE_log(306,7794
F2xqE_vert(323,8417
F2xqE_tangent_update(335,8680
F2xqE_chord_update(360,9286
struct _F2xqE_miller394,10097
  GEN T,396,10120
  GEN T, a2,396,10120
  GEN T, a2, P;396,10120
F2xqE_Miller_dbl(400,10151
F2xqE_Miller_add(416,10593
F2xqE_Miller(433,11132
F2xqE_weilpairing(448,11557
F2xqE_tatepairing(463,11994
Z2x_rshift(479,12584
gen_Z2x_Dixon(492,12859
gen_Z2X_Dixon(517,13517
static GEN _can_invls(542,14268
static GEN _can_lin(546,14358
static GEN _can_lins(556,14605
_can_iter(568,14874
_can_invd(580,15123
F2x_canonlift(592,15479
Z2XQ_frob(596,15598
Z2xq_frob(602,15688
struct _frob_lift607,15769
  GEN T,609,15789
  GEN T, sqx;609,15789
static GEN _frob_invls(614,15833
static GEN _frob_lin(623,16049
static GEN _frob_lins(633,16299
_lift_iter(646,16578
_lift_invd(661,17034
solve_AGM_eqn(687,17870
Z2XQ_invnorm_pcyc(695,18042
Z2XQ_invnorm(704,18206
F2xq_elltrace_Harley(725,18815
F2xq_ellcard(756,19885
_F2xqE_pairorder(808,21798
F2xq_ellgroup(815,21971
F2xq_ellgens(825,22254

/home/mengxue/pari/src/basemath/bibli1.c,1556
no_prec_pb(28,1232
FindApplyQ(37,1560
ApplyQ(75,2511
ApplyAllQ(89,2898
RgC_ApplyQ(100,3144
RgC_ApplyAllQ(113,3494
RgM_QR_init(123,3666
check_householder(130,3805
mathouseholder(144,4150
matqr(165,4570
QR_init(184,5137
gaussred_from_QR(199,5572
R_from_QR(215,5930
RgM_gram_schmidt(229,6373
RgM_Babai(258,7040
lllintpartialall(304,8830
lllintpartial(482,14794
lllintpartial_inplace(485,14858
check_condition(495,15364
choose_params(509,15735
sol_OK(539,16588
do_exhaustive(543,16764
zncoppersmith(562,17382
real_indep(706,22126
lindep2(714,22313
init_dalloc(761,23442
dalloc(767,23568
padic_lindep(774,23687
Xadic_lindep(809,24547
lindep(839,25326
lindep0(842,25371
lindep0(842,25371
algdep0(859,25731
algdep0(859,25731
algdep(889,26513
seralgdep(895,26569
minim_alloc(941,28105
addcolumntomatrix(958,28537
struct qfvec989,29333
  GEN a,991,29348
  GEN a, r,991,29348
  GEN a, r, u;991,29348
err_minim(995,29379
forqfvec_init_dolll(1002,29512
forqfvec_init(1025,30021
forqfvec(1031,30110
_gp_forqf(1095,31584
forqfvec0(1106,31775
forqfvec0(1106,31775
minim0_dolll(1131,32612
cp_vec_to_mat(1381,38891
minim0_dolll_filter(1392,39260
  typedef long (*filter_t)filter_t1405,39753
minim0(1698,47995
qfrep0(1705,48144
qfrep0(1705,48144
qfminim0(1709,48262
qfminim0(1709,48262
minim(1740,49179
minim_raw(1746,49269
minim2(1752,49375
perf(1758,49468
perf(1758,49468
clonefill(1764,49535
step(1778,50044
mplessthan(1795,50481
mpgreaterthan(1809,50830
mulimp(1822,51130
addmulimp(1829,51286
norm_aux(1838,51473
check_bound(1850,51771
cholesky_norm_ek(1862,52152
smallvectors(1876,52632
fincke_pohst(2104,59271

/home/mengxue/pari/src/basemath/bit.c,577
inegate(23,985
binary_zv(26,1029
F2v_to_ZV_inplace(47,1407
bits_to_int(56,1639
bits_to_u(76,2090
binaire(85,2208
binaire(85,2208
binary_2k_zv(144,3542
binary_2k(162,3958
bittest(181,4390
gbittest(196,4650
gbittest(196,4650
ibittrunc(206,5229
gbitneg(232,5936
gbitneg(232,5936
ibitand(277,7166
ibitor(304,7722
ibitxor(339,8464
ibitnegimply(374,9221
signs(406,9845
checkint2(408,9932
gbitor(412,10038
gbitor(412,10038
gbitand(436,10475
gbitand(436,10475
gbitxor(460,10914
gbitxor(460,10914
gbitnegimply(485,11365
gbitnegimply(485,11365
hamming_word(509,11826
hamming_slice(531,12638
hamming_mat(539,12783
hamming_vecsmall(546,12919
hamming_int(554,13049
hammingweight(564,13231

/home/mengxue/pari/src/basemath/gen2.c,3187
map_proto_G(29,1404
map_proto_lG(42,1618
map_proto_lGL(55,1841
_domul(68,2086
gassoc_proto(75,2194
cgetp(99,2906
glength(115,3459
glength(115,3459
matsize(133,3798
greffe_aux(152,4417
RgX_to_ser(169,4854
RgX_to_ser_inexact(175,4982
rfrac_to_ser(193,5388
gtolong(204,5826
isexactzero(232,6648
isrationalzero(263,7414
gequal0(286,7912
is_monomial_test(343,9301
col_test(359,9697
mat_test(368,9885
gequal1(385,10255
gequalm1(430,11235
gequalX(481,12354
cmp_str(485,12488
cmp_universal_rec(493,12610
cmp_universal(508,12956
cmp_universal(508,12956
cmpfrac(567,14296
cmpifrac(576,14488
cmprfrac(584,14637
cmpgen(592,14786
gcmp(601,14954
gcmpsg(657,16263
roughtype(675,16657
static int lexcmpgs(687,16879
lexcmp_s_matvec(690,16997
lexcmp_scal_matvec(700,17182
lexcmp_scal_vecsmall(710,17360
lexcmp_similar(721,17557
lexcmp_vecsmall_vec(734,17855
lexcmp_vec_mat(748,18132
lexcmp_vecsmall_mat(759,18353
lexcmp_vecsmall_other(771,18569
lexcmpsg(783,18838
lexcmp(799,19190
lexcmp(799,19190
polidentical(831,20253
seridentical(841,20485
vecidentical(844,20591
identicalrr(853,20785
closure_identical(863,20967
list_cmp(873,21243
gidentical(898,21779
gidentical(898,21779
polequal(962,23471
serequal(975,23817
vecequal(986,24084
gequal_try(996,24271
gequal(1014,24589
gequalsg(1090,26512
minval(1107,27257
intdvd(1119,27450
ratval(1123,27582
Q_pval(1130,27693
Q_pvalrem(1133,27778
gvaluation(1147,28066
gpvaluation(1262,30961
gpvaluation(1262,30961
u_lvalrem(1270,31086
u_lval(1282,31336
z_lval(1295,31532
z_lvalrem(1297,31592
z_pval(1316,31863
z_pvalrem(1323,31977
Z_pvalrem_DC(1331,32182
static const long VAL_DC_THRESHOLD 1345,32532
Z_lval(1348,32579
Z_lvalrem(1371,33073
isless_iu(1402,33831
u_lvalrem_stop(1408,33934
Z_lvalrem_stop(1422,34314
Z_pvalrem(1457,34954
u_pvalrem(1473,35311
u_pval(1479,35436
Z_pval(1485,35531
factorial_lval(1502,35850
gen_Z_divides(1514,36155
gen_z_divides(1532,36653
gen_pvalrem_DC(1552,37163
gen_2val(1579,37791
gen_lval(1593,38041
ZX_lval(1609,38365
ZV_lval(1611,38424
gen_pval(1614,38491
ZX_pval(1639,39020
ZV_pval(1641,39077
ZV_Z_dvd(1644,39153
gen_2valrem(1654,39342
gen_lvalrem(1674,39770
ZX_lvalrem(1703,40439
ZV_lvalrem(1705,40515
gen_pvalrem(1708,40599
ZX_pvalrem(1733,41145
ZV_pvalrem(1735,41219
gneg(1744,41644
gneg(1744,41644
gneg_i(1814,43307
is_negative(1888,45324
gabs(1900,45500
gabs(1900,45500
gmax(1954,46816
gmax(1954,46816
gmaxgs(1956,46876
gmin(1959,46951
gmin(1959,46951
gmings(1961,47011
vecindexmax(1964,47086
vecindexmin(1985,47527
vecmax0(2008,47969
vecmax0(2008,47969
vecmin0(2044,48810
vecmin0(2044,48810
vecmax(2081,49652
vecmin(2083,49699
padicaff0(2093,50176
gaffsg(2103,50296
padic_to_Fp(2133,51384
padic_to_Fl(2147,51849
croak(2165,52284
gaffect(2172,52414
quadtofp(2310,56648
qtop(2332,57214
ctop(2351,57695
cvstop2(2366,58079
cvtop2(2382,58484
cvtop(2423,59670
gcvtop(2466,60936
gexpo(2487,61373
sizedigit(2526,62289
normalize(2533,62420
normalizepol_approx(2577,63570
normalizepol_lg(2587,63790
normalizepol(2619,64594
gsigne(2625,64659
gsigne(2625,64659
ensure_nb(2662,65940
listkill(2686,66468
listcreate_typ(2701,66747
listcreate(2709,66860
listput(2715,66923
listput0(2739,67400
listput0(2739,67400
listinsert(2747,67560
listpop(2768,68131
listpop0(2787,68572
listpop0(2787,68572
mklistcopy(2796,68777
gtolist(2806,68971
gtolist(2806,68971
listsort(2829,69388

/home/mengxue/pari/src/basemath/alglin1.c,5194
gerepile_mat(30,1409
gen_gerepile_gauss_ker(52,1885
#define COPY(66,2362
_copy(71,2460
gerepile_gauss_ker(78,2532
gerepile_gauss(84,2656
gen_ker(120,3796
gen_Gauss_pivot(196,5765
gen_det(243,6974
_gen_addmul(288,8143
_gen_get_col(295,8329
gen_Gauss(314,8835
gen_matcolmul_i(365,10344
gen_matcolmul(382,10768
gen_matmul(393,11040
image_from_pivot(412,11488
F2v_find_nonzero(433,12126
F2m_ker_sp(448,12438
_Fl_submul(504,13538
_Fl_sub(509,13681
_Fl_addmul_OK(514,13850
_Fl_add_OK(520,14051
_Fl_addmul(526,14195
_Fl_add(532,14355
Flm_ker_sp(539,14474
FpM_intersect(621,16339
F2m_ker(635,16634
F2m_deplin(637,16692
Flm_ker(639,16753
Flm_deplin(641,16823
F2m_det_sp(644,16899
F2m_det(647,16954
Flm_det_sp_OK(656,17118
Flm_det_sp(704,18137
Flm_det(739,18942
FpM_init(747,19066
RgM_Fp_init(757,19234
FpM_det_gen(768,19429
FpM_det(775,19550
F2m_gauss_pivot(791,19828
Flm_gauss_pivot(825,20501
FpM_gauss_pivot_gen(869,21517
FpM_gauss_pivot(876,21675
FpM_image(890,21960
Flm_image(897,22108
F2m_image(904,22268
FpM_rank(912,22419
Flm_rank(920,22548
F2m_rank(928,22689
FlxqM_gauss_pivot(938,22827
FlxqM_image(946,22992
FlxqM_rank(954,23157
FlxqM_det(962,23300
FlxqM_FlxqC_mul(970,23435
FlxqM_mul(977,23594
F2xqM_det(994,23914
F2xqM_gauss_gen(1002,24044
F2xqM_inv(1009,24184
F2xqM_F2xqC_mul(1020,24427
F2xqM_mul(1027,24574
FqM_gauss_pivot_gen(1034,24719
FqM_gauss_pivot(1041,24886
FqM_image(1057,25291
FqM_rank(1065,25450
FqM_det(1074,25588
FqM_FqC_mul(1082,25715
FqM_mul(1089,25866
FpM_ker_gen(1096,26017
FpM_ker_i(1103,26166
FpM_ker(1128,26667
FpM_deplin(1131,26723
FqM_ker_gen(1134,26789
FqM_ker_i(1141,26944
FqM_ker(1159,27333
FqM_deplin(1162,27398
FlxqM_ker_i(1165,27473
FlxqM_ker(1176,27674
F2xqM_ker_i(1182,27757
F2xqM_ker(1193,27949
F2xqM_gauss_pivot(1198,28019
F2xqM_image(1205,28170
F2xqM_rank(1212,28323
approx_0(1226,28841
gauss_get_pivot_max(1237,29173
gauss_get_pivot_padic(1264,29726
gauss_get_pivot_NZ(1289,30234
get_pivot_fun(1313,30893
get_col(1356,31874
Fl_get_col_OK(1373,32252
Fl_get_col(1394,32703
_submul(1414,33116
init_gauss(1419,33217
is_modular_solve(1452,33937
RgM_solve(1537,35941
RgM_inv_upper_ind(1610,38002
RgM_inv_upper(1625,38395
FpM_inv_upper_1_ind(1635,38622
FpM_inv_upper_1(1650,39011
Flm_inv_upper_1_ind(1660,39268
F2m_inv_upper_1_ind(1686,39908
Flm_inv_upper_1(1701,40277
F2m_inv_upper_1(1709,40445
split_realimag_col(1718,40602
split_realimag(1736,41046
RgM_solve_realimag(1749,41461
gauss(1757,41649
gauss(1757,41649
F2_get_col(1771,41949
F2m_gauss_sp(1789,42299
F2m_gauss(1832,43317
F2m_F2c_gauss(1839,43478
F2m_inv(1848,43672
Flm_gauss_sp(1857,43862
Flm_gauss(1955,46324
Flm_inv_sp(1959,46444
Flm_inv(1964,46590
Flm_Flc_gauss(1968,46672
FpM_gauss_gen(1976,46885
FpM_gauss_i(1984,47090
FpM_gauss(2002,47480
FpM_inv(2019,47847
FpM_FpC_gauss(2037,48197
FlxqM_gauss_gen(2055,48592
FlxqM_gauss(2062,48744
FlxqM_inv(2073,49008
FlxqM_FlxqC_gauss(2083,49263
FqM_gauss_gen(2094,49516
FqM_gauss(2101,49657
FqM_inv(2113,49935
FqM_FqC_gauss(2124,50188
ZM_gauss(2138,50560
ZM_inv(2199,52131
QM_inv(2272,53804
detint(2283,54113
detint(2283,54113
ZM_detmult(2290,54238
closemodinvertible(2365,56066
reducemodinvertible(2370,56149
reducemodlll(2375,56234
keri(2388,56800
deplin_aux(2460,58534
RgV_deplin(2504,59722
deplin(2524,60177
gauss_pivot_ker(2572,61633
RgM_pivots(2624,63144
ZM_count_0_cols(2662,64148
ZM_pivots(2673,64419
gauss_pivot(2736,66157
ker_aux(2745,66409
ker(2772,66973
matker0(2792,67423
matker0(2792,67423
image(2801,67578
imagecompl_aux(2826,68161
imagecompl(2841,68507
imagecompl(2841,68507
ZM_imagecompl(2843,68573
imagecomplspec_aux(2847,68721
imagecomplspec(2865,69185
ZM_imagecomplspec(2868,69275
RgM_RgC_invimage(2872,69367
FpM_FpC_invimage(2916,70348
Flm_Flc_invimage(2944,71053
F2m_F2c_invimage(2966,71582
inverseimage(2988,72152
inverseimage(2988,72152
Flm_invimage_i(3006,72513
F2m_invimage_i(3032,73319
Flm_invimage(3058,74065
F2m_invimage(3066,74231
FpM_invimage_i(3074,74393
FpM_invimage(3107,75360
RgM_invimage(3117,75584
get_suppl(3171,77049
init_suppl(3195,77747
suppl(3205,78087
suppl(3205,78087
FpM_suppl(3229,78624
Flm_suppl(3238,78799
F2m_suppl(3248,78992
FqM_suppl(3258,79171
image2(3271,79391
matimage0(3288,79776
matimage0(3288,79776
rank(3300,79968
rank(3300,79968
perm_complete(3327,80566
indexrank0(3341,80916
indeximage0(3359,81331
indexrank_all(3372,81607
init_indexrank(3379,81800
indexrank(3384,81874
indexrank(3384,81874
FpM_indexrank(3407,82355
Flm_indexrank(3416,82530
F2m_indexrank(3425,82717
ZM_indeximage(3435,82894
ZM_rank(3444,83056
ZM_indexrank(3451,83166
rem_col(3467,83685
rem_singleton(3479,83906
fill_wcol(3502,84369
RgMs_structelim(3535,85228
mateigen(3591,86973
eigen(3662,88688
det0(3671,89101
det0(3671,89101
RgM_det2(3684,89325
ZM_det2(3693,89553
ZM_det3(3702,89786
det_simple_gauss(3723,90319
det2(3762,91244
mydiv(3777,91595
det_bareiss(3787,91848
col_count_non_zero(3851,93369
row_count_non_zero(3867,93750
coeff_det(3883,94133
det_develop(3894,94515
parallelogramarea(3966,96235
RgM_Hadamard(3973,96549
ZM_det_i(3990,96967
det_init_max(4053,98687
det(4062,98802
ZM_det(4097,99697
gaussmoduloall(4107,99942
matsolvemod0(4178,101769
matsolvemod0(4178,101769
gaussmodulo2(4192,102042
gaussmodulo(4195,102115

/home/mengxue/pari/src/basemath/crvwtors.c,35575
Fl_div4(25,931
Fl_div8(32,1014
  RS_MAP,40,1182
  RS_MAP, T_MAP,40,1182
  RS_MAP, T_MAP, QT_MAP,40,1182
  RS_MAP, T_MAP, QT_MAP, TQ_MAP40,1182
} map_type;41,1214
  GEN crv;44,1244
  GEN r_num,45,1255
  GEN r_num, r_den;45,1255
  long rplus1;46,1275
  GEN s_num,47,1290
  GEN s_num, s_den;47,1290
  long splus1;48,1310
  map_type map;49,1325
} X1_info;50,1341
#define FIRST_X1_LEVEL 52,1353
#define LAST_X1_LEVEL 53,1379
map_X1_points(60,1593
a2a4_to_a4a6(132,3676
a1a3_to_a4a6(150,4276
bc_to_a4a6(174,5108
bc_to_a4a6_and_tors(203,5836
tq_to_a4a6_and_tors(218,6214
qt_to_a4a6_and_tors(239,6871
t_to_a4a6_and_tors(270,8037
rs_to_a4a6_and_tors(291,8762
random_curves_with_general_X1(304,9063
random_curves_with_11_torsion(355,10270
random_curves_with_elliptic_X1(405,11893
random_curves_with_2_torsion(434,12804
random_curves_with_3_torsion(454,13346
random_curves_with_4_torsion(477,14027
random_curves_with_5_torsion(490,14320
random_curves_with_6_torsion(503,14612
random_curves_with_7_torsion(517,14976
random_curves_with_8_torsion(532,15399
random_curves_with_9_torsion(550,15890
random_curves_with_10_torsion(567,16385
random_curves_with_12_torsion(593,17010
random_curves_with_rational_X1(622,17825
random_curves_with_any_torsion(665,19002
torsion_compatible_with_characteristic(690,19498
random_curves_with_m_torsion(720,20605
#define vZ 752,21671
static const long FLX_0[FLX_0753,21739
static const long FLX_1[FLX_1754,21810
static const long FLX_m1[FLX_m1755,21884
static const long FLX_Z[FLX_Z756,21960
static const long FLX_mZ[FLX_mZ757,22037
static const long X1_13_crv_0[X1_13_crv_0764,22199
static const long X1_13_crv_1[X1_13_crv_1766,22304
static const long *X1_13_crv[X1_13_crv768,22415
static const long *X1_13_r_n[X1_13_r_n773,22582
static const long *X1_13_r_d[X1_13_r_d778,22724
static const long *X1_13_s_n[X1_13_s_n783,22861
static const long *X1_13_s_d[X1_13_s_d788,23007
static const long X1_14_crv_1[X1_14_crv_1793,23168
static const long *X1_14_crv[X1_14_crv795,23270
static const long *X1_14_r_n[X1_14_r_n800,23429
static const long X1_14_r_d_0[X1_14_r_d_0805,23596
static const long X1_14_r_d_1[X1_14_r_d_1807,23693
static const long *X1_14_r_d[X1_14_r_d809,23790
static const long X1_14_s_n_0[X1_14_s_n_0814,23957
static const long *X1_14_s_n[X1_14_s_n816,24056
static const long *X1_14_s_d[X1_14_s_d821,24200
static const long X1_15_crv_0[X1_15_crv_0826,24367
static const long X1_15_crv_1[X1_15_crv_1828,24465
static const long *X1_15_crv[X1_15_crv830,24571
static const long *X1_15_r_n[X1_15_r_n835,24739
static const long X1_15_r_d_0[X1_15_r_d_0840,24905
static const long X1_15_r_d_1[X1_15_r_d_1842,25012
static const long *X1_15_r_d[X1_15_r_d844,25110
static const long *X1_15_s_n[X1_15_s_n849,25263
static const long X1_15_s_d_0[X1_15_s_d_0854,25412
static const long *X1_15_s_d[X1_15_s_d856,25514
static const long X1_16_crv_0[X1_16_crv_0861,25686
static const long X1_16_crv_1[X1_16_crv_1863,25784
static const long *X1_16_crv[X1_16_crv865,25900
static const long X1_16_r_n_0[X1_16_r_n_0870,26081
static const long X1_16_r_n_1[X1_16_r_n_1872,26179
static const long *X1_16_r_n[X1_16_r_n874,26278
static const long X1_16_r_d_0[X1_16_r_d_0879,26455
static const long *X1_16_r_d[X1_16_r_d881,26562
static const long *X1_16_s_n[X1_16_s_n886,26715
static const long X1_16_s_d_0[X1_16_s_d_0891,26863
static const long *X1_16_s_d[X1_16_s_d893,26960
static const long X1_17_crv_0[X1_17_crv_0898,27181
static const long X1_17_crv_1[X1_17_crv_1900,27288
static const long X1_17_crv_2[X1_17_crv_2902,27401
static const long X1_17_crv_3[X1_17_crv_3904,27513
static const long *X1_17_crv[X1_17_crv906,27629
static const long X1_17_r_n_0[X1_17_r_n_0911,27828
static const long *X1_17_r_n[X1_17_r_n913,27930
static const long X1_17_r_d_0[X1_17_r_d_0918,28105
static const long X1_17_r_d_1[X1_17_r_d_1920,28207
static const long *X1_17_r_d[X1_17_r_d922,28305
static const long X1_17_s_n_0[X1_17_s_n_0927,28472
static const long *X1_17_s_n[X1_17_s_n929,28569
static const long X1_17_s_d_0[X1_17_s_d_0934,28719
static const long *X1_17_s_d[X1_17_s_d936,28816
static const long X1_18_crv_0[X1_18_crv_0941,28999
static const long X1_18_crv_1[X1_18_crv_1943,29094
static const long *X1_18_crv[X1_18_crv945,29214
static const long X1_18_r_n_0[X1_18_r_n_0950,29395
static const long *X1_18_r_n[X1_18_r_n952,29504
static const long X1_18_r_d_0[X1_18_r_d_0957,29688
static const long X1_18_r_d_1[X1_18_r_d_1959,29797
static const long *X1_18_r_d[X1_18_r_d961,29911
static const long X1_18_s_n_0[X1_18_s_n_0966,30079
static const long *X1_18_s_n[X1_18_s_n968,30184
static const long X1_18_s_d_0[X1_18_s_d_0973,30362
static const long X1_18_s_d_1[X1_18_s_d_1975,30467
static const long *X1_18_s_d[X1_18_s_d977,30567
static const long X1_19_crv_0[X1_19_crv_0982,30871
static const long X1_19_crv_1[X1_19_crv_1984,30978
static const long X1_19_crv_2[X1_19_crv_2986,31114
static const long X1_19_crv_3[X1_19_crv_3988,31251
static const long X1_19_crv_4[X1_19_crv_4990,31376
static const long *X1_19_crv[X1_19_crv992,31481
static const long X1_19_r_n_0[X1_19_r_n_0997,31704
static const long X1_19_r_n_1[X1_19_r_n_1999,31804
static const long *X1_19_r_n[X1_19_r_n1001,31907
static const long X1_19_r_d_0[X1_19_r_d_01006,32115
static const long X1_19_r_d_1[X1_19_r_d_11008,32230
static const long X1_19_r_d_2[X1_19_r_d_21010,32334
static const long *X1_19_r_d[X1_19_r_d1012,32434
static const long *X1_19_s_n[X1_19_s_n1017,32606
static const long X1_19_s_d_0[X1_19_s_d_01022,32775
static const long X1_19_s_d_1[X1_19_s_d_11024,32883
static const long *X1_19_s_d[X1_19_s_d1026,32983
static const long X1_20_crv_1[X1_20_crv_11031,33160
static const long X1_20_crv_2[X1_20_crv_21033,33260
static const long *X1_20_crv[X1_20_crv1035,33363
static const long *X1_20_r_n[X1_20_r_n1040,33535
static const long *X1_20_r_d[X1_20_r_d1045,33683
static const long X1_20_s_n_0[X1_20_s_n_01050,33882
static const long X1_20_s_n_1[X1_20_s_n_11052,33984
static const long X1_20_s_n_2[X1_20_s_n_21054,34093
static const long X1_20_s_n_3[X1_20_s_n_31056,34210
static const long *X1_20_s_n[X1_20_s_n1058,34313
static const long X1_20_s_d_0[X1_20_s_d_01063,34575
static const long X1_20_s_d_1[X1_20_s_d_11065,34687
static const long X1_20_s_d_2[X1_20_s_d_21067,34805
static const long X1_20_s_d_3[X1_20_s_d_31069,34919
static const long *X1_20_s_d[X1_20_s_d1071,35036
static const long X1_21_crv_0[X1_21_crv_01076,35295
static const long X1_21_crv_1[X1_21_crv_11078,35396
static const long X1_21_crv_2[X1_21_crv_21080,35512
static const long X1_21_crv_3[X1_21_crv_31082,35639
static const long *X1_21_crv[X1_21_crv1084,35743
static const long X1_21_r_n_2[X1_21_r_n_21089,35957
static const long X1_21_r_n_3[X1_21_r_n_31091,36054
static const long *X1_21_r_n[X1_21_r_n1093,36151
static const long X1_21_r_d_1[X1_21_r_d_11098,36351
static const long X1_21_r_d_2[X1_21_r_d_21100,36446
static const long *X1_21_r_d[X1_21_r_d1102,36549
static const long *X1_21_s_n[X1_21_s_n1107,36723
static const long *X1_21_s_d[X1_21_s_d1112,36877
static const long X1_22_crv_0[X1_22_crv_01117,37135
static const long X1_22_crv_1[X1_22_crv_11119,37248
static const long X1_22_crv_2[X1_22_crv_21121,37383
static const long X1_22_crv_3[X1_22_crv_31123,37516
static const long *X1_22_crv[X1_22_crv1125,37633
static const long X1_22_r_n_0[X1_22_r_n_01130,37839
static const long X1_22_r_n_1[X1_22_r_n_11132,37937
static const long *X1_22_r_n[X1_22_r_n1134,38043
static const long X1_22_r_d_0[X1_22_r_d_01139,38212
static const long *X1_22_r_d[X1_22_r_d1141,38321
static const long X1_22_s_n_1[X1_22_s_n_11146,38476
static const long *X1_22_s_n[X1_22_s_n1148,38573
static const long X1_22_s_d_0[X1_22_s_d_01153,38726
static const long *X1_22_s_d[X1_22_s_d1155,38824
static const long X1_23_crv_0[X1_23_crv_01160,39263
static const long X1_23_crv_1[X1_23_crv_11162,39385
static const long X1_23_crv_2[X1_23_crv_21164,39506
static const long X1_23_crv_3[X1_23_crv_31166,39650
static const long X1_23_crv_4[X1_23_crv_41168,39817
static const long X1_23_crv_5[X1_23_crv_51170,39976
static const long X1_23_crv_6[X1_23_crv_61172,40132
static const long *X1_23_crv[X1_23_crv1174,40264
static const long X1_23_r_n_0[X1_23_r_n_01179,40507
static const long *X1_23_r_n[X1_23_r_n1181,40613
static const long X1_23_r_d_0[X1_23_r_d_01186,40769
static const long *X1_23_r_d[X1_23_r_d1188,40867
static const long X1_23_s_n_0[X1_23_s_n_01193,41025
static const long *X1_23_s_n[X1_23_s_n1195,41122
static const long *X1_23_s_d[X1_23_s_d1200,41269
static const long X1_24_crv_0[X1_24_crv_01205,41472
static const long X1_24_crv_2[X1_24_crv_21207,41585
static const long X1_24_crv_4[X1_24_crv_41209,41723
static const long *X1_24_crv[X1_24_crv1211,41826
static const long *X1_24_r_n[X1_24_r_n1216,42006
static const long *X1_24_r_d[X1_24_r_d1221,42147
static const long X1_24_s_n_1[X1_24_s_n_11226,42293
static const long X1_24_s_n_3[X1_24_s_n_31228,42388
static const long *X1_24_s_n[X1_24_s_n1230,42478
static const long X1_24_s_d_2[X1_24_s_d_21235,42676
static const long X1_24_s_d_4[X1_24_s_d_41237,42778
static const long *X1_24_s_d[X1_24_s_d1239,42876
static const long X1_25_crv_0[X1_25_crv_01244,43250
static const long X1_25_crv_1[X1_25_crv_11246,43360
static const long X1_25_crv_2[X1_25_crv_21248,43520
static const long X1_25_crv_3[X1_25_crv_31250,43691
static const long X1_25_crv_4[X1_25_crv_41252,43835
static const long *X1_25_crv[X1_25_crv1254,43965
static const long X1_25_r_n_0[X1_25_r_n_01259,44417
static const long X1_25_r_n_1[X1_25_r_n_11261,44529
static const long X1_25_r_n_2[X1_25_r_n_21263,44688
static const long X1_25_r_n_3[X1_25_r_n_31265,44865
static const long X1_25_r_n_4[X1_25_r_n_41267,45027
static const long X1_25_r_n_5[X1_25_r_n_51269,45173
static const long X1_25_r_n_6[X1_25_r_n_61271,45295
static const long *X1_25_r_n[X1_25_r_n1273,45395
static const long X1_25_r_d_0[X1_25_r_d_01278,45916
static const long X1_25_r_d_1[X1_25_r_d_11280,46071
static const long X1_25_r_d_2[X1_25_r_d_21282,46243
static const long X1_25_r_d_3[X1_25_r_d_31284,46417
static const long X1_25_r_d_4[X1_25_r_d_41286,46583
static const long X1_25_r_d_5[X1_25_r_d_51288,46729
static const long X1_25_r_d_6[X1_25_r_d_61290,46857
static const long *X1_25_r_d[X1_25_r_d1292,46957
static const long X1_25_s_n_0[X1_25_s_n_01297,47236
static const long X1_25_s_n_1[X1_25_s_n_11299,47340
static const long X1_25_s_n_2[X1_25_s_n_21301,47466
static const long *X1_25_s_n[X1_25_s_n1303,47577
static const long X1_25_s_d_0[X1_25_s_d_01308,47817
static const long X1_25_s_d_1[X1_25_s_d_11310,47932
static const long X1_25_s_d_2[X1_25_s_d_21312,48044
static const long *X1_25_s_d[X1_25_s_d1314,48161
static const long X1_26_crv_0[X1_26_crv_01319,48552
static const long X1_26_crv_1[X1_26_crv_11321,48665
static const long X1_26_crv_2[X1_26_crv_21323,48802
static const long X1_26_crv_3[X1_26_crv_31325,48966
static const long X1_26_crv_4[X1_26_crv_41327,49120
static const long X1_26_crv_5[X1_26_crv_51329,49247
static const long *X1_26_crv[X1_26_crv1331,49358
static const long X1_26_r_n_0[X1_26_r_n_01336,49598
static const long X1_26_r_n_1[X1_26_r_n_11338,49698
static const long *X1_26_r_n[X1_26_r_n1340,49807
static const long X1_26_r_d_0[X1_26_r_d_01345,50015
static const long X1_26_r_d_1[X1_26_r_d_11347,50122
static const long X1_26_r_d_2[X1_26_r_d_21349,50237
static const long *X1_26_r_d[X1_26_r_d1351,50334
static const long *X1_26_s_n[X1_26_s_n1356,50506
static const long X1_26_s_d_1[X1_26_s_d_11361,50656
static const long *X1_26_s_d[X1_26_s_d1363,50753
static const long X1_27_crv_0[X1_27_crv_01368,51171
static const long X1_27_crv_1[X1_27_crv_11370,51301
static const long X1_27_crv_2[X1_27_crv_21372,51430
static const long X1_27_crv_3[X1_27_crv_31374,51604
static const long X1_27_crv_4[X1_27_crv_41376,51769
static const long X1_27_crv_5[X1_27_crv_51378,51924
static const long X1_27_crv_6[X1_27_crv_61380,52065
static const long *X1_27_crv[X1_27_crv1382,52174
static const long X1_27_r_n_0[X1_27_r_n_01387,52547
static const long X1_27_r_n_1[X1_27_r_n_11389,52654
static const long X1_27_r_n_2[X1_27_r_n_21391,52785
static const long X1_27_r_n_3[X1_27_r_n_31393,52929
static const long X1_27_r_n_4[X1_27_r_n_41395,53071
static const long *X1_27_r_n[X1_27_r_n1397,53196
static const long X1_27_r_d_0[X1_27_r_d_01402,53541
static const long X1_27_r_d_1[X1_27_r_d_11404,53655
static const long X1_27_r_d_2[X1_27_r_d_21406,53784
static const long X1_27_r_d_3[X1_27_r_d_31408,53928
static const long X1_27_r_d_4[X1_27_r_d_41410,54066
static const long *X1_27_r_d[X1_27_r_d1412,54184
static const long X1_27_s_n_0[X1_27_s_n_01417,54470
static const long X1_27_s_n_1[X1_27_s_n_11419,54576
static const long X1_27_s_n_2[X1_27_s_n_21421,54705
static const long X1_27_s_n_3[X1_27_s_n_31423,54836
static const long *X1_27_s_n[X1_27_s_n1425,54948
static const long X1_27_s_d_0[X1_27_s_d_01430,55195
static const long X1_27_s_d_1[X1_27_s_d_11432,55305
static const long X1_27_s_d_2[X1_27_s_d_21434,55423
static const long X1_27_s_d_3[X1_27_s_d_31436,55538
static const long *X1_27_s_d[X1_27_s_d1438,55637
static const long X1_28_crv_0[X1_28_crv_01443,56199
static const long X1_28_crv_1[X1_28_crv_11445,56375
static const long X1_28_crv_2[X1_28_crv_21447,56561
static const long X1_28_crv_3[X1_28_crv_31449,56745
static const long X1_28_crv_4[X1_28_crv_41451,56903
static const long X1_28_crv_5[X1_28_crv_51453,57066
static const long X1_28_crv_6[X1_28_crv_61455,57228
static const long *X1_28_crv[X1_28_crv1457,57357
static const long X1_28_r_n_0[X1_28_r_n_01462,57587
static const long X1_28_r_n_1[X1_28_r_n_11464,57677
static const long *X1_28_r_n[X1_28_r_n1466,57774
static const long X1_28_r_d_0[X1_28_r_d_01471,57929
static const long *X1_28_r_d[X1_28_r_d1473,58024
static const long X1_28_s_n_0[X1_28_s_n_01478,58177
static const long X1_28_s_n_1[X1_28_s_n_11480,58269
static const long *X1_28_s_n[X1_28_s_n1482,58369
static const long X1_28_s_d_0[X1_28_s_d_01487,58522
static const long *X1_28_s_d[X1_28_s_d1489,58612
static const long X1_29_crv_0[X1_29_crv_01494,59563
static const long X1_29_crv_1[X1_29_crv_11496,59695
static const long X1_29_crv_2[X1_29_crv_21498,59850
static const long X1_29_crv_3[X1_29_crv_31500,60039
static const long X1_29_crv_4[X1_29_crv_41502,60263
static const long X1_29_crv_5[X1_29_crv_51504,60506
static const long X1_29_crv_6[X1_29_crv_61506,60758
static const long X1_29_crv_7[X1_29_crv_71508,60998
static const long X1_29_crv_8[X1_29_crv_81510,61215
static const long X1_29_crv_9[X1_29_crv_91512,61404
static const long X1_29_crv_10[X1_29_crv_101514,61564
static const long *X1_29_crv[X1_29_crv1516,61687
static const long X1_29_r_n_0[X1_29_r_n_01521,61987
static const long *X1_29_r_n[X1_29_r_n1523,62102
static const long X1_29_r_d_1[X1_29_r_d_11528,62268
static const long *X1_29_r_d[X1_29_r_d1530,62375
static const long X1_29_s_n_0[X1_29_s_n_01535,62532
static const long *X1_29_s_n[X1_29_s_n1537,62632
static const long X1_29_s_d_1[X1_29_s_d_11542,62792
static const long *X1_29_s_d[X1_29_s_d1544,62890
static const long X1_30_crv_0[X1_30_crv_01549,63355
static const long X1_30_crv_1[X1_30_crv_11551,63467
static const long X1_30_crv_2[X1_30_crv_21553,63614
static const long X1_30_crv_3[X1_30_crv_31555,63802
static const long X1_30_crv_4[X1_30_crv_41557,63993
static const long X1_30_crv_5[X1_30_crv_51559,64167
static const long *X1_30_crv[X1_30_crv1561,64321
static const long *X1_30_r_n[X1_30_r_n1566,64537
static const long *X1_30_r_d[X1_30_r_d1571,64678
static const long X1_30_s_n_0[X1_30_s_n_01576,64836
static const long X1_30_s_n_1[X1_30_s_n_11578,64931
static const long X1_30_s_n_2[X1_30_s_n_21580,65030
static const long *X1_30_s_n[X1_30_s_n1582,65120
static const long X1_30_s_d_0[X1_30_s_d_01587,65325
static const long X1_30_s_d_1[X1_30_s_d_11589,65422
static const long X1_30_s_d_2[X1_30_s_d_21591,65524
static const long X1_30_s_d_3[X1_30_s_d_31593,65616
static const long *X1_30_s_d[X1_30_s_d1595,65714
static const long X1_31_crv_0[X1_31_crv_01600,66995
static const long X1_31_crv_1[X1_31_crv_11602,67134
static const long X1_31_crv_2[X1_31_crv_21604,67299
static const long X1_31_crv_3[X1_31_crv_31606,67495
static const long X1_31_crv_4[X1_31_crv_41608,67714
static const long X1_31_crv_5[X1_31_crv_51610,67957
static const long X1_31_crv_6[X1_31_crv_61612,68211
static const long X1_31_crv_7[X1_31_crv_71614,68461
static const long X1_31_crv_8[X1_31_crv_81616,68724
static const long X1_31_crv_9[X1_31_crv_91618,68987
static const long X1_31_crv_10[X1_31_crv_101620,69236
static const long X1_31_crv_11[X1_31_crv_111622,69465
static const long *X1_31_crv[X1_31_crv1624,69676
static const long X1_31_r_n_0[X1_31_r_n_01629,70299
static const long X1_31_r_n_1[X1_31_r_n_11631,70423
static const long X1_31_r_n_2[X1_31_r_n_21633,70553
static const long X1_31_r_n_3[X1_31_r_n_31635,70703
static const long X1_31_r_n_4[X1_31_r_n_41637,70862
static const long X1_31_r_n_5[X1_31_r_n_51639,71019
static const long X1_31_r_n_6[X1_31_r_n_61641,71162
static const long X1_31_r_n_7[X1_31_r_n_71643,71304
static const long *X1_31_r_n[X1_31_r_n1645,71436
static const long X1_31_r_d_0[X1_31_r_d_01650,71914
static const long X1_31_r_d_1[X1_31_r_d_11652,72038
static const long X1_31_r_d_2[X1_31_r_d_21654,72176
static const long X1_31_r_d_3[X1_31_r_d_31656,72324
static const long X1_31_r_d_4[X1_31_r_d_41658,72481
static const long X1_31_r_d_5[X1_31_r_d_51660,72634
static const long X1_31_r_d_6[X1_31_r_d_61662,72747
static const long *X1_31_r_d[X1_31_r_d1664,72846
static const long X1_31_s_n_0[X1_31_s_n_01669,73316
static const long X1_31_s_n_1[X1_31_s_n_11671,73441
static const long X1_31_s_n_2[X1_31_s_n_21673,73574
static const long X1_31_s_n_3[X1_31_s_n_31675,73717
static const long X1_31_s_n_4[X1_31_s_n_41677,73861
static const long X1_31_s_n_5[X1_31_s_n_51679,73996
static const long X1_31_s_n_6[X1_31_s_n_61681,74130
static const long *X1_31_s_n[X1_31_s_n1683,74251
static const long X1_31_s_d_0[X1_31_s_d_01688,74686
static const long X1_31_s_d_1[X1_31_s_d_11690,74811
static const long X1_31_s_d_2[X1_31_s_d_21692,74945
static const long X1_31_s_d_3[X1_31_s_d_31694,75075
static const long X1_31_s_d_4[X1_31_s_d_41696,75220
static const long X1_31_s_d_5[X1_31_s_d_51698,75349
static const long X1_31_s_d_6[X1_31_s_d_61700,75466
static const long *X1_31_s_d[X1_31_s_d1702,75574
static const long X1_32_crv_0[X1_32_crv_01707,76494
static const long X1_32_crv_1[X1_32_crv_11709,76681
static const long X1_32_crv_2[X1_32_crv_21711,76920
static const long X1_32_crv_3[X1_32_crv_31713,77171
static const long X1_32_crv_4[X1_32_crv_41715,77410
static const long X1_32_crv_5[X1_32_crv_51717,77603
static const long X1_32_crv_6[X1_32_crv_61719,77814
static const long X1_32_crv_7[X1_32_crv_71721,78032
static const long X1_32_crv_8[X1_32_crv_81723,78186
static const long *X1_32_crv[X1_32_crv1725,78336
static const long X1_32_r_n_0[X1_32_r_n_01730,78596
static const long X1_32_r_n_1[X1_32_r_n_11732,78691
static const long *X1_32_r_n[X1_32_r_n1734,78789
static const long X1_32_r_d_0[X1_32_r_d_01739,78942
static const long *X1_32_r_d[X1_32_r_d1741,79032
static const long X1_32_s_n_0[X1_32_s_n_01746,79187
static const long X1_32_s_n_1[X1_32_s_n_11748,79284
static const long *X1_32_s_n[X1_32_s_n1750,79383
static const long X1_32_s_d_0[X1_32_s_d_01755,79538
static const long *X1_32_s_d[X1_32_s_d1757,79633
static const long X1_33_crv_0[X1_33_crv_01762,81480
static const long X1_33_crv_1[X1_33_crv_11764,81666
static const long X1_33_crv_2[X1_33_crv_21766,82035
static const long X1_33_crv_3[X1_33_crv_31768,82422
static const long X1_33_crv_4[X1_33_crv_41770,82802
static const long X1_33_crv_5[X1_33_crv_51772,83175
static const long X1_33_crv_6[X1_33_crv_61774,83590
static const long X1_33_crv_7[X1_33_crv_71776,83975
static const long X1_33_crv_8[X1_33_crv_81778,84325
static const long X1_33_crv_9[X1_33_crv_91780,84651
static const long X1_33_crv_10[X1_33_crv_101782,84897
static const long *X1_33_crv[X1_33_crv1784,85016
static const long X1_33_r_n_0[X1_33_r_n_01789,85295
static const long *X1_33_r_n[X1_33_r_n1791,85392
static const long *X1_33_r_d[X1_33_r_d1796,85532
static const long *X1_33_s_n[X1_33_s_n1801,85666
static const long X1_33_s_d_0[X1_33_s_d_01806,85819
static const long X1_33_s_d_1[X1_33_s_d_11808,85916
static const long *X1_33_s_d[X1_33_s_d1810,86016
static const long X1_34_crv_0[X1_34_crv_01815,86740
static const long X1_34_crv_1[X1_34_crv_11817,86873
static const long X1_34_crv_2[X1_34_crv_21819,87031
static const long X1_34_crv_3[X1_34_crv_31821,87205
static const long X1_34_crv_4[X1_34_crv_41823,87390
static const long X1_34_crv_5[X1_34_crv_51825,87596
static const long X1_34_crv_6[X1_34_crv_61827,87798
static const long X1_34_crv_7[X1_34_crv_71829,87967
static const long X1_34_crv_8[X1_34_crv_81831,88142
static const long X1_34_crv_9[X1_34_crv_91833,88286
static const long *X1_34_crv[X1_34_crv1835,88411
static const long X1_34_r_n_0[X1_34_r_n_01840,88935
static const long X1_34_r_n_1[X1_34_r_n_11842,89059
static const long X1_34_r_n_2[X1_34_r_n_21844,89184
static const long X1_34_r_n_3[X1_34_r_n_31846,89312
static const long X1_34_r_n_4[X1_34_r_n_41848,89459
static const long X1_34_r_n_5[X1_34_r_n_51850,89598
static const long X1_34_r_n_6[X1_34_r_n_61852,89736
static const long X1_34_r_n_7[X1_34_r_n_71854,89858
static const long *X1_34_r_n[X1_34_r_n1856,89969
static const long X1_34_r_d_0[X1_34_r_d_01861,90463
static const long X1_34_r_d_1[X1_34_r_d_11863,90587
static const long X1_34_r_d_2[X1_34_r_d_21865,90720
static const long X1_34_r_d_3[X1_34_r_d_31867,90874
static const long X1_34_r_d_4[X1_34_r_d_41869,91033
static const long X1_34_r_d_5[X1_34_r_d_51871,91181
static const long X1_34_r_d_6[X1_34_r_d_61873,91308
static const long *X1_34_r_d[X1_34_r_d1875,91415
static const long X1_34_s_n_0[X1_34_s_n_01880,91839
static const long X1_34_s_n_1[X1_34_s_n_11882,91960
static const long X1_34_s_n_2[X1_34_s_n_21884,92070
static const long X1_34_s_n_3[X1_34_s_n_31886,92205
static const long X1_34_s_n_4[X1_34_s_n_41888,92341
static const long X1_34_s_n_5[X1_34_s_n_51890,92475
static const long X1_34_s_n_6[X1_34_s_n_61892,92596
static const long *X1_34_s_n[X1_34_s_n1894,92705
static const long X1_34_s_d_0[X1_34_s_d_01899,93109
static const long X1_34_s_d_1[X1_34_s_d_11901,93230
static const long X1_34_s_d_2[X1_34_s_d_21903,93356
static const long X1_34_s_d_3[X1_34_s_d_31905,93485
static const long X1_34_s_d_4[X1_34_s_d_41907,93621
static const long X1_34_s_d_5[X1_34_s_d_51909,93740
static const long *X1_34_s_d[X1_34_s_d1911,93851
static const long X1_35_crv_0[X1_35_crv_01916,95274
static const long X1_35_crv_1[X1_35_crv_11918,95466
static const long X1_35_crv_2[X1_35_crv_21920,95690
static const long X1_35_crv_3[X1_35_crv_31922,95952
static const long X1_35_crv_4[X1_35_crv_41924,96224
static const long X1_35_crv_5[X1_35_crv_51926,96492
static const long X1_35_crv_6[X1_35_crv_61928,96765
static const long X1_35_crv_7[X1_35_crv_71930,97035
static const long X1_35_crv_8[X1_35_crv_81932,97287
static const long X1_35_crv_9[X1_35_crv_91934,97522
static const long X1_35_crv_10[X1_35_crv_101936,97737
static const long X1_35_crv_11[X1_35_crv_111938,97910
static const long X1_35_crv_12[X1_35_crv_121940,98051
static const long *X1_35_crv[X1_35_crv1942,98153
static const long X1_35_r_n_0[X1_35_r_n_01947,101264
static const long X1_35_r_n_1[X1_35_r_n_11949,101483
static const long X1_35_r_n_2[X1_35_r_n_21951,101744
static const long X1_35_r_n_3[X1_35_r_n_31953,102047
static const long X1_35_r_n_4[X1_35_r_n_41955,102404
static const long X1_35_r_n_5[X1_35_r_n_51957,102763
static const long X1_35_r_n_6[X1_35_r_n_61959,103141
static const long X1_35_r_n_7[X1_35_r_n_71961,103534
static const long X1_35_r_n_8[X1_35_r_n_81963,103929
static const long X1_35_r_n_9[X1_35_r_n_91965,104313
static const long X1_35_r_n_10[X1_35_r_n_101967,104690
static const long X1_35_r_n_11[X1_35_r_n_111969,105052
static const long X1_35_r_n_12[X1_35_r_n_121971,105403
static const long X1_35_r_n_13[X1_35_r_n_131973,105732
static const long X1_35_r_n_14[X1_35_r_n_141975,106036
static const long X1_35_r_n_15[X1_35_r_n_151977,106309
static const long X1_35_r_n_16[X1_35_r_n_161979,106561
static const long X1_35_r_n_17[X1_35_r_n_171981,106771
static const long X1_35_r_n_18[X1_35_r_n_181983,106954
static const long X1_35_r_n_19[X1_35_r_n_191985,107096
static const long *X1_35_r_n[X1_35_r_n1987,107217
static const long X1_35_r_d_0[X1_35_r_d_01992,110140
static const long X1_35_r_d_1[X1_35_r_d_11994,110359
static const long X1_35_r_d_2[X1_35_r_d_21996,110641
static const long X1_35_r_d_3[X1_35_r_d_31998,110955
static const long X1_35_r_d_4[X1_35_r_d_42000,111313
static const long X1_35_r_d_5[X1_35_r_d_52002,111671
static const long X1_35_r_d_6[X1_35_r_d_62004,112050
static const long X1_35_r_d_7[X1_35_r_d_72006,112445
static const long X1_35_r_d_8[X1_35_r_d_82008,112827
static const long X1_35_r_d_9[X1_35_r_d_92010,113190
static const long X1_35_r_d_10[X1_35_r_d_102012,113548
static const long X1_35_r_d_11[X1_35_r_d_112014,113893
static const long X1_35_r_d_12[X1_35_r_d_122016,114234
static const long X1_35_r_d_13[X1_35_r_d_132018,114538
static const long X1_35_r_d_14[X1_35_r_d_142020,114820
static const long X1_35_r_d_15[X1_35_r_d_152022,115050
static const long X1_35_r_d_16[X1_35_r_d_162024,115226
static const long *X1_35_r_d[X1_35_r_d2026,115360
static const long X1_35_s_n_0[X1_35_s_n_02031,116309
static const long X1_35_s_n_1[X1_35_s_n_12033,116443
static const long X1_35_s_n_2[X1_35_s_n_22035,116620
static const long X1_35_s_n_3[X1_35_s_n_32037,116811
static const long X1_35_s_n_4[X1_35_s_n_42039,117021
static const long X1_35_s_n_5[X1_35_s_n_52041,117210
static const long X1_35_s_n_6[X1_35_s_n_62043,117398
static const long X1_35_s_n_7[X1_35_s_n_72045,117587
static const long X1_35_s_n_8[X1_35_s_n_82047,117752
static const long X1_35_s_n_9[X1_35_s_n_92049,117898
static const long X1_35_s_n_10[X1_35_s_n_102051,118025
static const long *X1_35_s_n[X1_35_s_n2053,118130
static const long X1_35_s_d_0[X1_35_s_d_02058,118984
static const long X1_35_s_d_1[X1_35_s_d_12060,119118
static const long X1_35_s_d_2[X1_35_s_d_22062,119309
static const long X1_35_s_d_3[X1_35_s_d_32064,119501
static const long X1_35_s_d_4[X1_35_s_d_42066,119704
static const long X1_35_s_d_5[X1_35_s_d_52068,119908
static const long X1_35_s_d_6[X1_35_s_d_62070,120106
static const long X1_35_s_d_7[X1_35_s_d_72072,120301
static const long X1_35_s_d_8[X1_35_s_d_82074,120466
static const long X1_35_s_d_9[X1_35_s_d_92076,120603
static const long *X1_35_s_d[X1_35_s_d2078,120710
static const long X1_36_crv_0[X1_36_crv_02083,121531
static const long X1_36_crv_1[X1_36_crv_12085,121667
static const long X1_36_crv_2[X1_36_crv_22087,121849
static const long X1_36_crv_3[X1_36_crv_32089,122057
static const long X1_36_crv_4[X1_36_crv_42091,122283
static const long X1_36_crv_5[X1_36_crv_52093,122486
static const long X1_36_crv_6[X1_36_crv_62095,122680
static const long X1_36_crv_7[X1_36_crv_72097,122864
static const long X1_36_crv_8[X1_36_crv_82099,123010
static const long *X1_36_crv[X1_36_crv2101,123149
static const long X1_36_r_n_0[X1_36_r_n_02106,123557
static const long X1_36_r_n_1[X1_36_r_n_12108,123711
static const long X1_36_r_n_2[X1_36_r_n_22110,123856
static const long X1_36_r_n_3[X1_36_r_n_32112,123992
static const long X1_36_r_n_4[X1_36_r_n_42114,124107
static const long *X1_36_r_n[X1_36_r_n2116,124213
static const long X1_36_r_d_0[X1_36_r_d_02121,124574
static const long X1_36_r_d_1[X1_36_r_d_12123,124699
static const long X1_36_r_d_2[X1_36_r_d_22125,124856
static const long X1_36_r_d_3[X1_36_r_d_32127,125001
static const long X1_36_r_d_4[X1_36_r_d_42129,125129
static const long *X1_36_r_d[X1_36_r_d2131,125235
static const long X1_36_s_n_0[X1_36_s_n_02136,125582
static const long X1_36_s_n_1[X1_36_s_n_12138,125707
static const long X1_36_s_n_2[X1_36_s_n_22140,125847
static const long X1_36_s_n_3[X1_36_s_n_32142,125985
static const long X1_36_s_n_4[X1_36_s_n_42144,126113
static const long *X1_36_s_n[X1_36_s_n2146,126219
static const long X1_36_s_d_0[X1_36_s_d_02151,126560
static const long X1_36_s_d_1[X1_36_s_d_12153,126696
static const long X1_36_s_d_2[X1_36_s_d_22155,126831
static const long X1_36_s_d_3[X1_36_s_d_32157,126975
static const long X1_36_s_d_4[X1_36_s_d_42159,127090
static const long *X1_36_s_d[X1_36_s_d2161,127196
static const long X1_37_crv_0[X1_37_crv_02166,129782
static const long X1_37_crv_1[X1_37_crv_12168,129897
static const long X1_37_crv_2[X1_37_crv_22170,130048
static const long X1_37_crv_3[X1_37_crv_32172,130214
static const long X1_37_crv_4[X1_37_crv_42174,130445
static const long X1_37_crv_5[X1_37_crv_52176,130728
static const long X1_37_crv_6[X1_37_crv_62178,131059
static const long X1_37_crv_7[X1_37_crv_72180,131427
static const long X1_37_crv_8[X1_37_crv_82182,131821
static const long X1_37_crv_9[X1_37_crv_92184,132238
static const long X1_37_crv_10[X1_37_crv_102186,132644
static const long X1_37_crv_11[X1_37_crv_112188,133023
static const long X1_37_crv_12[X1_37_crv_122190,133380
static const long X1_37_crv_13[X1_37_crv_132192,133710
static const long X1_37_crv_14[X1_37_crv_142194,134013
static const long X1_37_crv_15[X1_37_crv_152196,134291
static const long X1_37_crv_16[X1_37_crv_162198,134529
static const long X1_37_crv_17[X1_37_crv_172200,134734
static const long X1_37_crv_18[X1_37_crv_182202,134899
static const long *X1_37_crv[X1_37_crv2204,135030
static const long X1_37_r_n_1[X1_37_r_n_12209,135433
static const long *X1_37_r_n[X1_37_r_n2211,135539
static const long X1_37_r_d_0[X1_37_r_d_02216,135703
static const long *X1_37_r_d[X1_37_r_d2218,135810
static const long X1_37_s_n_1[X1_37_s_n_12223,135969
static const long *X1_37_s_n[X1_37_s_n2225,136066
static const long X1_37_s_d_0[X1_37_s_d_02230,136224
static const long *X1_37_s_d[X1_37_s_d2232,136322
static const long X1_38_crv_0[X1_38_crv_02237,137534
static const long X1_38_crv_1[X1_38_crv_12239,137651
static const long X1_38_crv_2[X1_38_crv_22241,137825
static const long X1_38_crv_3[X1_38_crv_32243,138057
static const long X1_38_crv_4[X1_38_crv_42245,138318
static const long X1_38_crv_5[X1_38_crv_52247,138592
static const long X1_38_crv_6[X1_38_crv_62249,138869
static const long X1_38_crv_7[X1_38_crv_72251,139128
static const long X1_38_crv_8[X1_38_crv_82253,139364
static const long X1_38_crv_9[X1_38_crv_92255,139591
static const long X1_38_crv_10[X1_38_crv_102257,139796
static const long X1_38_crv_11[X1_38_crv_112259,139972
static const long X1_38_crv_12[X1_38_crv_122261,140112
static const long *X1_38_crv[X1_38_crv2263,140214
static const long X1_38_r_n_0[X1_38_r_n_02268,141222
static const long X1_38_r_n_1[X1_38_r_n_12270,141366
static const long X1_38_r_n_2[X1_38_r_n_22272,141555
static const long X1_38_r_n_3[X1_38_r_n_32274,141762
static const long X1_38_r_n_4[X1_38_r_n_42276,141980
static const long X1_38_r_n_5[X1_38_r_n_52278,142184
static const long X1_38_r_n_6[X1_38_r_n_62280,142389
static const long X1_38_r_n_7[X1_38_r_n_72282,142584
static const long X1_38_r_n_8[X1_38_r_n_82284,142768
static const long X1_38_r_n_9[X1_38_r_n_92286,142933
static const long X1_38_r_n_10[X1_38_r_n_102288,143071
static const long *X1_38_r_n[X1_38_r_n2290,143180
static const long X1_38_r_d_0[X1_38_r_d_02295,144174
static const long X1_38_r_d_1[X1_38_r_d_12297,144318
static const long X1_38_r_d_2[X1_38_r_d_22299,144511
static const long X1_38_r_d_3[X1_38_r_d_32301,144719
static const long X1_38_r_d_4[X1_38_r_d_42303,144942
static const long X1_38_r_d_5[X1_38_r_d_52305,145158
static const long X1_38_r_d_6[X1_38_r_d_62307,145363
static const long X1_38_r_d_7[X1_38_r_d_72309,145560
static const long X1_38_r_d_8[X1_38_r_d_82311,145742
static const long X1_38_r_d_9[X1_38_r_d_92313,145907
static const long X1_38_r_d_10[X1_38_r_d_102315,146043
static const long *X1_38_r_d[X1_38_r_d2317,146152
static const long X1_38_s_n_0[X1_38_s_n_02322,147086
static const long X1_38_s_n_1[X1_38_s_n_12324,147260
static const long X1_38_s_n_2[X1_38_s_n_22326,147464
static const long X1_38_s_n_3[X1_38_s_n_32328,147676
static const long X1_38_s_n_4[X1_38_s_n_42330,147890
static const long X1_38_s_n_5[X1_38_s_n_52332,148091
static const long X1_38_s_n_6[X1_38_s_n_62334,148286
static const long X1_38_s_n_7[X1_38_s_n_72336,148470
static const long X1_38_s_n_8[X1_38_s_n_82338,148631
static const long X1_38_s_n_9[X1_38_s_n_92340,148769
static const long *X1_38_s_n[X1_38_s_n2342,148877
static const long X1_38_s_d_0[X1_38_s_d_02347,149784
static const long X1_38_s_d_1[X1_38_s_d_12349,149950
static const long X1_38_s_d_2[X1_38_s_d_22351,150143
static const long X1_38_s_d_3[X1_38_s_d_32353,150361
static const long X1_38_s_d_4[X1_38_s_d_42355,150577
static const long X1_38_s_d_5[X1_38_s_d_52357,150780
static const long X1_38_s_d_6[X1_38_s_d_62359,150973
static const long X1_38_s_d_7[X1_38_s_d_72361,151157
static const long X1_38_s_d_8[X1_38_s_d_82363,151320
static const long X1_38_s_d_9[X1_38_s_d_92365,151458
static const long *X1_38_s_d[X1_38_s_d2367,151566
static const long X1_39_crv_0[X1_39_crv_02372,155755
static const long X1_39_crv_1[X1_39_crv_12374,156156
static const long X1_39_crv_2[X1_39_crv_22376,156585
static const long X1_39_crv_3[X1_39_crv_32378,157192
static const long X1_39_crv_4[X1_39_crv_42380,157814
static const long X1_39_crv_5[X1_39_crv_52382,158440
static const long X1_39_crv_6[X1_39_crv_62384,159063
static const long X1_39_crv_7[X1_39_crv_72386,159661
static const long X1_39_crv_8[X1_39_crv_82388,160318
static const long X1_39_crv_9[X1_39_crv_92390,160932
static const long X1_39_crv_10[X1_39_crv_102392,161510
static const long X1_39_crv_11[X1_39_crv_112394,161985
static const long X1_39_crv_12[X1_39_crv_122396,162428
static const long X1_39_crv_13[X1_39_crv_132398,162854
static const long X1_39_crv_14[X1_39_crv_142400,163145
static const long *X1_39_crv[X1_39_crv2402,163277
static const long *X1_39_r_n[X1_39_r_n2407,163607
static const long *X1_39_r_d[X1_39_r_d2412,163742
static const long X1_39_s_n_0[X1_39_s_n_02417,163894
static const long X1_39_s_n_1[X1_39_s_n_12419,163991
static const long *X1_39_s_n[X1_39_s_n2421,164088
static const long *X1_39_s_d[X1_39_s_d2426,164241
static const X1_info X1_table[X1_table2432,164369
get_X1_info(2463,167162

/home/mengxue/pari/src/basemath/rootpol.c,2934
static const double pariINFINITY 23,1034
static THREAD long KARASQUARE_LIMIT,30,1434
static THREAD long KARASQUARE_LIMIT, COOKSQUARE_LIMIT;30,1434
addCC(34,1550
mulCC(59,2123
sqrCC(95,2958
set_karasquare_limit(117,3378
CX_square_spec(128,3795
RgX_addspec(159,4698
RgX_s_mulspec(182,5456
RgX_shiftspec(193,5764
karasquare(205,6042
cook_square(232,7012
graeffe(306,9346
ZX_graeffe(327,9776
polgraeffe(341,10060
mydbllog2i(367,11005
mydbllogr(390,11677
mydbllog2r(397,11819
dbllog2mp(402,11916
dbllog2(404,11998
dblexp(420,12414
findpower(425,12657
newton_polygon(448,13165
myshiftrc(479,14034
myshiftic(492,14336
myreal_1(505,14613
RgX_gtofp_bit(511,14705
mygprecrc(518,14816
mygprec(536,15268
pol_to_gaussint(559,15764
eval_rel_pol(569,16010
homothetie(579,16293
homothetie2n(598,16728
homothetie_gauss(609,16918
lower_bound(621,17209
logmax_modulus(659,18252
logmax_modulus_bound(703,19615
logmin_modulus(711,19834
logmodulus(723,20120
logpre_modulus(761,21116
ind_maxlog2(795,22027
dual_modulus(810,22319
fft(845,23458
RUgen(900,24865
initRU(909,25108
initRUgen(931,25569
FFTinit(943,25826
FFT(950,25979
isreal(971,26499
abs_update_r(981,26649
abs_update(988,26867
parameters(1005,27343
dft(1064,28885
#define NEWTON_MAX 1153,31316
refine_H(1155,31349
refine_F(1185,32221
split_fromU(1231,33798
optimize_split(1260,34557
scalepol2n(1284,35328
scalepol(1292,35475
conformal_pol(1308,35764
static const double UNDEF 1330,36327
logradius(1333,36380
update_radius(1377,37333
conformal_mapping(1392,37716
split_2(1445,39342
split_1(1520,41581
split_0_2(1567,43061
split_0_1(1606,44185
split_0(1625,44683
root_error(1665,45730
mygprec_absolute(1707,46806
a_posteriori_errors(1728,47282
append_clone(1755,48219
split_complete(1760,48422
quicktofp(1792,49281
fujiwara_bound(1816,49973
fujiwara_bound_real(1846,50799
mygprecrc_special(1880,51411
mygprec_special(1899,51895
fix_roots1(1920,52303
fix_roots(1932,52495
RgX_normalize1(1953,52989
all_roots(1968,53346
isexactscalar(2003,54413
isexactpol(2006,54494
isvalidcoeff(2015,54634
checkvalidpol(2026,54838
solve_exact_pol(2034,54984
roots_com(2053,55442
tocomplex(2091,56262
cmp_complex_appr(2114,56757
clean_roots(2149,57684
roots_aux(2171,58197
roots(2192,58749
roots(2192,58749
cleanroots(2195,58870
polmod_to_embed(2200,59019
QX_complex_roots(2215,59326
X2XP1(2238,60189
_intervalcmp(2292,61283
_gen_nored(2300,61423
_mp_add(2302,61484
_mp_mul(2304,61559
_mp_sqr(2306,61634
_gen_one(2308,61699
_gen_zero(2310,61755
static struct bb_algebra mp_algebra 2312,61802
_mp_cmul(2315,61911
split_polynoms(2320,62125
bkeval_single_power(2353,63072
splitpoleval(2361,63241
polsolve(2377,63845
usp(2508,67355
ZX_uspensky_cst_pol(2631,70158
ZX_uspensky(2642,70363
rootsdeg0(2831,74977
checkbound(2838,75169
check_ab(2847,75327
realroots(2859,75653
realroots(2859,75653
ZX_sturm(2937,77469
ZX_sturmpart(2950,77725

/home/mengxue/pari/src/basemath/ZG.c,249
cmp_G(20,628
ZG_normalize(25,809
ZG_add(31,909
ZG_neg(53,1317
ZG_sub(59,1422
ZG_Z_mul(63,1508
ZG_mul(71,1684
ZGV_add(94,2217
ZGV_sub(102,2373
ZG_G_mul(111,2529
G_ZG_mul(122,2795
ZGC_G_mul(133,3061
G_ZGC_mul(141,3207
ZGC_Z_mul(149,3353

/home/mengxue/pari/src/basemath/polarit2.c,3162
#define addshift(23,1058
polsym_gen(31,1446
polsym(83,2640
centermodii(90,2795
s_centermod(105,3078
centermod_i(114,3231
centermod(156,4143
#define assign_or_fail(163,4572
#define update_prec(166,4674
static const long tsh 168,4740
code(170,4779
RgX_type_decode(172,4836
RgX_type_is_composite(178,4935
RgX_type(181,4992
factor0(322,8972
gp_factor0(329,9096
gp_factor0(329,9096
deg1_from_roots(345,9465
roots_from_deg1(354,9643
gauss_factor_p(363,9811
gauss_primpart(370,9922
gauss_primpart_try(378,10105
gauss_cmp(395,10464
gauss_normal(408,10788
gauss_factor(417,10980
factor(539,14123
normalized_mul(682,18556
normalized_to_RgX(691,18837
roots_to_pol(704,19158
roots_to_pol_r1(726,19803
idmulred(759,20921
idpowred(761,21005
idmul(763,21089
idpow(765,21167
eltmul(767,21245
eltpow(769,21321
mul(771,21397
powi(773,21465
_ellmul(777,21542
_ellpow(779,21622
gen_factorback(784,21765
idealfactorback(840,23327
nffactorback(848,23543
factorback2(852,23654
factorback2(852,23654
factorback(854,23736
RgX_is_irred_i(857,23801
RgX_is_irred(876,24212
isirreducible(883,24314
isirreducible(883,24314
triv_cont_gcd(901,24897
padic_gcd(918,25250
gauss_gcd(928,25447
is_rational(949,25888
c_is_rational(951,25964
c_zero_gcd(956,26059
zero_gcd(968,26349
cont_gcd_rfrac(1003,27246
cont_gcd_pol(1011,27472
cont_gcd_gen(1018,27671
cont_gcd(1025,27827
gcdiq(1035,28022
gcdqq(1045,28197
Q_gcd(1054,28377
ggcd(1064,28569
ggcd0(1351,36279
ggcd0(1351,36279
vec_lcm(1355,36379
scal_lcm(1367,36590
fix_lcm(1377,36800
glcm0(1393,37056
glcm0(1393,37056
glcm(1408,37303
pol_approx0(1438,37918
RgX_gcd_simple(1450,38147
RgX_extgcd_simple(1475,38719
content(1504,39545
primitive_part(1592,41748
primpart(1602,41946
Q_content(1607,42108
ZX_content(1641,42948
Q_denom(1660,43377
Q_remove_denom(1699,44221
Q_muli_to_int(1709,44436
Q_divmuli_to_int(1749,45374
Q_divi_to_int(1789,46340
Q_divq_to_int(1820,47000
Q_div_to_int(1833,47272
Q_mul_to_int(1845,47552
Q_primitive_part(1861,47833
Q_primpart(1875,48108
gdivexact(1884,48542
init_resultant(1922,49514
RgX_simpletype(1941,50151
scalar_res(1964,50544
subres_step(1973,50765
subresext_i(2015,51898
subresext(2082,53958
zero_extgcd(2091,54114
must_negate(2098,54258
RgX_extgcd(2113,54522
RgXQ_ratlift(2175,56224
Lazard(2236,58193
Lazard2(2254,58500
RgX_neg_i(2261,58638
RgX_Rg_mul_i(2269,58792
reductum_lg(2279,59015
nextSousResultant(2289,59263
RgX_resultant_all(2339,60703
resultant_all(2397,62399
_pol_0(2420,63188
sylvester_col(2428,63285
sylvestermatrix_i(2439,63519
sylvestermatrix(2453,63877
sylvestermatrix(2453,63877
resultant2(2466,64248
fix_pol(2478,64585
polresultant0(2499,65036
polresultant0(2499,65036
polresultantext0(2521,65457
polresultantext0(2521,65457
polresultantext(2543,65912
caract_const(2553,66358
RgXQ_charpoly(2558,66533
rnfcharpoly(2591,67491
isinexactall(2627,68690
inexact(2636,68915
gcdmonome(2679,69948
RgX_gcd(2695,70363
RgX_disc_aux(2765,72221
RgX_disc(2796,72986
poldisc0(2799,73072
poldisc0(2799,73072
reduceddiscsmith(2843,73905
reduceddiscsmith(2843,73905
exact_sturm(2871,74884
sturmpart_i(2883,75155
sturmpart(3001,78036
sturmpart(3001,78036
RgX_sturmpart(3008,78151
RgXQ_inv(3017,78627
scalar_bezout(3042,79243
zero_bezout(3052,79567
gbezout(3058,79651
gcdext0(3083,80326
gcdext0(3083,80326
ginvmod(3097,80795
newtonpoly(3123,81558

/home/mengxue/pari/src/basemath/elliptic.c,8696
#undef coordch21,968
Fl_c4_to_a4(29,1203
Fl_c4c6_to_a4a6(32,1287
c4_to_a4(38,1435
c4c6_to_a4a6(41,1513
ell_to_a4a6(47,1647
Fl_ell_to_a4a6(54,1818
a4a6_ch(63,2029
a4a6_ch_Fl(71,2255
ell_to_a4a6_bc(80,2494
point_to_a4a6(87,2611
point_to_a4a6_Fl(94,2791
checkellpt(102,2988
checkell5(114,3223
checkell(120,3341
checkellisog(123,3429
checkell_Q(127,3525
checkell_Qp(134,3657
ell_over_Fq(141,3798
checkell_Fq(148,3892
ellff_get_p(155,4015
ell_is_integral(162,4115
checkcoordch(172,4341
ec_bmodel(177,4470
invcmp(184,4625
doellR_roots(187,4699
ellR_root(225,5618
ec_f_evalx(231,5850
ec_h_evalx(243,6106
Zec_h_evalx(250,6229
ec_LHS_evalQ(258,6410
ec_dFdx_evalQ(270,6724
ec_dmFdy_evalQ(283,7048
ec_dFdy_evalQ(294,7346
ec_2divpol_evalx(304,7606
ec_half_deriv_2divpol_evalx(319,8028
ellbasechar(330,8309
initsmall(342,8680
ellprint(435,11150
doellR_ab(450,11541
ellR_ab(466,11973
padic_mod(471,12095
do_padic_agm(480,12575
real_prec(502,13278
padic_prec(506,13369
chk_p(511,13497
fix_nftype(515,13590
base_ring(526,13776
ellinit_Rg(623,16262
ellinit_Qp(635,16524
ellinit_Q(647,16803
nftoalg(660,17069
nfVtoalg(669,17225
ellinit_nf(678,17373
ellinit_Fp(690,17598
ellinit_Fq(707,18046
ellinit_nf_to_Fq(715,18167
ellinit(735,18622
init_ch(791,20137
is_trivial_change(793,20206
composev_u(804,20512
composev_r(818,20791
composev_s(833,21167
composev_t(847,21466
composev_st(861,21779
composev_rst(883,22277
gcomposev(907,22953
ellchangeinvert(924,23435
coordch_u(942,23783
coordch_r(970,24603
coordch_s(1005,25630
coordch_t(1022,26005
coordch_st(1038,26393
coordch_rst(1059,27022
coordch(1066,27156
ch_Qp(1076,27409
ch_R(1100,28038
ch_Rg(1118,28480
ch_Q(1127,28667
ch_FF(1166,29810
ch_Fp(1181,30241
ch_Fq(1190,30476
ell_reset(1200,30697
ellchangecurve(1204,30761
E_compose_u(1228,31282
E_compose_r(1230,31378
E_compose_s(1233,31480
E_compose_t(1236,31583
E_compose_rst(1238,31679
ellchangepoint0(1244,31855
ellchangepoint(1253,32079
ellchangepointinv0(1280,32745
ellchangepointinv(1288,32977
elltwist(1313,33585
smod2BIL(1363,34959
safe_Z_pval(1370,35067
ellminimaltwist(1382,35324
ellminimaltwistcond(1433,36681
ellminimaltwist0(1456,37225
ellminimaltwist0(1456,37225
ellexpo(1470,37463
oncurve(1486,37879
ellisoncurve(1511,38675
slope_samex(1530,39085
get_slope(1549,39573
elladd(1567,39986
ellneg_i(1596,40765
ellneg(1615,41091
ellsub(1630,41371
ellordinate_i(1639,41554
ellordinate(1711,43390
ellrandom(1725,43650
ellmul_CM(1744,44035
_sqr(1795,45487
_mul(1797,45552
ellffmul(1800,45625
ellmul_Z(1817,46055
enum { OK,1830,46382
enum { OK, LOW_PREC,1830,46382
enum { OK, LOW_PREC, NO 1830,46382
myroundr(1832,46421
CM_factor(1846,46738
ellmul_CM_aux(1909,48362
ellmul(1936,49181
ellmul(1936,49181
ellomega_agm(1971,50383
ellomega_cx(1979,50595
doellR_omega(1992,51033
doellR_eta(2007,51471
ellR_omega(2011,51562
ellR_eta(2014,51666
ellR_roots(2017,51762
zell_closest_0(2028,52381
zellcx(2043,52758
zellrealneg(2064,53468
zellrealpos(2083,54093
doellQp_root(2111,55026
ellQp_root(2167,57043
doellQp_ab(2172,57209
doellQp_Tate_uniformization(2184,57639
ellQp_Tate_uniformization(2216,58455
ellQp_u(2219,58583
ellQp_u2(2222,58678
ellQp_q(2225,58774
ellQp_ab(2228,58869
zellQp(2232,58973
ellformalw(2263,59992
ellformalpoint_i(2315,61667
ellformalpoint(2320,61775
ellformaldifferential_i(2328,61950
ellformaldifferential(2346,62399
ellformallog(2356,62650
ellformalexp(2365,62870
ellformallogsigma_t(2375,63241
FpE_issingular(2387,63690
ellnonsingularmultiple(2411,64444
rellg(2464,65939
addii3(2504,67017
addii4(2506,67088
addii5(2508,67169
xmP(2514,67433
tfromx(2563,68986
logsigma_prec(2595,70017
log_prec(2614,70505
parse_p(2628,70789
precp_fix(2645,71156
ellpadicheight(2649,71228
ellpadiclog(2732,73324
ellpadics2(2750,73831
zell(2779,74827
zell(2779,74827
enum period_type 2805,75476
enum period_type { t_PER_W,2805,75476
enum period_type { t_PER_W, t_PER_WETA,2805,75476
enum period_type { t_PER_W, t_PER_WETA, t_PER_ELL 2805,75476
  enum period_type type;2808,75609
  GEN in;2809,75634
  GEN w1,2810,75665
  GEN w1,w2,2810,75665
  GEN w1,w2,tau;2810,75665
  GEN W1,2811,75732
  GEN W1,W2,2811,75732
  GEN W1,W2,Tau;2811,75732
  GEN a,2812,75794
  GEN a,b,2812,75794
  GEN a,b,c,2812,75794
  GEN a,b,c,d;2812,75794
  GEN z,2813,75874
  GEN z,Z;2813,75874
  GEN x,2814,75955
  GEN x,y;2814,75955
  int swap;2815,75978
  int some_q_is_real;2816,76022
  int some_z_is_real;2817,76089
  int some_z_is_pure_imag;2818,76158
  int q_is_real;2819,76219
  int abs_u_is_1;2820,76262
  long prec;2821,76304
} ellred_t;2822,76336
set_gamma(2827,76472
redtausl2(2860,77246
red_modSL2(2875,77664
reduce_z(2895,78388
eta_correction(2930,79386
compute_periods(2943,79711
check_periods(2970,80248
get_periods(2995,80658
PiI2div(3003,80854
expIxy(3006,80990
check_real(3009,81077
trueE(3014,81248
_elleisnum(3042,81935
elleisnum(3053,82319
_elleta(3075,82975
elleta(3085,83189
ellperiods(3120,84014
get_toadd(3136,84442
ellwpnum_all(3141,84641
ellwpseries_aux(3217,86999
get_c4c6(3258,88033
ellwpseries(3280,88421
ellwp(3289,88583
ellwp0(3293,88650
ellwp0(3293,88650
ellzeta(3328,89526
ellsigma(3397,91529
pointell(3493,94230
pointell(3493,94230
localred_result(3532,95626
localredbug(3541,95818
j_pval(3550,96000
localred_p_get_f(3556,96174
localred_p(3568,96415
aux(3655,98983
aux2(3661,99061
numroots3(3672,99377
numroots2(3690,99727
localred_23(3699,99932
localred(3835,104130
approx_mod2(3850,104468
approx_mod3(3869,104886
nflocalred_p(3901,105531
nflocalred(4009,108713
elllocalred(4017,108863
handle_Q(4038,109435
handle_coeff(4044,109530
ellintegralmodel(4064,110073
Mod32(4104,111038
#define Mod16(4112,111178
#define Mod2(4113,111207
  long a1;4117,111328
  long a2;4118,111349
  long a3;4119,111373
  long b2;4120,111394
  GEN u,4121,111441
  GEN u, u2,4121,111441
  GEN u, u2, u3,4121,111441
  GEN u, u2, u3, u4,4121,111441
  GEN u, u2, u3, u4, u6;4121,111441
  GEN a4,4122,111466
  GEN a4, a6,4122,111466
  GEN a4, a6, b4,4122,111466
  GEN a4, a6, b4, b6,4122,111466
  GEN a4, a6, b4, b6, b8,4122,111466
  GEN a4, a6, b4, b6, b8, c4,4122,111466
  GEN a4, a6, b4, b6, b8, c4, c6,4122,111466
  GEN a4, a6, b4, b6, b8, c4, c6, D;4122,111466
} ellmin_t;4123,111503
min_set_u(4127,111551
min_set_c(4142,111809
min_set_D(4153,112021
min_set_b(4160,112160
min_set_a(4169,112427
min_to_ell(4191,112800
min_get_v(4217,113447
F2_card(4227,113725
F3_card(4237,114031
cardmod2(4244,114228
cardmod3(4254,114535
get_vu_p_small(4264,114796
ZtoF2(4303,115657
min_set_2(4307,115756
min_set_3(4316,115946
is_minimal_ap_small(4324,116065
is_minimal_ap(4366,116994
get_u(4400,117900
ellminimalmodel_i(4444,118986
ellminimalmodel(4482,119694
ellglobalred_all(4508,120526
doellglobalred(4543,121422
ellglobalred_i(4550,121521
ellglobalred(4553,121607
ellanal_globalred(4568,122063
val_aux(4606,123180
val_init(4615,123352
kod_23(4626,123659
neron_2(4641,123993
neron_3(4700,125251
ellrootno_2(4725,125755
ellrootno_3(4821,128324
ellrootno_p(4874,129561
doellrootno(4909,130311
ellrootno_global(4941,130940
ellrootno(4951,131191
ellap_CM_fast(4994,132424
checkell_int(5004,132646
ellQ_get_CM(5015,132931
sievep_bad(5044,133611
sievep_good(5066,134084
sievep(5084,134543
ellan_get_ap(5093,134703
anellsmall(5104,134982
anell(5131,135552
anell(5131,135552
apk_good(5140,135710
akell(5156,135938
akell(5156,135938
ellQ_get_N(5201,136978
ellQ_get_Nfa(5204,137049
elllseries(5208,137155
Q_numer(5276,139176
quad_root(5280,139276
exphellagm(5288,139492
ellR_on_neutral(5338,140820
hoo_aux(5346,140977
ellheightoo(5363,141408
_hell(5366,141496
ellheightpairing(5369,141600
ellheight0(5377,141810
ellheight0(5377,141810
ellpadicheight0(5380,141919
ellpadicheight0(5380,141919
ellheight(5384,142046
ellpadicheightmatrix(5459,143957
ellheightmatrix(5486,144566
bilhell_i(5491,144724
ellpadicbil(5505,145047
bilhell(5522,145506
bilhell(5522,145506
triv_ser(5531,145980
elltaniyama(5539,146117
doellff_get_o(5623,149171
ellff_get_o(5629,149279
elllog(5633,149355
ellweilpairing(5653,149847
elltatepairing(5672,150395
ellcard_ram(5692,151020
checkellp(5709,151441
ellap(5745,152192
doellcard(5770,152701
ellff_get_card(5783,152899
ellcard(5787,152977
ellgen(5811,153537
ellgroup_m(5870,155343
doellgroup(5896,156241
ellff_get_group(5903,156364
doellgens(5908,156465
ellff_get_gens(5924,156770
ellgroup(5928,156852
ellgroup0(5939,157088
ellgroup0(5939,157088
ellgenerators(5957,157591
ellfromj_simple(5974,157951
ellfromj(5983,158170
elljissupersingular(6018,159348
ellissupersingular(6041,159802
elldivpol4(6070,160490
elldivpol0(6091,161225
elldivpol(6121,162237
ellxn(6149,162992
ellpadicfrobenius(6200,164323

/home/mengxue/pari/src/basemath/RgX.c,3659
brent_kung_optpow(28,1178
gen_RgXQ_eval_powers(41,1390
gen_bkeval_powers(65,2055
gen_bkeval(96,2983
_gen_nored(110,3408
_gen_add(112,3469
_gen_mul(114,3544
_gen_sqr(116,3619
_gen_one(118,3684
_gen_zero(120,3740
static struct bb_algebra Rg_algebra 122,3787
_gen_cmul(126,3940
RgX_RgV_eval(130,4025
RgX_Rg_eval_bk(136,4136
get_Rg_algebra(142,4267
RgX_equal(154,4671
RgX_get_1(167,4928
RgX_get_0(184,5358
QX_ZXQV_eval(200,5697
RgX_unscale(216,6157
ZX_unscale(232,6498
ZX_unscale2n(261,7033
ZX_unscale_div(279,7399
RgXV_unscale(300,7781
RgX_rescale(312,8020
RgX_deflate(328,8288
RgX_inflate(343,8587
RgX_translate(358,8964
ZX_translate(408,10104
RgXQX_translate(457,11250
QXQ_to_mod_copy(491,12345
QXQ_to_mod(509,12756
QXQX_to_mod(528,13241
QXQX_to_mod_shallow(537,13455
QXQXV_to_mod(546,13700
QXQV_to_mod(555,13928
RgX_renormalize_lg(564,14101
RgV_to_RgX(574,14346
RgV_to_RgX_reverse(587,14602
RgX_to_RgC(606,14980
Rg_to_RgC(618,15236
RgM_to_RgXV(625,15418
RgV_to_RgM(636,15699
RgXV_to_RgM(644,15850
RgM_to_RgXX(654,16093
RgXX_to_RgM(667,16458
RgXY_swapspec(677,16673
RgXY_swap(702,17230
RgXY_degreex(709,17352
RgXn_red_shallow(720,17557
RgXnV_red_shallow(732,17814
RgX_shift_shallow(742,18012
RgX_shift(764,18471
RgX_rotate_shallow(786,18923
RgX_mulXn(802,19211
RgX_val(818,19537
RgX_valrem(828,19756
RgX_valrem_inexact(840,20056
RgXQC_red(851,20284
RgXQV_red(860,20429
RgXQX_red(869,20574
RgX_deriv(879,20754
RgX_recipspec_shallow(891,21002
RgX_recip(904,21281
RgX_recip_shallow(913,21482
RgX_add(927,22012
RgX_sub(945,22506
RgX_neg(963,22999
RgX_Rg_add(972,23148
RgX_Rg_add_shallow(985,23493
RgX_Rg_sub(996,23755
Rg_RgX_sub(1015,24246
zx_debug_spec(1033,24902
RgX_debug_spec(1042,25061
addpol(1054,25255
addpolcopy(1067,25558
RgXspec_kill0(1085,26217
RgX_mulspec_basecase_limb(1098,26453
RgX_mulspec_basecase(1115,26793
addmulXn(1134,27413
addshiftpol(1165,28045
addmulXncopy(1174,28205
RgXn_mul_basecase(1206,28915
RgXn_mul(1227,29670
RgX_mulspec(1258,30786
RgX_sqrspec_basecase_limb(1302,31878
RgX_sqrspec_basecase(1328,32342
RgXn_sqr_basecase(1345,32820
RgXn_sqr(1361,33334
RgX_sqrspec(1387,34191
RgX_mul_normalized(1410,34839
RgX_mul(1423,35121
RgX_sqr(1430,35237
RgX_Rg_divexact(1442,35681
RgX_Rg_div(1452,35937
RgX_normalize(1459,36112
RgX_divs(1473,36383
RgX_div_by_X_x(1480,36559
RgX_divrem(1502,37211
RgXQX_divrem(1678,41559
rem(1768,44216
ZXQX_dvd(1776,44376
RgXQX_pseudorem(1835,46024
RgX_pseudorem(1900,47759
RgXQX_pseudodivrem(1904,47881
RgX_pseudodivrem(1990,50269
RgXQX_mul(1994,50360
RgX_Rg_mul(1999,50436
RgX_muls(2007,50639
RgXQX_RgXQ_mul(2015,50843
RgXQV_RgXQ_mul(2020,50927
RgXQX_sqr(2026,51012
_add(2032,51087
_sqr(2034,51167
_mul(2036,51237
_cmul(2038,51316
_one(2040,51416
_zero(2042,51479
_red(2044,51543
static struct bb_algebra RgXQ_algebra 2046,51601
RgX_RgXQV_eval(2049,51682
RgX_RgXQ_eval(2055,51799
struct modXn 2062,51971
  long v;2063,51986
  long n;2064,52010
_sqrXn(2067,52035
_mulXn(2072,52145
_oneXn(2077,52264
_zeroXn(2082,52361
static struct bb_algebra RgXn_algebra 2086,52448
RgXn_powers(2089,52539
RgX_RgXnV_eval(2099,52743
RgX_RgXn_eval(2107,52913
RgXn_eval(2117,53151
RgXn_inv(2134,53497
RgXn_exp(2164,54154
RgXn_reverse(2193,54977
RgXQ_powu(2239,56242
RgXQ_pow(2252,56516
RgXQ_powers(2269,56886
QXQ_powers(2277,57085
do_QXQ_eval(2295,57447
QXV_QXQ_eval(2311,57855
QXX_QXQ_eval(2314,57929
RgXQ_matrix_pow(2318,58018
RgXQ_minpoly_naive(2324,58119
RgXQ_norm(2334,58308
RgX_blocks(2347,58540
RgX_even_odd(2365,58909
RgX_splitting(2388,59524
Kronecker_to_mod(2420,60478

/home/mengxue/pari/src/basemath/gen3.c,4325
recvar(29,1407
variables_vecsmall(51,1857
variables_vec(59,1994
variables_vec(59,1994
gvar(63,2087
var2_aux(86,2690
var2_rfrac(94,2865
var2_polmod(96,2937
gvar9(101,3138
gvar2(106,3270
prec0(139,4163
precREAL(141,4228
precrealexact(144,4380
precCOMPLEX(155,4656
precision(191,5536
gprecision(202,5680
precision0(244,6533
precision0(244,6533
vec_padicprec_relative(253,6678
padicprec_relative(265,6976
vec_padicprec(283,7397
padicprec(295,7604
poldegree(322,8264
gppoldegree(351,8934
gppoldegree(351,8934
RgX_degree(359,9105
degree(390,9791
pollead(397,9920
isinexactreal(432,10702
isrealappr(461,11436
isinexact(490,12119
isrationalzeroscalar(521,12860
iscomplex(533,13115
_quot(555,13808
_quotsr(563,13968
_quotrs(573,14167
_quotri(580,14305
_quotsf(589,14472
_quotfs(593,14579
_quotfi(597,14694
quot(601,14778
quotrs(604,14869
quotfs(607,14968
quotsr(610,15067
quotsf(613,15167
quotfi(616,15267
quotri(619,15366
modrs(623,15466
modsr(631,15649
modsf(639,15831
modr_safe(648,16065
gmod(663,16395
gmod(663,16395
gmodgs(713,17903
gmodsg(754,18938
gdvd(770,19343
gmodulss(777,19445
gmodulsg(783,19556
gmodulo(797,19885
gmodulo(797,19885
gdivent(829,20960
gdivent(829,20960
gdiventgs(859,21682
gdiventsg(878,22128
quotrem(895,22520
gdiventres(904,22658
divrem(946,23535
diviiround(965,24022
gdivround(988,24578
gdivround(988,24578
gdivmod(1022,25314
gshift(1048,26040
gshift(1048,26040
ser2pol_i(1074,26767
inv_ser(1085,26979
mod_r(1097,27306
gsubst_expr(1139,28581
gsubstpol(1160,29180
gsubstpol(1160,29180
checkdeflate(1175,29571
vdeflate(1185,29801
serdeflate(1201,30173
poldeflate(1224,30793
listdeflate(1236,31114
gdeflate(1248,31350
RgX_deflate_max(1278,32097
RgX_RgM_eval_col(1285,32191
gsubst(1300,32473
gsubst(1300,32473
ser_unscale(1494,38252
gsubstvec(1510,38540
gsubstvec(1510,38540
serreverse(1548,39726
derivser(1611,41622
deriv(1635,42168
lookup(1715,44286
diffop(1724,44412
diffop0(1794,46515
diffop0(1794,46515
swapvar_act(1811,47154
tayl_act(1820,47402
integ_act(1822,47494
tayl(1825,47571
tayl(1825,47571
ggrando(1836,47797
ggrando(1836,47797
triv_integ(1868,48760
RgX_integ(1877,48917
err_intformal(1888,49145
integser(1892,49246
integ(1915,49714
integ(1915,49714
gfloor(2000,52249
gfloor(2000,52249
gfrac(2022,52734
gfrac(2022,52734
ceilr(2030,52845
gceil(2038,52980
gceil(2038,52980
round0(2067,53577
round0(2067,53577
round_i(2075,53752
roundr(2108,54337
roundr_safe(2120,54679
ground(2133,54958
grndtoi(2178,56252
gtrunc2n(2251,58225
gcvtoi(2287,59095
isint(2316,59647
issmall(2337,60187
ceil_safe(2351,60495
floor_safe(2369,60855
ser2rfrac_i(2386,61112
ser2rfrac(2398,61334
padic_to_Q(2406,61477
padic_to_Q_shallow(2422,61757
QpV_to_QV(2434,61979
gtrunc(2454,62309
trunc0(2481,62890
trunc0(2481,62890
mkintn(2495,63439
uu32toi(2524,63950
mkpoln(2535,64110
mkvecn(2549,64386
mkcoln(2561,64568
mkvecsmalln(2573,64750
scalarpol(2585,64939
scalarpol_shallow(2595,65162
deg1pol(2607,65426
deg1pol_shallow(2617,65664
_gtopoly(2626,65845
gtopolyrev(2679,67333
gtopolyrev(2679,67333
gtopoly(2682,67392
gtopoly(2682,67392
scalarser(2686,67471
coefstoser(2706,67960
poltoser(2716,68169
rfractoser(2729,68448
toser_i(2740,68656
gtoser(2752,68846
gtoser(2752,68846
gtovecpost(2806,70300
init_vectopre(2842,71296
gtovecpre(2848,71421
gtovec0(2886,72515
gtovec0(2886,72515
gtovec(2894,72640
gtovecrev0(2942,73919
gtovecrev0(2942,73919
gtovecrev(2949,74016
gtocol0(2952,74067
gtocol0(2952,74067
gtocol(2960,74186
gtocolrev0(2976,74556
gtocolrev0(2976,74556
gtocolrev(2984,74721
Itos(2987,74780
gtovecsmallpost(2994,74882
gtovecsmallpre(3030,75798
gtovecsmall0(3070,76814
gtovecsmall0(3070,76814
gtovecsmall(3078,76959
compo(3119,77894
compo(3119,77894
multi_coeff(3148,78671
_polcoeff(3164,79011
_sercoeff(3178,79318
_rfraccoeff(3202,79875
polcoeff_i(3215,80240
polcoeff0(3229,80604
polcoeff0(3229,80604
vecdenom(3256,81306
denom(3271,81583
denom(3271,81583
numer(3294,82134
numer(3294,82134
lift0(3325,82898
lift0(3325,82898
lift(3362,83989
liftall_shallow(3365,84030
liftall(3398,84928
liftint_shallow(3402,85016
liftint(3433,85870
liftpol_shallow(3437,85958
liftpol(3467,86747
lift_intern(3472,86906
centerliftii(3499,87636
centerlift0(3508,87794
centerlift0(3508,87794
centerlift(3511,87870
op_ReIm(3560,89466
real_i(3596,90254
imag_i(3610,90470
greal(3624,90690
greal(3624,90690
gimag(3643,90956
gimag(3643,90956
mulreal(3661,91231
RgM_mulreal(3681,91665
_egal_i(3707,92488
_egal(3724,92830
glt(3732,92929
glt(3732,92929
gle(3735,92990
gle(3735,92990
gge(3738,93052
gge(3738,93052
ggt(3741,93114
ggt(3741,93114
geq(3744,93175
geq(3744,93175
gne(3747,93235
gne(3747,93235
gnot(3750,93295
gnot(3750,93295
geval_gp(3759,93700
geval_gp(3759,93700
geval(3806,94942
simplify_shallow(3809,94989
simplify(3859,96558
qfeval(3874,97139
qfnorm(3896,97716
qfevalb(3915,98190
qfbil(3923,98387
hqfeval(3937,98738
init_qf_apply(3959,99362
qf_apply_RgM(3970,99708
qf_apply_ZM(3977,99899
poleval(3985,100088
RgX_cxeval(4055,101829

/home/mengxue/pari/src/basemath/base2.c,4680
safe_Z_pvalrem(23,1038
fact_from_factors(35,1337
update_fact(67,2159
set_disc(86,2624
nfmaxord_check_args(104,3052
fnz(158,4418
get_coprimes(167,4604
diag_denom(196,5303
allbase_from_maxord(210,5531
disc_from_maxord(272,7309
companion(296,8110
mtran(314,8489
mtran_long(332,8848
rowred_long(349,9091
rowred(376,9775
matinv(412,10796
maxord2(439,11338
allbase2(614,15794
get_maxord(646,16990
nfmaxord(720,19446
nfbasis(726,19561
nfdisc(737,19802
nfbasis_gp(747,19983
nfbasis_gp(747,19983
Flx_checkdeflate(750,20048
Flx_radical(761,20340
FpX_radical(793,21122
zx_z_div(810,21447
ZX_Dedekind(822,21769
maxord(853,22540
Zlx_sylvester_echelon(878,23176
ZpX_sylvester_echelon(895,23663
Zlx_gcd(911,24074
ZpX_gcd(930,24519
init_m(957,25134
ZpX_reduced_resultant(965,25273
ZpX_reduced_resultant_fast(993,25914
ZpX_resultant_val_i(1009,26341
ZpX_resultant_val(1034,26971
ZpX_disc_val(1051,27353
update_den(1063,27688
QpX_denom(1093,28355
QpXV_denom(1105,28567
QpX_remove_denom(1118,28762
compmod(1131,29021
ZpM_hnfmodid(1172,30025
dbasis(1184,30380
get_partial_order_as_pols(1240,31697
  long pisprime;1249,31893
  GEN p,1250,31953
  GEN p, f;1250,31953
  long df;1251,31997
  GEN pdf;1252,32008
  long mf;1253,32058
  GEN psf,1254,32075
  GEN psf, pmf;1254,32075
  long vpsf;1255,32147
  GEN phi;1257,32215
  GEN phi0;1258,32253
  GEN chi;1260,32385
  GEN nu;1261,32453
  GEN invnu;1262,32511
  GEN Dinvnu;1263,32568
  long vDinvnu;1264,32607
  GEN prc,1265,32641
  GEN prc, psc;1265,32641
  long vpsc;1266,32720
  GEN ns,1267,32748
  GEN ns, nsf,1267,32748
  GEN ns, nsf, precns;1267,32748
} decomp_t;1268,32824
p_is_prime(1271,32849
Decomp(1279,33039
vstar(1378,35942
redelt_i(1400,36328
redelt(1422,36793
polsymmodp(1433,36995
newtonsums(1463,37818
newtoncharpoly(1509,39026
manage_cache(1539,39730
mycaract(1560,40292
get_nu(1592,41053
split_char(1602,41355
getprime(1617,41848
update_phi(1659,43037
testb2(1701,44157
testc2(1725,44888
ZX_rescale_inv(1756,45809
get_gamma(1774,46149
get_g(1800,46848
loop(1836,47911
loop_init(1922,50717
nilord(1950,51769
maxord_i(2000,53063
indexpartial(2024,53684
  long r1;2054,54632
  GEN M;2055,54643
  GEN D,2057,54675
  GEN D, w,2057,54675
  GEN D, w, T;2057,54675
} norm_S;2058,54722
get_norm(2061,54744
init_norm(2074,55028
is_uniformizer(2109,55836
mul_intersect(2115,56057
Fp_basis(2123,56253
get_LV(2143,56871
errprime(2164,57535
uniformizer(2170,57773
mk_pr(2206,59011
primedec_apply_kummer(2211,59152
pradical(2240,59845
get_powers(2260,60382
pol_min(2278,60762
get_pr(2286,60912
primedec_end(2309,61503
primedec_aux(2323,61912
idealprimedec_limit_f(2437,65032
idealprimedec_limit_f(2437,65032
idealprimedec_limit_norm(2447,65298
idealprimedec(2450,65410
ffdegree(2455,65521
lift_to_zk(2470,65750
special_anti_uniformizer(2481,66005
anti_uniformizer2(2495,66343
#define mpr_TAU 2514,66762
#define mpr_FFP 2515,66780
#define mpr_NFP 2516,66798
#define SMALLMODPR 2517,66816
#define LARGEMODPR 2518,66837
modpr_TAU(2520,66869
dim1proj(2529,67080
get_proj_modT(2546,67410
modprinit(2571,68034
nfmodprinit(2681,70823
zkmodprinit(2683,70888
ok_modpr(2687,70984
checkmodpr(2690,71079
get_modpr(2696,71205
is_prid(2700,71267
checkprid(2706,71395
get_prid(2709,71467
to_ff_init(2722,71689
modpr_genFq(2732,71961
nf_to_Fq_init(2749,72290
zk_to_Fq_init(2756,72491
zk_to_Fq(2762,72620
Rg_to_ff(2774,72915
nfreducemodpr(2819,74009
nfreducemodpr(2819,74009
Fq_to_nf(2828,74237
FqV_to_nfV(2837,74448
FqM_to_nfM(2845,74604
FqX_to_nfX(2860,74899
nf_to_Fq(2873,75153
nfV_to_FqV(2880,75297
nfM_to_FqM(2889,75478
nfX_to_FqX(2905,75797
fill(2920,76354
rnfjoinmodules_i(2932,76740
rnfjoinmodules(2940,77010
  GEN multab,2948,77180
  GEN multab, T,2948,77180
  GEN multab, T,p;2948,77180
  long h;2949,77199
} rnfeltmod_muldata;2950,77209
_sqr(2953,77242
_msqr(2961,77450
rnfeltid_powmod(2971,77715
FqX_non_root(2990,78117
rnfdedekind_i(3029,79220
triv_order(3119,82042
rnfdedekind(3129,82276
ideal_is1(3186,83592
rnfmaxord(3197,83799
Rg_nffix(3334,88074
RgX_nffix(3368,88937
RgV_nffix(3379,89308
get_d(3389,89531
rnfallbase(3413,90369
rnfpseudobasis(3456,91450
rnfdiscf(3464,91624
rnfdiscf(3464,91624
gen_if_principal(3472,91773
is_pseudo_matrix(3481,91969
rnfsimplifybasis(3494,92427
get_order(3531,93262
rnfdet(3540,93429
nfidealdet1(3555,93845
rnfsteinitz(3578,94511
rnfbasis(3627,95772
rnfhnfbasis(3661,96594
rnfisfree_aux(3682,97088
rnfisfree(3702,97538
compositum_fix(3715,98031
nextk(3734,98434
nfcompositum(3738,98502
polcompositum0(3822,100787
polcompositum0(3822,100787
compositum(3826,100872
compositum2(3828,100946
ZX_compositum_disjoint(3833,101146
nfsplitting(3840,101253

/home/mengxue/pari/src/basemath/ellisog.c,1345
ellisweierstrasspoint(19,706
make_velu_curve(27,980
get_isog_vars(38,1361
substvec(47,1532
ellcompisog(58,1823
ellisogenyapply(84,2665
isog_identity(116,3568
update_isogeny_polys(124,3905
isogeny_from_kernel_point(171,5486
first_three_power_sums(240,7504
contrib_weierstrass_pt(264,8291
contrib_full_tors(297,9406
two_torsion_part(341,10935
derivhasse(348,11237
non_two_torsion_abscissa(361,11555
isog_abscissa(379,12160
non_two_torsion_ordinate_char_not2(395,12641
non_two_torsion_ordinate_char2(410,13160
isog_ordinate(450,14385
isogeny_from_kernel_poly(473,15330
ellisogeny(532,17443
trivial_isogeny(566,18453
isogeny_a4a6(572,18552
RgXY_eval(581,18807
ellisog_by_Kohel(587,18889
ellisog_by_roots(597,19268
a4a6_divpol(603,19404
ellisograph_Kohel_iso(617,19670
ellisograph_Kohel_r(633,20092
corr(645,20442
elkies98(652,20567
ellisog_by_jt(695,21865
ellisog_by_j(724,22725
ellisograph_iso(745,23498
ellisograph_r(760,23836
ellisograph_dummy(772,24149
ellisograph_p(786,24617
etree_nbnodes(802,25048
etree_listr(812,25207
etree_list(832,25619
etree_distmatr(841,25774
etree_distmat(870,26463
list_to_crv(881,26671
distmat_pow(895,26937
isomatdbl(911,27229
mkfracss(954,28341
ellQ_exceptional_iso(957,28412
mkisomat(1018,30290
mkisomatdbl(1027,30475
ellQ_isomat(1044,30905
ellisomat(1091,32453

/home/mengxue/pari/src/basemath/ellpadicL.c,113
divmodulo(23,677
initQplog(33,917
logp(53,1476
loopLpn(76,2031
unit_eigenvalue(117,3160
ellpadicL(127,3458

/home/mengxue/pari/src/basemath/Hensel.c,1136
BuildTree(35,1554
ZpX_HenselLift(93,2941
ZpXQ_HenselLift(138,4022
ZpX_RecTreeLift(189,5592
ZpXQ_RecTreeLift(198,5927
quadratic_prec_mask(224,7162
MultiLift(241,7560
ZpX_liftfact(319,9673
BezoutPropagate(329,9928
bezout_lift_fact(352,10560
polhensellift(377,11173
ZpX_liftroots_full(408,12062
ZpX_roots(426,12484
ZpX_liftroot(455,13390
ZpX_liftroots(479,13963
ZpXQX_liftroot_vald(491,14226
ZpXQX_liftroot(531,15517
Zp_sqrtnlift(535,15669
Zp_sqrtlift(581,16889
Zp_sqrt(587,16981
ZpXQ_log_to_ath(598,17212
ZpXQ_log(619,17770
gen_ZpX_Dixon(667,19374
gen_ZpX_Newton(690,20084
struct _ZpXQ_inv729,21046
  GEN T,731,21065
  GEN T, a,731,21065
  GEN T, a, p 731,21065
  GEN T, a, p ,n;731,21065
_inv_invd(735,21098
_inv_eval(744,21300
ZpXQ_invlift(753,21513
ZpXQ_inv(761,21682
struct _ZpXQ_sqrtn774,21987
  GEN T,776,22008
  GEN T, a,776,22008
  GEN T, a, n,776,22008
  GEN T, a, n, ai;776,22008
_sqrtn_invd(780,22042
_sqrtn_eval(789,22286
ZpXQ_sqrtnlift(798,22488
ZpXQ_sqrt(807,22720
ZpX_ZpXQ_liftroot_ea(817,22961
ZpX_ZpXQ_liftroot(867,24629
ZpX_Frobenius(873,24750
ZpXQM_prodFrobenius(879,24869

/home/mengxue/pari/src/basemath/F2x.c,2653
F2x_degree_lg(38,1440
F2x_degree(44,1531
F2x_to_ZX(50,1592
F2xC_to_ZXC(63,1839
F2x_to_Flx(72,1981
Z_to_F2x(85,2199
ZX_to_F2x(92,2305
Flx_to_F2x(111,2626
F2x_to_F2v(130,2923
RgX_to_F2x(142,3122
Rg_to_F2xq(162,3506
F2x_add(194,4288
F2x_addspec(208,4576
F2x_1_add(221,4849
F2x_addshift(238,5110
F2x_shiftip(268,5789
F2x_mul1(283,6176
F2x_mulspec(320,6987
F2x_mul(366,7924
F2x_sqr(373,8031
F2x_pow2n(397,8620
F2x_issquare(406,8716
F2x_sqrt(417,8909
F2x_addshiftip(449,9629
F2x_shiftneg(470,9985
F2x_shiftpos(493,10402
F2x_shift(517,10862
F2x_rem(524,11000
F2x_divrem(541,11325
F2x_valrem(584,12294
F2x_deflate(615,12977
F2x_even_odd(630,13378
F2x_deriv(651,13939
F2x_gcd(661,14151
F2x_extgcd(680,14516
F2x_halfgcd_i(706,15128
F2x_halfgcd(730,15715
F2xq_mul(744,16072
F2xq_sqr(751,16160
F2xq_invsafe(758,16240
F2xq_inv(766,16363
F2xq_div(775,16515
_F2xq_red(782,16640
_F2xq_add(785,16708
_F2xq_cmul(789,16787
_F2xq_sqr(795,16912
_F2xq_mul(799,16983
_F2xq_one(803,17063
_F2xq_zero(809,17145
F2xq_pow(816,17222
F2xq_powu(831,17552
F2xq_powers(847,17901
F2xq_matrix_pow(854,18079
static struct bb_algebra F2xq_algebra 859,18176
F2x_F2xqV_eval(862,18286
F2x_F2xq_eval(869,18426
F2xq_autpow_sqr(877,18632
F2xq_autpow_mul(880,18718
F2xq_autpow(883,18804
F2xq_trace(889,18914
F2xq_conjvec(901,19119
_F2xq_pow(911,19318
_F2xq_rand(918,19423
static const struct bb_group F2xq_star=934,19680
F2xq_order(937,19801
F2x_is_smooth_squarefree(943,19899
F2x_is_smooth(958,20225
F2x_factorel(973,20517
mkF2(989,20828
F2xq_log_from_rel(994,20973
F2xq_log_Coppersmith_d(1016,21513
F2xq_log_find_rel(1074,23249
F2xq_log_Coppersmith_rec(1104,24021
rel_Coppersmith(1155,25184
F2xq_log_Coppersmith(1170,25728
smallirred_F2x(1216,26973
check_kernel(1225,27141
F2xq_log_index(1250,27814
F2xq_easylog(1285,29025
F2xq_log(1295,29260
F2xq_Artin_Schreier(1304,29481
F2xq_sqrt_fast(1326,29992
F2x_is_x(1334,30133
F2xq_sqrt(1337,30186
F2xq_sqrtn(1349,30461
gener_F2xq(1362,30749
ZXX_to_F2xX(1401,31571
_F2xq_neg(1421,31944
_F2xq_rmul(1425,32021
_F2xq_inv(1429,32102
_F2xq_equal0(1433,32173
_F2xq_s(1436,32229
static const struct bb_field F2xq_field=1441,32325
const struct bb_field *get_F2xq_field(get_F2xq_field1444,32483
F2c_to_ZC(1466,33216
F2c_to_mod(1477,33436
F2v_slice(1492,33742
F2m_rowslice(1506,34034
F2m_to_ZM(1515,34195
F2m_to_mod(1523,34333
F2c_to_Flc(1532,34474
F2m_to_Flm(1544,34679
ZV_to_F2v(1553,34820
RgV_to_F2v(1568,35084
Flv_to_F2v(1583,35352
ZM_to_F2m(1598,35609
RgM_to_F2m(1608,35772
Flm_to_F2m(1618,35937
F2v_add_inplace(1629,36127
F2xV_to_F2m(1655,37047

/home/mengxue/pari/src/basemath/bb_group.c,806
#undef pow 21,988
int_block(31,1491
sliding_window_powu(44,1861
sliding_window_pow(83,2865
leftright_binary_powu(121,3854
gen_powu_i(147,4498
gen_powu(160,4821
gen_pow_i(169,5054
gen_pow(184,5454
gen_powu_fold_i(193,5714
gen_powu_fold(218,6346
gen_pow_fold_i(228,6667
gen_pow_fold(263,7561
gen_powers(271,7769
gen_product(290,8302
iter_rho(320,9215
gen_Pollard_log(338,9728
gen_Shanks_init(376,10823
gen_Shanks(399,11500
gen_Shanks_log(433,12533
gen_plog(485,14103
dlog_get_ordfa(499,14436
dlog_get_ord(518,14905
gen_PH_log(544,15579
gen_order(613,17743
gen_factored_order(652,18575
gen_select_order(699,19677
gen_lgener(743,20964
gen_gener(765,21426
gen_Shanks_sqrtl(796,22232
gen_Shanks_sqrtn(843,23485
ellgroup_d2(905,25193
gen_ellgroup(925,25650
gen_ellgens(962,26713

/home/mengxue/pari/src/basemath/trans3.c,2859
#define HALF_E 23,1040
_jbessel(33,1536
bessel_get_lim(65,2257
jbesselvec(79,2663
jbesselhvec(87,2845
polylogvec(95,3011
kbesselvec(103,3177
jbesselintern(112,3360
jbessel(167,4916
jbessel(167,4916
ibessel(169,4991
ibessel(169,4991
_jbesselh(172,5074
jbesselh(193,5413
jbesselh(193,5413
kbessel2(260,7225
kbessel1(274,7575
_kbessel1(361,10164
kbesselintern(417,11489
kbessel(529,14847
kbessel(529,14847
nbessel(531,14922
nbessel(531,14922
hbessel1(534,15010
hbessel1(534,15010
hbessel2(541,15165
hbessel2(541,15165
hyperu(559,16069
incgam_0(639,18548
incgam_cf(683,19837
incgamc(713,20616
incgam_asymp(755,21710
gexp1(785,22523
incgamspec(793,22648
precision2(858,24386
dblmodulus(869,24560
incgam0(883,24825
incgam0(883,24825
incgam(925,25830
mpeint1(929,25927
cxeint1(938,26073
eint1(968,26800
veceint1(1008,27803
veceint1(1008,27803
mp_sum_j(1023,28316
sum_jall(1038,28622
rX_s_eval(1050,28947
mpveceint1(1060,29167
cxerfc_r1(1111,30615
gerfc(1163,32130
gerfc(1163,32130
static const double log2PI 1197,33362
get_xinf(1200,33421
optim_zeta(1218,33869
inv_szeta_euler(1280,35529
bernreal_using_zeta(1320,36559
bernfrac_using_zeta(1334,36932
bernreal_use_zeta(1356,37546
bernreal(1368,37816
veczetas(1405,38756
veczeta(1441,39679
zetaBorwein(1485,40865
szeta(1511,41492
n_s(1552,42644
czeta(1566,42976
pol_mod_xn(1684,46490
twistpartialzeta(1697,46798
init_teich(1774,49023
phi_ms(1800,49631
coeff_of_phi_ms(1818,50072
valfact(1868,51367
number_of_terms(1880,51483
zetap(1902,51822
hurwitz_p(1953,53575
init_cache(1971,53992
zetap(1986,54313
gzeta(2011,54893
gzeta(2011,54893
Harmonic(2039,55912
cxpolylog(2051,56208
polylog(2094,57318
dilog(2171,59231
logabs(2178,59365
polylogD(2191,59535
polylogP(2226,60409
gpolylog(2276,61648
polylog0(2327,63286
polylog0(2327,63286
upper_half(2341,63603
sqrt32(2360,64070
e12(2363,64190
eiPi_frac(2394,65103
exp_IPiQ(2408,65440
exp_IPiC(2415,65586
qq(2435,66014
ser_addmulXn(2452,66366
inteta_pol(2468,66732
inteta(2511,67856
eta(2592,69861
sumdedekind_coprime(2603,70142
u_sumdedekind_coprime(2638,71276
sumdedekind(2658,71976
eta_reduced(2675,72384
eta_correction(2686,72699
trueeta(2722,73580
eta0(2740,73971
eta0(2740,73971
aut_factor(2746,74104
ser_j(2757,74362
jell(2789,75143
jell(2789,75143
to_form(2840,76730
form_to_quad(2843,76813
eta_form(2850,76974
double_eta_quotient(2859,77217
typedef struct { GEN u;2896,78405
typedef struct { GEN u; long v,2896,78405
typedef struct { GEN u; long v, t;2896,78405
typedef struct { GEN u; long v, t; } cxanalyze_t;2896,78405
R_abs_shallow(2900,78506
cxanalyze(2907,78823
apply_eta_correction(2966,80059
weberf2(2998,80949
weberf1(3019,81489
weberf(3038,81990
weber0(3060,82599
weber0(3060,82599
check_unit_disc(3074,82870
theta(3084,83125
thetanullk(3141,84583
vecthetanullk_loop(3173,85268
vecthetanullk(3201,85948
vecthetanullk_tau(3218,86385
trueE2(3237,86948
mplambertW0(3251,87361
mplambertW(3268,87748
serexp0(3290,88246
reverse(3305,88519
serlambertW(3312,88639
glambertW(3351,89472
glambertW(3351,89472
mplambertX(3370,89955

/home/mengxue/pari/src/basemath/trans1.c,3267
static const long SQRTVERYBIGINT 23,990
static const long SQRTVERYBIGINT 25,1071
static THREAD GEN gcatalan,28,1122
static THREAD GEN gcatalan, geuler,28,1122
static THREAD GEN gcatalan, geuler, glog2,28,1122
static THREAD GEN gcatalan, geuler, glog2, gpi;28,1122
pari_init_floats(30,1175
pari_close_floats(36,1261
abpq_init(50,1739
mulii3(58,1912
mulii4(60,1983
T2(64,2113
abpq_sum(73,2362
swap_clone(135,4069
pi_ramanujan(150,4469
pi_brent_salamin(183,5402
constpi(212,6025
constpi(227,6263
mppi(240,6463
mppi(240,6463
Pi2n(244,6537
PiI2n(252,6645
PiI2(256,6729
consteuler(265,7133
mpeuler(327,8633
mpeuler(327,8633
catalan(336,9131
constcatalan(359,9667
mpcatalan(370,9885
mpcatalan(370,9885
transvec(378,10316
trans_eval(387,10477
mpexp0(412,11437
powr0(418,11542
scalarpol_get_1(423,11675
gpowg0(431,11885
_sqr(482,13112
_mul(484,13193
_one(486,13283
_sqri(488,13336
_muli(490,13418
_sqrr(492,13510
_mulr(494,13592
_oner(496,13684
powiu_sign(505,14080
powiu(528,14605
powis(537,14762
powuu(553,15106
usqru(576,15605
upowuu(578,15659
  long prec,683,18844
  long prec, a;683,18844
  GEN (*sqr)sqr684,18860
  GEN (*mulug)mulug685,18879
} sr_muldata;686,18906
_rpowuu_sqr(689,18932
_rpowuu_msqr(701,19183
rpowuu(710,19392
powrs(730,19808
powru(740,20012
powersr(750,20179
powrshalf(758,20330
powruhalf(765,20459
powrfrac(772,20604
pow_monome(785,20865
powps(816,21600
powp(849,22291
pow_polmod(877,22842
gpowgs(910,23569
gpowgs(910,23569
powgi(972,25099
ser_pow_1(1008,26061
ser_pow(1031,26671
val_from_i(1049,27188
ser_powfrac(1057,27374
gpow0(1076,27807
gpow(1102,28474
gpow(1102,28474
gpowers(1165,30161
gpowers(1165,30161
gsqrpowers(1174,30359
sqrt_2adic(1195,31045
Up_sqrt(1227,31691
Qp_sqrt(1255,32182
Zn_sqrt(1283,32705
sqrt_ser(1320,33560
gsqrt(1362,34692
gsqrt(1362,34692
rootsof1complex(1436,36952
rootsof1padic(1446,37189
palogaux(1459,37578
Qp_log(1494,38252
Qp_sqrtn_ram(1519,38894
Qp_sqrtn_unram(1557,39800
Qp_sqrtn(1583,40336
sqrtnint(1633,41524
cbrtr_abs(1679,42750
usqrtn(1691,43011
gsqrtn(1709,43387
gsqrtn(1709,43387
exp1r_abs(1811,46139
mpexpm1(1878,48411
gexpm1(1893,48740
gexpm1(1893,48740
modlog2(1930,49894
mpexp_basecase(1947,50261
mpexp(1972,50841
Qp_exp_prec(2011,51955
Qp_exp_safe(2032,52353
Qp_exp(2047,52605
cos_p(2055,52739
sin_p(2074,53066
cxexp(2094,53400
serchop0(2110,53814
serexp(2122,54070
gexp(2156,54957
gexp(2156,54957
agmr_gap(2180,55674
agm1r_abs(2187,55809
struct agmcx_gap_t 2204,56172
struct agmcx_gap_t { long L,2204,56172
struct agmcx_gap_t { long L, ex,2204,56172
struct agmcx_gap_t { long L, ex, cnt;2204,56172
agmcx_init(2207,56226
agmcx_a_b(2217,56405
agmcx_gap(2232,56906
agm1cx(2245,57234
zellagmcx(2265,57670
agm1(2294,58512
agm(2347,59866
atanhQ_split(2367,60534
log2_split(2392,61142
log2_agm(2402,61405
constlog2(2410,61563
mplog2(2424,61812
logagmr_abs(2427,61882
logr_abs(2447,62486
logagmcx(2539,65982
mplog(2577,66988
Zp_teichmuller(2587,67319
teich(2629,68340
teich(2629,68340
glog(2649,68705
glog(2649,68705
mpcosm1(2713,70830
mpaut(2820,74417
mpcos(2833,74812
tofp_safe(2859,75403
gcos(2866,75568
gcos(2866,75568
mpsin(2909,76916
gsin(2929,77319
gsin(2929,77319
mpsincos(2972,78668
mpsincosm1(3004,79524
expIr(3035,80373
expm1_Ir(3046,80600
cxexpm1(3057,80823
gsincos(3072,81259
mpsinc(3172,84502
gsinc(3188,84752
gsinc(3188,84752
mptan(3241,86500
gtan(3253,86711
gtan(3253,86711
mpcotan(3288,87625
gcotan(3298,87763
gcotan(3298,87763

/home/mengxue/pari/src/basemath/FpX_factor.c,4116
factmod_init(31,1478
ZX_factmod_init(51,1979
all_roots_mod_p(68,2299
Flx_Xnm1(84,2567
Flx_Xn1(95,2765
Fl_nonsquare(107,2959
Flx_cut_out_roots(121,3226
Flx_roots_naive(134,3548
Flx_root_mod_2(160,4280
Flx_oneroot_mod_2(174,4524
rootmod_aux(192,5048
FpX_roots(224,5702
rootmod2(228,5811
rootmod(230,5891
rootmod0(232,5966
rootmod0(232,5966
FpX_quad_factortype(245,6223
FpX_quad_root(253,6440
FpX_otherroot(271,6885
Fl_disc_bc(276,7012
Flx_quad_root(280,7139
Flx_otherroot(290,7391
struct split_t 296,7587
struct split_t { GEN todo,296,7587
struct split_t { GEN todo, done;296,7587
split_init(298,7635
split_convert(306,7788
split_add(316,8009
split_moveto_done(319,8126
split_add_done(329,8339
split_todo(333,8458
split_done(340,8616
FpX_roots_i(348,8802
Flx_cubic_root(419,10815
Flx_oneroot_i(467,12305
FpX_oneroot_i(524,13633
Flx_oneroot(575,14855
Flx_oneroot_split(590,15119
FpX_oneroot(606,15416
FpX_Berlekamp_ker(639,16368
F2x_Berlekamp_ker(650,16608
Flx_Berlekamp_ker(668,17010
FpX_split_part(686,17458
FpX_nbroots(699,17787
FpX_is_totally_split(707,17906
Flm_Flx_mul(719,18173
Flx_nbfact_by_degree(772,19182
Flx_nbfact(805,19968
Flx_nbroots(813,20100
FpX_ddf(833,20569
FpX_nbfact_Frobenius(902,22487
FpX_nbfact(913,22699
try_pow(922,22859
Flx_try_pow(937,23140
F2x_split(959,23737
Flx_split(981,24225
FpX_split(1007,24757
cmpGuGu(1033,25286
FpX_is_irred_2(1037,25384
FpX_degfact_2(1049,25587
prime_fact(1065,26003
trivial_fact(1067,26068
Mod0pX(1071,26195
zero_fact_intmod(1074,26278
FpX_factor_2(1078,26381
FpX_factor_deg2(1102,27070
F2x_quad_factortype(1112,27286
F2x_is_irred_2(1116,27370
F2x_degfact_2(1120,27486
F2x_factor_2(1132,27840
F2x_factor_deg2(1146,28324
split_squares(1156,28525
split_nonsquares(1175,28980
split_Flx_cut_out_roots(1196,29622
Flx_roots_i(1220,30472
Flx_roots(1288,32283
Flx_quad_factortype(1302,32609
Flx_is_irred_2(1308,32728
Flx_degfact_2(1315,32888
Flx_factor_2(1327,33265
Flx_factor_deg2(1347,33854
F2x_factcantor_i(1357,34072
F2x_factcantor(1434,36135
F2x_is_irred(1443,36307
F2xV_to_FlxV_inplace(1446,36369
FlxV_to_ZXV_inplace(1452,36471
F2xV_to_ZXV_inplace(1458,36571
Flx_factcantor_i(1468,36799
Flx_factcantor(1554,39190
Flx_degfact(1562,39388
Flx_is_irred(1569,39527
FpX_factcantor_i(1576,39762
FpX_factcantor(1665,42109
factmod_aux(1676,42329
factcantor0(1707,43066
factmod(1710,43162
FpX_is_irred(1716,43399
FpX_degfact(1721,43495
factcantor(1729,43645
factcantor(1729,43645
simplefactmod(1731,43705
Flx_addmul_inplace(1736,43848
FqX_rand(1753,44288
#define set_irred(1761,44551
deg1_Flx(1764,44643
F2x_split_Berlekamp(1770,44726
Flx_split_Berlekamp(1840,46259
FpX_split_Berlekamp(1918,48024
FqX_deriv(1999,49974
FqX_is_squarefree(2004,50070
F2x_Berlekamp_i(2013,50230
Flx_Berlekamp_i(2079,52014
FpX_Berlekamp_i(2153,54010
FpX_factor(2226,55930
Flx_factor(2233,56063
F2x_factor(2240,56229
factormod0(2247,56327
factormod0(2247,56327
to_Fq(2264,56898
to_Fq_pol(2282,57220
to_Fq_fact(2290,57356
to_FqC(2310,57826
FlxqXQ_halfFrobenius(2326,58179
FpXQXQ_halfFrobenius(2337,58505
FlxqX_Frobenius(2357,59027
FpXQX_Frobenius(2369,59351
FqX_Frobenius_powers(2381,59645
FqX_Frobenius_eval(2398,60034
FpXQX_split_part(2413,60396
FlxqX_split_part(2425,60641
FpXQX_nbroots(2437,60907
FqX_nbroots(2452,61176
FlxqX_nbroots(2456,61273
FlxqX_Berlekamp_ker(2464,61408
FpXQX_Berlekamp_ker(2476,61709
FpXQX_nbfact(2497,62227
FqX_nbfact(2505,62367
FqX_split_Berlekamp(2511,62463
FqX_split(2557,63719
FqX_frob_deflate(2610,65401
FqX_split_Trager(2620,65728
isabsolutepol(2657,66676
add(2669,66850
FqX_split_deg1(2672,66981
FqX_split_by_degree(2692,67485
FqXC_roots_from_deg1(2722,68203
FqX_split_equal(2731,68398
FqX_split_roots(2740,68621
FqX_split_all(2747,68824
FpX_rootsff_i(2758,69118
FpX_rootsff(2779,69631
F2xqX_quad_roots(2786,69752
FqX_quad_roots(2802,70090
FqX_roots_i(2822,70614
FqX_roots(2848,71302
FqX_sqf_split(2856,71454
FpX_factorff_i(2887,72105
FpX_factorff(2908,72590
FqX_factor_i(2916,72758
ffcheck(3032,75662
factorff(3045,76049
polrootsff(3062,76438
FqX_factor(3081,76876

/home/mengxue/pari/src/basemath/FlxqE.c,3427
RgE_to_FlxqE(33,1300
FlxqE_changepoint(40,1440
FlxqE_changepointinv(56,1930
nonsquare_Fl(72,2400
nonsquare_Flxq(82,2516
Flxq_elltwist(98,2781
FlxqE_dbl_slope(114,3162
FlxqE_dbl(135,3870
FlxqE_add_slope(143,4024
FlxqE_add(166,4712
FlxqE_neg_i(174,4875
FlxqE_neg(181,4992
FlxqE_sub(189,5140
struct _FlxqE196,5311
  GEN a4,198,5327
  GEN a4, a6;198,5327
  GEN T;199,5341
  ulong p;200,5350
_FlxqE_dbl(204,5376
_FlxqE_add(211,5511
_FlxqE_mul(218,5654
FlxqE_mul(230,5977
random_F3xqE(241,6205
random_FlxqE(259,6702
_FlxqE_rand(279,7312
static const struct bb_group FlxqE_group=285,7437
get_FlxqE_group(288,7576
FlxqE_order(297,7830
FlxqE_log(306,8026
FlxqE_vert(323,8665
FlxqE_tangent_update(335,8950
FlxqE_chord_update(360,9586
struct _FlxqE_miller394,10426
  ulong p;396,10449
  GEN T,397,10460
  GEN T, a4,397,10460
  GEN T, a4, P;397,10460
FlxqE_Miller_dbl(401,10491
FlxqE_Miller_add(418,10970
FlxqE_Miller(436,11545
FlxqE_weilpairing(451,12001
FlxqE_tatepairing(468,12537
_FlxqE_pairorder(478,12788
Flxq_ellgroup(485,12972
Flxq_ellgens(494,13224
static GEN _can_invl(520,14144
static GEN _can_lin(522,14205
_can_iter(530,14359
_can_invd(546,14913
F3x_canonlift(558,15396
static GEN _can5_invl(561,15506
static GEN _can5_lin(563,15568
_shift(572,15774
struct _can_mul588,16100
  GEN T,590,16118
  GEN T, q;590,16118
  ulong p;591,16130
_can5_mul(595,16156
_can5_sqr(606,16448
_can5_iter(612,16517
_can5_invd(635,17203
Flx_canonlift(642,17371
RgX_circular_shallow(650,17573
ZpXQ_frob_cyc(663,17840
ZpXQ_frob(670,17985
struct _lift_lin683,18253
  ulong p;685,18272
  GEN sqx,686,18283
  GEN sqx, Tp;686,18283
  GEN ai,687,18298
  GEN ai, Xm;687,18298
static GEN _lift_invl(690,18316
static GEN _lift_lin(699,18550
FpM_FpXV_bilinear(710,18880
FpM_FpXQV_bilinear(721,19173
FpXC_powderiv(727,19293
struct _lift_iso739,19526
  GEN phi;741,19545
  GEN Xm,742,19556
  GEN Xm,T;742,19556
  GEN sqx,743,19568
  GEN sqx, Tp;743,19568
  ulong p;744,19583
_lift_iter(748,19609
_lift_invd(762,19998
lift_isogeny(779,20631
getc2(789,20883
struct _ZpXQ_norm799,21239
  long n;801,21259
  GEN T,802,21269
  GEN T, p;802,21269
ZpXQ_norm_mul(806,21296
ZpXQ_norm_sqr(816,21578
ZpXQ_norm_pcyc(823,21687
ZpXQ_sqrtnorm_pcyc(837,22023
ZpXQ_sqrtnorm(845,22233
struct _teich_lin851,22408
  ulong p;853,22428
  GEN sqx,854,22439
  GEN sqx, Tp;854,22439
  long m;855,22454
_teich_invl(859,22479
_teich_lin(868,22676
struct _teich_iso878,22984
  GEN Xm,880,23004
  GEN Xm, T;880,23004
  GEN sqx,881,23017
  GEN sqx, Tp;881,23017
  ulong p;882,23032
_teich_iter(886,23058
_teich_invd(899,23401
Teichmuller_lift(912,23797
get_norm(920,24039
fill_pols(934,24347
get_Kohel_polynomials(963,25130
zx_is_pcyc(1000,26402
Flxq_ellcard_Kohel(1012,26569
liftcurve(1070,28495
getc5(1081,28760
ZpXQX_liftrootmod_vald(1098,29530
get_H1(1143,31049
Flxq_ellcard_Harley(1151,31259
closest_lift(1226,33978
FlxqE_find_order(1232,34084
Flx_next(1307,36427
Flx_renormalize_ip(1321,36580
F3xq_ellcard_naive(1330,36709
Flxq_ellcard_naive(1349,37177
Flxq_kronecker(1370,37717
Flxq_ellpoint(1383,38029
Flxq_ellcard_Shanks(1395,38354
F3xq_ellcard(1437,39895
Flxq_ellcard_Satoh(1462,40675
Flxq_ellcard_Kedlaya(1496,41786
Flxq_ellj(1511,42344
Flxq_ellj_to_a4a6(1533,42882
F3xq_ellcardj(1551,43371
Flxq_ellcardj(1580,44055
Flxq_ellcard(1647,46001

/home/mengxue/pari/src/basemath/subgroup.c,1498
typedef struct slist 17,614
  struct slist *next;next18,637
  long *data;data19,659
  long prec;20,673
} slist;21,686
  GEN cyc,24,713
  GEN cyc, gen;24,713
  ulong count;25,729
  slist *list;list26,744
} sublist_t;27,759
typedef struct subgp_iter 39,1204
  long *M,M40,1232
  long *M, *L;L40,1232
  GEN *powlist;powlist41,1297
  long *c,c42,1338
  long *c, *maxc;maxc42,1338
  GEN *a,a43,1356
  GEN *a, *maxa,maxa43,1356
  GEN *a, *maxa, **g,g43,1356
  GEN *a, *maxa, **g, **maxg;maxg43,1356
  long *available;available44,1386
  GEN **H;H45,1405
  GEN cyc;46,1460
  GEN subq;47,1497
  GEN subqpart;48,1530
  GEN bound;49,1593
  long boundtype;50,1666
  long countsub;51,1684
  long count;52,1746
  GEN expoI;53,1822
  long(*fun)fun55,1856
  void *fundata;fundata56,1922
  long stop;57,1958
} subgp_iter;58,1971
enum { b_NONE,61,2057
enum { b_NONE, b_MAX,61,2057
enum { b_NONE, b_MAX, b_EXACT,61,2057
enum { b_NONE, b_MAX, b_EXACT, b_TYPE 61,2057
#define len(63,2099
#define setlen(64,2126
printtyp(67,2170
conjugate(76,2380
addcell(93,2753
list_fun(121,3441
treatsub(132,3765
inc(149,4221
dogroup(153,4296
loop(219,6097
dopsubtyp(238,6456
weight(273,7442
dopsub(281,7556
parse_bound(375,10099
expand_sub(402,10795
init_powlist(417,11049
subgroup_engine(428,11299
get_snf(526,13739
forsubgroup(556,14394
forsubgroup0(570,14657
forsubgroup0(570,14657
packtoi(578,14809
subgrouplist_i(593,15070
subgrouplist(642,16174
subgroupcondlist(648,16262

/home/mengxue/pari/src/basemath/perm.c,1716
vec_isconst(23,1003
vec_is1to1(37,1290
vec_insert(50,1471
vecsmall_sortspec(67,2162
vecsmall_sort(100,2799
vecsmall_indexsortspec(109,2930
vecsmall_indexsort(144,3898
vecsmall_uniq_sorted(153,4052
vecsmall_uniq(167,4339
vecsmall_duplicate_sorted(176,4505
vecsmall_duplicate(186,4665
vecvecsmall_sort(205,5281
vecvecsmall_sort_uniq(211,5373
vecvecsmall_indexsort(217,5475
vecvecsmall_search(223,5578
perm_mul_inplace2(240,6326
vecperm_orbits_i(248,6493
vecperm_orbits(281,7251
perm_cycles(289,7418
perm_order(297,7560
cyc_pow(307,7754
cyc_pow_perm(338,8408
perm_pow(360,8873
perm_to_GAP(366,8958
perm_commute(416,9870
INLINE GEN grp_get_gen(432,10538
INLINE GEN grp_get_ord(433,10589
INLINE GEN quo_get_gen(439,10787
INLINE GEN quo_get_coset(440,10838
trivialsubgroups(443,10903
perm_relorder(448,11059
perm_generate(458,11224
group_order(469,11509
group_domain(476,11614
group_leftcoset(485,11802
group_rightcoset(501,12186
group_elts(517,12604
groupelts_set(535,13039
group_set(546,13269
sgcmp(559,13492
subgroups_tableset(562,13564
tableset_find_index(573,13805
trivialgroup(581,13960
cyclicgroup(584,14078
dicyclicgroup(589,14243
group_quotient(598,14550
quotient_perm(633,15377
quotient_subgroup_lift(651,15807
quotient_group(669,16362
group_perm_normalize(700,17092
liftlistsubgroups(710,17379
liftsubgroup(740,18222
group_isA4S4(758,18653
group_subgroups(773,19056
group_isabelian(868,21872
group_abelianHNF(880,22108
group_abelianSNF(913,22906
abelian_group(922,23079
group_subgroup_isnormal(948,23725
groupelts_center(961,24088
groupelts_abelian_group(984,24609
group_export_GAP(1006,25130
group_export_MAGMA(1025,25572
group_export(1044,26074

/home/mengxue/pari/src/basemath/FpE.c,3543
RgE_to_FpE(32,1276
FpE_to_mod(39,1397
FpE_changepoint(46,1520
FpE_changepointinv(62,1960
nonsquare_Fp(78,2385
Fp_elltwist(91,2535
FpE_dbl_slope(99,2739
FpE_dbl(113,3168
FpE_add_slope(121,3305
FpE_add(143,3884
FpE_neg_i(151,4030
FpE_neg(158,4142
FpE_sub(165,4266
struct _FpE172,4419
  GEN a4,174,4433
  GEN a4,a6;174,4433
  GEN p;175,4446
_FpE_dbl(179,4470
_FpE_add(186,4589
_FpE_mul(193,4716
FpE_mul(205,5021
random_FpE(215,5180
_FpE_rand(233,5650
static const struct bb_group FpE_group=239,5751
get_FpE_group(242,5880
FpE_order(251,6090
FpE_log(271,6420
FpE_vert(299,7207
FpE_tangent_update(311,7461
FpE_chord_update(336,8053
struct _FpE_miller369,8841
  GEN p,371,8862
  GEN p, a4,371,8862
  GEN p, a4, P;371,8862
FpE_Miller_dbl(375,8893
FpE_Miller_add(391,9317
FpE_Miller(408,9837
FpE_weilpairing(422,10231
FpE_tatepairing(439,10683
is_CMj(456,11278
u2_is_CMj(461,11442
Fp_ellj_get_CM(469,11595
#define CHECK(471,11635
#undef CHECK490,12158
FqX_quad_root(502,12645
path_extends_to_floor(517,13040
jissupersingular(551,13985
Fp_elljissupersingular(579,14765
Fl_ellcard_naive(602,15583
FpE_add_ip(613,15804
_fix(633,16249
closest_lift(641,16435
get_table_size(647,16542
Fp_ellpoint(660,16931
Fl_ellpoint(674,17240
Fp_ellcard_Shanks(691,17691
  ulong x,908,24687
  ulong x,y,908,24687
  ulong x,y,i;908,24687
} multiple;909,24702
compare_multiples(912,24726
uclosest_lift(918,24990
Fle_dbl_inplace(925,25111
Fle_add_inplace(938,25461
Fl_ellcard_Shanks(955,26043
Mod16(1049,28542
#define Mod2(1057,28682
#define Mod4(1058,28713
#define Mod8(1059,28744
ap_j0(1062,28787
ap_j1728(1073,29082
ap_j8000(1085,29389
ap_j287496(1101,29760
ap_cm(1115,30095
ec_ap_cm(1127,30409
Fp_ellj_nodiv(1149,31073
Fp_ellj(1157,31269
Fp_ellcard_CM(1165,31473
Fp_ellcard(1182,31855
Fl_elltrace(1198,32336
Fl_elltrace_CM(1210,32673
_FpE_pairorder(1221,32952
Fp_ellgroup(1228,33115
Fp_ellgens(1236,33305
RgE_to_FpXQE(1272,34483
FpXQE_changepoint(1279,34621
FpXQE_changepointinv(1295,35108
nonsquare_FpXQ(1311,35574
FpXQ_elltwist(1331,35911
FpXQE_dbl_slope(1340,36155
FpXQE_dbl(1354,36631
FpXQE_add_slope(1362,36781
FpXQE_add(1384,37397
FpXQE_neg_i(1392,37556
FpXQE_neg(1399,37671
FpXQE_sub(1407,37817
struct _FpXQE1414,37986
  GEN a4,1416,38002
  GEN a4,a6;1416,38002
  GEN T,1417,38015
  GEN T,p;1417,38015
_FpXQE_dbl(1421,38041
_FpXQE_add(1428,38176
_FpXQE_mul(1435,38319
FpXQE_mul(1447,38642
random_FpXQE(1457,38823
_FpXQE_rand(1476,39384
static const struct bb_group FpXQE_group=1482,39499
get_FpXQE_group(1485,39632
FpXQE_order(1494,39868
FpXQE_log(1503,40062
FpXQE_vert(1521,40700
FpXQE_tangent_update(1533,40980
FpXQE_chord_update(1558,41611
struct _FpXQE_miller1592,42447
  GEN p;1594,42470
  GEN T,1595,42479
  GEN T, a4,1595,42479
  GEN T, a4, P;1595,42479
FpXQE_Miller_dbl(1599,42510
FpXQE_Miller_add(1616,42987
FpXQE_Miller(1634,43560
FpXQE_weilpairing(1649,44011
FpXQE_tatepairing(1666,44537
FpXQ_ellj(1682,45144
FpXQ_elljissupersingular(1697,45518
elltrace_extension(1741,47153
Fp_ffellcard(1750,47390
FpXQ_ellcardj(1759,47627
FpXQ_ellcard(1824,49630
_FpXQE_pairorder(1847,50238
FpXQ_ellgroup(1854,50422
FpXQ_ellgens(1863,50672
struct divpol_red1890,51591
  GEN h,1892,51611
  GEN h, T,1892,51611
  GEN h, T, p;1892,51611
_red(1896,51641
_rsqr(1900,51742
_rmul(1907,51871
divpol_f2(1916,52092
divpol_ff(1925,52332
divpol(1934,52601
Fq_elldivpolmod(1984,54208
FpXQ_elldivpol(1999,54627
Fp_elldivpol(2005,54733

/home/mengxue/pari/src/basemath/RgV.c,1847
RgM_is_ZM(18,618
RgV_is_ZMV(31,855
RgM_zc_mul_i(48,1500
RgM_zc_mul(75,2062
RgM_zm_mul(78,2189
RgV_zc_mul_i(89,2417
RgV_zc_mul(98,2601
RgV_zm_mul(101,2669
RgV_dotsquare(111,2869
RgV_dotproduct_i(132,3283
RgV_dotproduct(151,3671
RgV_sum(158,3816
RgV_sumpart(168,4011
RgV_sumpart2(178,4211
RgM_sumcol(187,4375
_gmul(207,4747
RgV_prod(211,4818
RgM_Rg_add(219,5018
RgM_Rg_sub(237,5383
RgM_Rg_add_shallow(255,5748
RgM_Rg_sub_shallow(272,6097
RgC_Rg_add(290,6447
RgC_add_i(305,6720
RgC_add(313,6871
RgV_add(315,6932
RgC_sub_i(324,7092
RgC_sub(332,7243
RgV_sub(334,7304
RgM_add(343,7457
RgM_sub(353,7683
RgC_neg_i(364,7917
RgC_neg(372,8051
RgV_neg(374,8102
RgM_neg(382,8237
RgV_RgC_mul(393,8429
RgC_RgV_mul(400,8584
RgC_RgM_mul(408,8738
RgM_RgV_mul(417,8974
RgMrow_RgC_mul_i(425,9143
RgMrow_RgC_mul(434,9379
RgM_RgC_mul_i(439,9543
RgM_RgC_mul(448,9706
RgV_RgM_mul(463,10095
is_modular_mul(476,10397
is_modular_sqr(504,10939
RgM_mul(520,11275
RgM_multosym(544,11971
RgM_transmultosym(566,12567
RgM_transmul(587,13122
gram_matrix(606,13534
RgM_sqr(626,13958
_RgM_add(642,14419
_RgM_cmul(645,14498
_RgM_sqr(648,14597
_RgM_mul(651,14667
_RgM_one(654,14747
_RgM_zero(657,14820
_RgM_red(660,14899
static struct bb_algebra RgM_algebra 662,14948
RgM_powers(666,15113
RgX_RgMV_eval(673,15241
RgX_RgM_eval(680,15394
RgC_Rg_div(687,15522
RgC_Rg_mul(694,15669
RgV_Rg_mul(701,15816
RgM_Rg_div(708,15963
RgM_Rg_mul(722,16253
fill_scalmat(743,16954
scalarmat(754,17093
scalarmat_shallow(760,17217
scalarmat_s(765,17322
matid(771,17448
scalarcol_i(779,17619
scalarcol(790,17803
scalarcol_shallow(793,17864
RgM_isscalar(796,17933
RgM_isidentity(818,18334
RgC_is_ei(838,18699
RgM_isdiagonal(852,18898
isdiagonal(869,19205
isdiagonal(869,19205
RgV_isin(876,19358
RgM_det_triangular(885,19488
RgV_kill0(898,19759

/home/mengxue/pari/src/basemath/qfisom.c,1537
Z_trunc(20,651
ZV_trunc_to_zv(27,744
scp(37,974
ZM_trunc_to_zm(56,1262
zm_divmod(65,1418
zv_canon(75,1630
struct group104,2637
  GEN     ord;106,2652
  GEN     ng;107,2667
  GEN     nsg;108,2681
  GEN     g;109,2696
struct fingerprint112,2713
  GEN diag;114,2734
  GEN per;115,2746
  GEN e;116,2757
struct qfauto119,2770
  long dim;121,2786
  GEN F,122,2798
  GEN F, V,122,2798
  GEN F, V, W,122,2798
  GEN F, V, W, v;122,2798
  ulong p;123,2816
struct qfcand126,2831
  long cdep;128,2847
  GEN comb;129,2860
  GEN bacher_pol;130,2872
possible(134,2906
fingerprint(164,3798
bacher(230,5925
init_bacher(312,8308
bachcomp(326,8647
checkvecs(411,10931
operate(437,11418
orbit(451,11723
orbitlen(480,12444
orbdelete(512,13225
orbsubtract(534,13684
matgen(548,14017
stabil(569,14524
stab(593,15410
qfisom_candidates_novec(736,20910
qfisom_candidates(804,22739
aut(969,27775
autom(1006,28862
#define MAXENTRY 1120,32894
#define MAXNORM 1121,32939
zm_maxdiag(1124,32991
init_qfauto(1136,33181
init_qfgroup(1198,34779
scpvector(1240,35891
scpvecs(1260,36437
scpforms(1305,37592
gen_comb(1335,38387
init_comb(1360,39098
init_flags(1374,39451
gen_group(1397,40101
is_qfisom(1414,40485
unpack_qfisominit(1421,40647
init_qfisom(1444,41167
qfauto(1472,41866
qf_to_zmV(1487,42181
qfauto0(1496,42353
qfauto0(1496,42353
isostab(1515,42801
iso(1605,46034
isometry(1656,47532
qfisominit(1675,48148
qfisominit0(1690,48626
qfisominit0(1690,48626
qfisom(1699,48796
qfisom0(1719,49342
qfisom0(1719,49342
ZM_to_GAP(1736,49640
qfautoexport(1764,50231

/home/mengxue/pari/src/basemath/buch3.c,2964
buchnarrow(24,1047
buchnarrow(24,1047
compute_fact(81,2977
too_big(118,3719
idealmoddivisor_aux(132,4037
idealmoddivisor(156,4730
fast_val(165,4953
make_integral_Z(179,5249
get_pinvpi(188,5413
get_pi(198,5623
compute_raygen(205,5718
check_subgroup(330,9487
get_dataunit(347,9929
Buchray(362,10282
bnrinit0(489,13969
bnrinit0(489,13969
bnrclassno(501,14193
bnrclassno0(517,14682
bnrclassno0(517,14682
bnrisprincipal(544,15343
isprincipalray(593,16956
isprincipalraygen(599,17030
minkowski_bound(606,17151
zimmertbound(617,17428
hermiteconstant(669,19480
isprimitive(694,20104
dft_bound(723,20786
regulatorbound(730,20910
is_unit(751,21521
minimforunits(761,21730
#undef NBMAX833,23583
is_zero(835,23607
is_complex(838,23682
compute_M0(843,23840
lowerboundforregulator(984,28869
bound_unit_index(1019,29916
primecertify(1031,30312
struct check_pr 1080,31657
  long w;1081,31675
  GEN mu;1082,31698
  GEN fu;1083,31733
  GEN cyc;1084,31743
  GEN cycgen;1085,31754
  GEN bad;1086,31768
check_prime(1090,31851
init_bad(1115,32638
bnfcertify0(1140,33099
bnfcertify0(1140,33099
bnfcertify(1187,34371
bnrsurjection(1197,34917
imageofgroup(1209,35289
ABC_to_bnr(1219,35541
bnrconductor0(1235,35944
bnrconductor0(1235,35944
bnrisconductor0(1242,36084
bnrisconductor0(1242,36084
ideallog_to_bnr(1250,36272
bnr_log_gen_pr(1275,36853
bnr_log_gen_arch(1278,36989
contains(1283,37161
bnrconductor(1293,37608
bnrisconductor(1350,38986
rnfnormgroup_i(1381,39821
rnfnormgroup(1456,42380
nf_deg1_prime(1465,42561
rnfisabelian(1491,43127
rnfconductor(1540,44753
Discrayrel(1563,45677
bnrdisc(1609,47070
bnrdisc0(1632,47665
bnrdisc0(1632,47665
discrayrel(1638,47784
discrayrelcond(1641,47850
discrayabs(1644,47931
discrayabscond(1647,47991
KerChar(1653,48205
bnrconductorofchar(1678,48973
get_classno(1686,49173
chk_listBU(1693,49335
bnrclassnolist(1708,49734
Lbnrclassno(1728,50179
factordivexact(1738,50385
factorsplice(1763,51022
factorpow(1775,51319
factormul(1781,51443
get_nz(1808,51955
get_NR1D(1831,52539
get_discdata(1848,53075
typedef struct _disc_data 1855,53289
  long degk;1856,53317
  GEN bnf,1857,53330
  GEN bnf, fadk,1857,53330
  GEN bnf, fadk, idealrelinit,1857,53330
  GEN bnf, fadk, idealrelinit, V;1857,53330
} disc_data;1858,53364
get_discray(1861,53389
discrayabslist(1893,54440
static const int SHLGVINT 1932,55572
static const long LGVINT 1933,55604
INLINE long vext0(1934,55641
INLINE long vext1(1935,55702
#define bigel(1936,55756
bigcgetvec(1940,55893
zsimp(1954,56226
fasmall_append(1962,56429
zsimpjoin(1969,56577
bnrclassnointern(1999,57460
vecselect_p(2013,57782
rowselect_p(2021,58023
bnrclassnointernarch(2029,58225
decodemodule(2064,59197
decodemodule(2064,59197
discrayabslistarch(2102,60461
discrayabslistlong(2310,67195
subgroup_conductor_ok(2317,67349
conductor_elts(2325,67524
subgrouplist_cond_sub(2346,68141
subgroupcond(2368,68696
subgrouplist0(2384,69220
subgrouplist0(2384,69220
bnrdisclist0(2397,69525
bnrdisclist0(2397,69525
bnrautmatrix(2408,69909
bnrgaloismatrix(2423,70243
bnrgaloisapply(2453,70880
check_bnrgal(2467,71230
bnrisgalois(2484,71607

/home/mengxue/pari/src/basemath/FpV.c,2627
FpC_red(24,1020
FpV_red(34,1209
FpC_center(42,1350
Fp_center_inplace(52,1562
FpC_center_inplace(56,1653
Flv_center(64,1787
FpM_red(74,1999
FpM_center(82,2143
FpM_center_inplace(91,2311
Flm_center(97,2444
FpC_add(111,2966
FpV_add(119,3137
FpM_add(127,3308
Flv_add(138,3522
Flv_add_inplace(150,3751
Flv_sum(160,3941
FpC_sub(172,4132
FpV_sub(180,4303
Flv_sub(189,4475
Flv_sub_inplace(198,4637
Flm_Fl_add(205,4762
Flm_add(223,5115
FpC_Fp_mul(237,5636
Flc_Fl_mul(245,5789
Flc_Fl_div(253,5945
Flc_Fl_div_inplace(258,6031
FpM_Fp_mul(263,6125
Flc_Fl_mul_part_inplace(279,6442
Flc_Fl_mul_inplace(285,6566
Flm_Fl_mul_inplace(290,6680
Flm_Fl_mul(302,7002
Flv_neg(320,7435
Flv_neg_inplace(329,7587
Flm_neg(337,7696
ZMrow_ZC_mul_i(348,7905
zmrow_zc_mul(361,8146
zm_zc_mul(371,8310
zm_mul(383,8536
Flmrow_Flc_mul_SMALL(400,8840
Flmrow_Flc_mul_i(412,9080
Flm_Flc_mul_i_2(428,9547
FpM_FpC_mul_i(444,9826
Flm_Flc_mul_i_SMALL(457,10087
Flm_Flc_mul_i(465,10286
F2m_F2c_mul_i(473,10489
FpM_mul(489,10754
Flm_mul(518,11368
F2m_mul(541,11868
_Flm_mul(558,12194
_Flm_sqr(561,12274
Flm_powu(564,12339
_F2m_mul(571,12518
_F2m_sqr(574,12602
F2m_powu(577,12672
_FpM_mul(584,12836
_FpM_sqr(587,12912
FpM_powu(590,12973
FpC_FpV_mul(610,13457
FpV_dotproduct(626,13816
FpV_dotsquare(637,14082
Flv_dotproduct_SMALL(649,14330
Flv_dotproduct_i(661,14552
Flv_dotproduct(677,14996
Flv_dotproduct_pre(688,15221
F2v_dotproduct(699,15449
FpM_FpC_mul(718,15761
Flm_Flc_mul(724,15892
Flm_Flc_mul_pre(738,16208
F2m_F2c_mul(750,16469
FpM_FpC_mul_FpX(759,16688
Flm_transpose(799,17797
gen_matid(816,18355
matid_F2m(832,18680
matid_F2xqM(842,18903
matid_FlxqM(849,19030
matid_Flm(857,19170
scalar_Flm(867,19391
ZV_to_Flv(881,19902
ZM_to_Flm(889,20050
ZMV_to_FlmV(898,20223
to_intmod(908,20447
Fl_to_intmod(910,20515
Fp_to_mod(913,20578
FpX_to_mod(920,20697
FpV_to_mod(931,20951
FpC_to_mod(942,21187
FpM_to_mod(953,21431
Flc_to_mod(969,21747
Flm_to_mod(979,21945
FpVV_to_mod(996,22269
FpXQC_to_mod(1014,22634
zCs_to_ZC(1046,23921
zMs_to_ZM(1055,24099
gen_FpM_Wiedemann(1066,24415
zMs_ZC_mul(1128,26039
FpMs_FpC_mul(1159,26764
ZV_zMs_mul(1162,26844
FpV_FpMs_mul(1194,27410
ZlM_gauss(1197,27490
struct wrapper_modp_s 1225,28173
  GEN (*f)f1226,28197
  void *E;E1227,28221
  GEN p;1228,28232
wrap_relcomb_modp(1233,28281
wrap_relcomb(1239,28425
wrap_relker(1242,28499
gen_ZpM_Dixon(1246,28627
vecprow(1276,29467
ZpMs_ZpCs_solve(1285,29746
FpMs_FpCs_solve(1322,30800
FpMs_FpCs_solve_safe(1328,30903
FpMs_structelim_back(1346,31316
FpMs_leftkernel_elt(1385,32314

/home/mengxue/pari/src/basemath/gen1.c,2007
#define fix_frac_if_int(24,1075
#define fix_frac_if_int_GC(28,1207
warn_coercion(34,1385
kro_quad(41,1536
Zp_nosquare_m1(50,1703
addRc(62,2196
mulRc(68,2332
mulRc_direct(75,2550
divRc(81,2694
divcR(89,2943
addRq(95,3110
mulRq(102,3276
addqf(109,3442
mulrfrac(115,3637
mulqf(128,3925
divqf(132,4045
divfq(136,4164
addTp(141,4329
mulTp(152,4625
divTp(157,4784
divpT(163,5003
add_intmod_same(170,5216
sub_intmod_same(182,5548
mul_intmod_same(195,5901
div_intmod_same(206,6209
rfrac_denom_mul_scal(226,7074
gred_rfrac_simple(239,7424
fix_rfrac(307,8927
gred_rfrac2_i(327,9378
gred_rfrac2(367,10438
gred_frac2(375,10594
quad_polmod_conj(410,11591
quad_polmod_norm(423,12006
gconj(438,12408
gconj(438,12408
conjvec(494,13641
addsub_pp(579,16051
addQp(625,17220
#define addsub_polmod_same 682,18551
addsub_polmod(685,18636
addsub_polmod_scal(704,19283
add_ser_scal(713,19511
serprec(753,20458
ser_add(756,20567
add_rfrac_scal(780,21300
add_scal(792,21590
addsub_frac(809,21961
add_rfrac(905,24698
gadd(950,25880
gadd(950,25880
gaddsg(1200,33415
gsubsg(1225,34027
gsub(1256,35056
gsub(1256,35056
mul_ser_scal(1333,37691
mul_rfrac_scal(1349,38147
mul_scal(1382,38860
mul_gen_rfrac(1399,39311
mul_rfrac(1408,39575
div_rfrac_pol(1434,40146
mul_polmod_scal(1450,40481
quad_polmod_mul(1459,40638
mul_polmod_same(1499,41592
sqr_polmod(1537,42612
mul_polmod(1568,43306
did_add(1592,43986
mulcIR(1636,45079
mulcc(1647,45284
mulpp(1743,47579
mulqq(1758,48014
mulcxI(1783,48617
mulcxmI(1800,48967
fill_ser(1819,49404
gmul(1832,49673
gmul(1832,49673
ff_poltype(2133,58282
sqr_ser_part(2148,58610
gsqr(2180,59417
gsqr(2180,59417
div_rfrac_scal(2320,63318
div_scal_rfrac(2327,63487
div_rfrac(2339,63782
div_ser_scal(2343,63878
ser_normalize(2356,64180
div_T_scal(2368,64437
div_scal_pol(2380,64698
div_scal_ser(2389,64947
div_scal_T(2400,65359
div_ser(2413,65670
divpp(2458,66893
div_polmod_same(2475,67415
gdiv(2520,68618
gdiv(2520,68618
gmulsg(2949,81556
gdivgs(3035,84121
gmul2n(3147,86880
gmul2n(3147,86880
inv_polmod(3233,89493
ginv(3270,90351

/home/mengxue/pari/src/basemath/hnf_snf.c,1712
hnfallgen(23,981
mathnf0(30,1089
mathnf0(30,1089
count(69,2278
count2(86,2526
hnffinal(95,2668
p_mat(203,6079
col_dup(214,6336
hnfspec_i(234,7001
#define absmax(297,8977
hnfspec(537,16572
mathnfspec(546,16823
hnfadd_i(594,17974
hnfadd(643,19595
ZC_elem(654,20019
is_RgX(698,21111
gbezout_step(701,21252
col_mul(735,22154
do_zero(746,22348
update(754,22473
RgC_elem(775,23010
ZM_reduce(793,23568
RgX_normalize_all(815,24022
RgM_reduce(829,24446
hnfmerge_get_1(861,25291
remove_0cols(912,26596
hnf_i(923,26898
ZM_hnf(970,27970
FpV_Fp_mul_part_ip(974,28087
FpV_red_part_ipvec(992,28518
ZpM_echelon(1001,28786
zlm_echelon(1067,30488
ZM_hnfmodall_i(1134,32157
ZM_hnfmodall(1292,36703
ZM_hnfmod(1298,36827
ZM_hnfmodid(1300,36887
allhnfmod(1303,36965
hnfmod(1311,37166
hnfmod(1311,37166
hnfmodid(1317,37277
hnfmodid(1317,37277
ZM_hnfcenter(1331,37554
Minus(1370,38722
findi(1380,38952
findi_normalize(1389,39072
reduce2(1401,39291
hnfswap(1444,40400
reverse_rows(1471,41156
ZM_hnflll(1486,41453
hnflll(1567,43457
reduce1(1577,43609
ZV_gcdext_i(1602,44249
ZV_extgcd(1655,45370
ZV_hnfgcdext(1662,45533
ZM_hnfperm(1674,45769
hnfperm(1793,48576
ZM_hnfall(1804,48891
hnfall(1886,50937
hnf(1893,51041
hnf_divscale(1897,51162
hnfdivide(1921,51773
hnf_invimage(1951,52490
hnf_solve(1994,53639
trivsmith(2017,54274
snf_pile(2028,54472
bezout_step(2038,54650
negcmpii(2058,55153
ZM_snf_no_divide(2063,55357
ZM_snfall_i(2087,55887
ZM_snfall(2268,60209
ZM_snf(2270,60282
smith(2273,60342
smithall(2279,60477
ZM_snfclean(2289,60680
smithclean(2307,61147
gsnf_no_divide(2375,62863
RgM_hnfall(2406,63660
gsmithall_i(2460,64805
matsnf0(2540,67076
matsnf0(2540,67076
gsmith(2552,67402
gsmithall(2555,67450
ZM_snf_group(2563,67823

/home/mengxue/pari/src/basemath/map.c,803
#define tvalue(17,611
#define tleft(18,645
#define tright(19,681
treesearch(22,729
treeparent_r(40,1075
treeparent(55,1439
treekeys_r(62,1564
treekeys(71,1797
treekeys_i_r(83,1994
treekeys_i(92,2224
treemat_r(104,2425
treemat(115,2667
treemat_i_r(129,2909
treemat_i(140,3141
#define value(153,3375
#define left(154,3419
#define right(155,3465
#define height(156,3511
treeheight(159,3570
change_leaf(163,3637
new_leaf(171,3777
fix_height(180,3928
treebalance(185,4040
rotright(191,4148
rotleft(203,4314
treeinsert_r(215,4479
treeinsert(254,5251
treedelete_r(271,5627
treedelete(333,7068
mapput(362,7733
mapdelete(376,7982
mapget(388,8245
mapisdefined(399,8491
mapdomain(411,8730
mapdomain_shallow(419,8863
maptomat(427,9014
maptomat_shallow(435,9142
gtomap(443,9288
gtomap(443,9288

/home/mengxue/pari/src/basemath/polmodular.c,4354
#define dbg_printf(17,614
inv_level(25,817
inv_degree(44,1195
inv_height_factor(61,1401
inv_sparse_factor(78,1624
#define IQ_FILTER_1MOD3 93,1826
#define IQ_FILTER_2MOD3 94,1852
#define IQ_FILTER_1MOD4 95,1878
#define IQ_FILTER_3MOD4 96,1904
inv_pfilter(99,1943
inv_good_discriminant(116,2262
inv_odd_conductor(135,2684
inv_good_prime(145,2782
mkqfis(169,3134
Fl_addmul2(181,3374
Fl_addmul3(191,3574
Fl_addmul4(209,4060
Fl_addmul5(229,4657
zero_block(251,5281
polmodular_db_init(269,5663
  enum { DEFAULT_MODPOL_DB_LEN 272,5715
polmodular_db_add_level(287,6006
polmodular_db_add_levels(323,6755
polmodular_db_for_inv(331,6914
polmodular_db_getp(341,7164
  long L;354,7388
  long D0;355,7425
  long D1;356,7473
  long L0;357,7516
  long L1;358,7560
  long n1;359,7605
  long n2;360,7650
  long nprimes;361,7713
  long dl1;362,7767
  long dl2_0;363,7821
  long dl2_1;364,7910
  long cost;365,7958
  long bits;366,8061
  ulong *primes;primes367,8074
  ulong *traces;traces368,8091
  long inv;369,8108
} modpoly_disc_info;370,8120
modpoly_disc_info_clear(374,8155
#define MODPOLY_MAX_DCNT 380,8278
Flm_Fl_phi2_evalx(400,8757
Flm_Fl_phi3_evalx(430,9519
Flm_Fl_phi5_evalx(468,10547
Flm_Fl_polmodular_evalx(524,12333
Flm_Fl_phi2_qevalx(548,12970
#define Flx_coeffs(576,13750
#define Flx_coeff(578,13851
Flx_mgcd_linear_n_3(587,14056
Flx_gcd_linear_n_2(657,16129
Flx_remove_cubic_qroot(690,17007
fill_parallel_path(715,17756
  enum { BATCH_INVERTS 719,17852
  enum { BATCH_INVERTS = 128, E 719,17852
fill_corner(760,19028
fill_box(778,19596
enum_j_fast(799,20134
  enum { L0 803,20234
Fl_mul4(819,20612
Fl_mul5(825,20696
Fl_mul8(831,20778
Fl_mul6(837,20860
Fl_mul7(843,20956
uQ_calc(849,21038
Fle_quotient_from_kernel_generator(868,21634
find_L_tors_point(912,22975
select_curve_with_L_tors_point(938,23424
verify_L_sylow_is_cyclic(987,24738
  enum { N_RETRIES 992,24911
find_noniso_L_isogenous_curve(1010,25203
compute_L_isogenous_curve(1049,26392
get_Lsqr_cycle(1077,27135
update_Lsqr_cycle(1096,27564
oneroot_of_classpoly(1110,27841
enum_volcano_surface(1138,28564
enum_floor_curves(1148,28840
carray_isin(1187,29990
carray_reverse_inplace(1196,30113
append_neighbours(1205,30260
roots_to_coeffs(1214,30544
vecsmall_pick(1233,31004
root_matrix(1245,31314
interpolate_coeffs(1284,32499
Flv_lastnonzero(1300,32853
inflate_polys(1318,33269
safe_abs_sqrt(1344,33901
eighth_root(1355,34092
modfn_root(1368,34322
modfn_preimage(1401,35038
Flv_powu_inplace_pre(1424,35549
normalise_coeffs(1432,35702
polmodular_split_p_Flm(1467,36709
norm_eqn_init(1539,38947
norm_eqn_update(1548,39066
Flv_deriv_pre_inplace(1571,39474
eval_modpoly_modp(1582,39788
vne_to_ne(1604,40533
ne_to_vne(1611,40619
vinfo_to_dinfo(1617,40697
dinfo_to_vinfo(1635,41111
polmodular_worker(1643,41356
polmodular_worker(1643,41356
#define MAX_INTERNAL_MODPOLY_LEVEL 1663,42026
sympol_to_ZM(1668,42126
simple_find_disc(1682,42434
pick_primes_no_pcp(1720,43471
Flv_modfn_roots(1750,44299
polmodular0_generic_ZM(1758,44448
polmodular0_ZM(1834,46363
polmodular_ZM(1925,49033
polmodular_ZXX(1947,49502
FpV_deriv(1961,49814
Fp_polmodular_evalx(1972,50030
polmodular(2004,50964
phi2_ZV(2073,52746
phi3_ZV(2111,53680
phi5_ZV(2131,54208
phi5_f_ZV(2163,55718
typedef GEN (*phi_fn)phi_fn2171,55849
bad_level(2174,55890
static const phi_fn INTERNAL_MODPOLY_DB[INTERNAL_MODPOLY_DB2179,55928
polmodular_small_ZM(2189,56303
#define MODPOLY_USE_L1 2223,56973
#define MODPOLY_NO_MAX_L1 2226,57125
#define MODPOLY_NO_AUX_L 2229,57260
modpoly_height_bound(2232,57303
#define SMOOTH_PRIMES 2274,58651
#define MAX_ATKIN 2277,58702
static const long PRIMES[PRIMES2280,58773
#define MAX_L1 2289,59119
  ulong m;2292,59161
  long D,2293,59172
  long D, h;2293,59172
} D_entry;2294,59185
qform_primeform2(2300,59415
#define divides(2335,60368
discrete_log(2340,60510
primeform_discrete_log(2351,60717
select_L0(2377,61267
primeform_exp_order(2412,62050
eql_elt(2422,62265
orientation_ambiguity(2432,62597
check_generators(2475,63828
#define MAX_VOLCANO_FLOOR_SIZE 2509,64802
calc_primes_for_discriminants(2512,64856
modpoly_pickD(2592,67363
modpoly_pickD_primes(2958,80110
_qsort_cmp(3097,84324
scanD0(3141,85429
discriminant_with_classno_at_least(3257,88533
  enum { SMALL_L_BOUND 3260,88631

/home/mengxue/pari/src/basemath/arith1.c,6162
remove2(29,1402
u_remove2(31,1480
odd_prime_divisors(33,1528
u_odd_prime_divisors(35,1606
is_gener_expo(39,1823
u_is_gener_expo(54,2097
is_gener_Fl(71,2369
pgener_Fl_local(84,2615
pgener_Fl(102,2977
is_gener_Fp(107,3134
pgener_Fp_local(121,3474
pgener_Fp(140,3899
pgener_Zl(143,3960
pgener_Zp(167,4563
gener_Zp(182,4919
znprimroot(205,5391
rootsof1_Fp(235,6132
rootsof1u_Fp(245,6397
rootsof1_Fl(255,6679
znstar(265,6927
Z_factor_listP(377,10334
istotient_i(399,10823
istotient(449,11900
logint(479,12793
logint0(529,14067
logint0(529,14067
sqrtint(559,14956
carremod(577,15581
uissquareall(597,16352
uissquare(608,16542
Z_issquareall(620,16684
Zp_issquare(646,17227
polissquareall(659,17470
Up_ispower(724,19237
handle_pe(742,19681
Zn_ispower(759,20086
issquareall(861,22301
issquareall(861,22301
issquare(899,23266
GEN gissquare(950,24328
GEN gissquareall(951,24387
ispolygonal(954,24470
polispower(1000,26077
Z_ispowerall(1039,26872
Fp_ispower(1062,27472
U2_issquare(1079,27891
Up_issquare(1088,28094
Zn_issquare(1092,28199
ispower(1110,28632
gisanypower(1176,30395
split_exponent(1223,31651
Z_isanypower_nosmalldiv(1245,32014
static ulong tinyprimes[tinyprimes1306,34034
Z_isanypower_aux(1314,34348
Z_isanypower(1389,35961
Z_ispow2(1423,36783
isprimepower_i(1442,37086
isprimepower(1480,37843
ispseudoprimepower(1482,37912
uisprimepower(1485,37988
ome(1569,40382
gome(1580,40526
eps(1585,40649
krouu_s(1597,40841
kronecker(1615,41121
krois(1669,42282
kroiu(1692,42655
krouodd(1703,42917
krosi(1720,43257
kroui(1742,43683
kross(1763,44024
krouu(1787,44404
mphilbertoo(1803,44984
hilbertii(1811,45121
err_prec(1839,45802
err_p(1841,45859
err_oo(1843,45929
lift_intmod(1849,46192
lift_padic(1875,46766
hilbert(1886,47024
Fl_2gener_pre_all(1935,48581
Fl_sqrt_i(1959,49171
Fl_sqrt(1996,50246
Fl_sqrt_pre(2003,50347
Fl_lgener_pre_all(2009,50441
Fl_sqrtl_i(2030,50894
Fl_sqrtl_pre(2069,51759
Fl_sqrtl(2075,51860
sqrt_Cipolla_sqr(2093,52583
sqrt_Cipolla_msqr(2104,52918
sqrt_Cipolla(2117,53378
#define sqrmod(2151,54175
Fp_sqrt(2155,54290
lcmii(2245,57005
chinese1(2283,58344
chinese(2286,58406
Z_chinese_pre(2357,60301
Z_chinese_post(2369,60707
Z_chinese(2382,60989
Z_chinese_all(2389,61166
Z_chinese_coprime(2398,61406
chinese1_coprime_Z_aux(2407,61629
chinese1_coprime_Z(2418,61935
ZV_producttree(2428,62407
Z_ZV_mod_tree(2460,63154
ZV_polint_tree(2511,64243
ZV_polint_center_tree(2559,65615
ncV_polint_center_tree(2567,65797
nmV_polint_center_tree_worker(2583,66166
nmV_polint_center_tree_worker(2583,66166
nmV_polint_center_tree(2589,66301
Z_ZV_mod(2620,67143
Z_nv_mod(2628,67283
ZX_nv_mod_tree(2634,67342
ZV_sqr(2655,67779
ZT_sqr(2667,67999
ZV_invdivexact(2681,68205
ZV_chinesetree(2700,68608
gc_chinese(2708,68784
ZV_chinese_tree(2722,69008
ZV_chinese(2731,69197
ncV_chinese_center(2741,69403
nmV_chinese_center(2752,69674
Fl_powu_pre(2769,70309
Fl_powu(2788,70668
Fl_powers_pre(2811,71168
Fl_powers(2828,71594
Fp_invmBarrett(2843,72185
Fp_rem_mBarrett(2852,72380
init_montdata(2872,73129
typedef struct muldata 2874,73195
  GEN N;2875,73220
  GEN iM;2876,73229
  ulong inv,2877,73239
  ulong inv, s;2877,73239
  GEN (*res)res2878,73255
  GEN (*mul2)mul22879,73291
} muldata;2880,73328
_montred(2884,73378
_remii(2890,73464
_remiibar(2893,73529
_muli2red(2905,73781
_muli2montred(2911,73897
_mul(2919,74053
_sqr(2925,74163
_m2sqr(2931,74263
Fp_select_red(2938,74379
Fp_powu(2966,74957
Fp_pows(3008,75924
Fp_pow(3025,76239
_Fp_mul(3101,78119
_Fp_sqr(3104,78193
_Fp_one(3107,78258
Fp_powers(3110,78308
_Fp_pow(3118,78515
_Fp_rand(3121,78589
static const struct bb_group Fp_star=3125,78710
_Fp_red(3129,78862
_Fp_add(3132,78928
_Fp_neg(3135,79004
_Fp_rmul(3138,79070
_Fp_inv(3141,79147
_Fp_equal0(3144,79212
_Fp_s(3147,79266
static const struct bb_field Fp_field=3149,79320
const struct bb_field *get_Fp_field(get_Fp_field3152,79461
Fl_order(3163,79920
Fp_order(3186,80401
Fp_factored_order(3195,80636
Zp_order(3200,80793
znorder(3224,81302
order(3254,81960
Fp_log_halfgcd(3262,82374
Fp_log_find_rel(3278,82827
struct Fp_log_rel3289,83025
  GEN rel;3291,83045
  long *sieve;sieve3292,83056
  ulong prmax;3293,83071
  long nbrel,3294,83086
  long nbrel, nbmax;3294,83086
addifsmooth1(3299,83137
addifsmooth2(3316,83541
Fp_log_sieve_h(3341,84114
_psi(3373,84946
opt_param(3383,85120
check_kernel(3389,85224
Fp_log_find_ind(3418,85980
Fp_log_index(3441,86475
Fp_log_use_index(3506,88307
Fp_easylog(3513,88471
Fp_log(3537,89196
znlog_rec(3552,89710
get_PHI(3625,91889
znlog(3642,92187
Fp_sqrtn(3682,93163
isfundamental(3705,93886
uposisfundamental(3712,94025
unegisfundamental(3725,94292
Z_isfundamental(3737,94537
quaddisc(3764,95089
mulu_interval(3789,95941
muls_interval(3816,96441
mpfact(3842,96938
mpfact(3842,96938
lucas(3858,97473
fibo(3872,97893
fibo(3872,97893
icopy_lg(3889,98483
Qsfcont(3901,98720
sersfcont(3962,100206
gboundcf(3979,100526
sfcont2(4023,101544
gcf(4067,102392
gcf2(4069,102433
contfrac0(4071,102485
contfrac0(4071,102485
contfracpnqn(4084,102791
pnqn(4141,104185
ZV_allpnqn(4145,104318
mod_to_frac(4165,104841
mod_to_rfrac(4184,105211
bestappr_frac(4208,105757
bestappr_real_max(4248,106981
bestappr_real(4274,107774
bestappr_Q(4316,108965
bestappr_ser(4363,110220
bestappr_RgX(4394,111052
bestappr(4438,112198
bestapprPade(4460,112663
get_quad(4475,113189
update_f(4483,113366
quadunit(4496,113603
quadregulator(4538,114535
int qfi_equal1(4591,116009
static GEN qfi_pow(4593,116062
static GEN qfi_comp(4595,116149
static const struct bb_group qfi_group=4597,116240
qfi_order(4601,116388
qfi_log(4607,116465
qfi_Shanks(4613,116551
qfbclassno0(4637,116926
qfbclassno0(4637,116926
find_order(4650,117219
ok_q(4657,117368
split_lcm(4674,117741
update_g1(4702,118339
corediscfact(4713,118741
conductor_part(4732,119165
two_rank(4770,119998
sqr_primeform(4786,120253
get_forms(4789,120418
Shanks_order(4822,121337
equal1(4832,121621
relative_order(4838,121857
classno(4880,122763
classno2(4971,125522
hclassno2(5033,127319
hclassno(5065,127968
hclassno(5065,127968
myh(5109,129108
geomsum(5119,129314
Hspec(5131,129575
tauprime(5155,130085
ramanujantau(5184,130941

/home/mengxue/pari/src/basemath/base3.c,3297
get_tab(29,1395
_mulii(37,1579
tablemul_ei_ej(43,1689
tablemul_ei(54,2017
zk_ei_mul(79,2597
ei_multable(103,3066
zk_multable(114,3249
multable(123,3440
zk_scalar_or_multable(139,3862
nftrace(148,4059
nftrace(148,4059
rnfelttrace(158,4317
famat_norm(170,4618
nfnorm(180,4854
nfnorm(180,4854
rnfeltnorm(192,5148
nfadd(204,5423
nfadd(204,5423
nfmul(227,5901
nfmul(227,5901
nfsqr(261,6579
nfC_nf_mul(284,6951
mulbytab(326,7864
tablemulvec(329,7962
nfinv(356,8481
nfdiv(373,8804
nfdiv(373,8804
nfmuli(400,9434
nfsqri(444,10427
tablemul(483,11259
tablesqr(521,12083
_mul(561,12871
_sqr(563,12947
nfpow(567,13060
nfpow(567,13060
nfpow_u(590,13776
  GEN nf,607,14271
  GEN nf, p;607,14271
  long I;608,14284
} eltmod_muldata;609,14294
sqr_mod(612,14324
ei_msqr_mod(618,14453
pow_ei_mod_p(627,14696
ZC_nfvalrem(648,15238
ZC_nfval(668,15773
ZC_prdvd(673,15907
pr_equal(686,16233
nfval(698,16587
powp(720,17123
nfvalrem(733,17398
gpnfvalrem(766,18147
gpnfvalrem(766,18147
coltoalg(773,18273
basistoalg(779,18364
basistoalg(779,18364
nf_to_scalar_or_basis(815,19190
RgX_to_nfX(846,20126
nf_to_scalar_or_alg(856,20331
mulmat_pol(886,21141
poltobasis(900,21538
algtobasis(909,21749
algtobasis(909,21749
rnfbasistoalg(946,22555
matbasistoalg(991,23648
matalgtobasis(1016,24151
RgM_to_nfM(1040,24653
RgC_to_nfC(1056,24960
polmod_nffix(1066,25192
polmod_nffix2(1069,25325
rnfalgtobasis(1088,25711
nfdiveuc(1124,26678
nfdiveuc(1124,26678
nfmod(1134,26888
nfmod(1134,26888
nfdivrem(1144,27144
nfdivrem(1144,27144
eval_sign(1162,27826
nfembed_i(1173,28155
nfembed(1183,28356
nfispositive(1195,28666
vecsmall01_to_indices(1216,29094
vec01_to_indices(1226,29316
indices_to_vec01(1245,29682
nfsign_arch(1255,29886
nfsign(1292,30938
set_sign_mod_divisor(1308,31349
nfinvmodideal(1328,31925
nfsqrmodideal(1343,32334
nfmulmodideal(1347,32424
nfpowmodideal(1352,32567
elt_mulpow_modideal(1374,33057
famat_to_nf_modideal_coprime(1382,33301
zidealij(1432,34755
Fq_FpXQ_log(1451,35212
nf_log(1459,35423
detcyc(1471,35813
makeprimetoideal(1492,36313
makeprimetoidealvec(1509,36651
zprimestar(1527,37308
increment(1598,39178
archstar_full_rk(1611,39356
nfarchstar(1657,40700
apply_U(1690,41461
zlog_pk(1707,41841
zlog_add_sign(1734,42611
famat_zlog(1745,42852
get_index(1783,43979
init_zlog(1799,44276
init_zlog_bid(1810,44490
zlog_ind(1821,44898
zlog(1851,45559
log_gen_pr(1857,45811
log_gen_arch(1895,46773
add_grp(1904,46986
RgV_is_prV(1926,47454
is_nf_factor(1935,47586
Idealstar(1944,47812
principal_units(2064,50957
log_prk(2097,51735
idealprincipalunits(2120,52327
zidealstarinitgen(2156,53384
zidealstarinit(2159,53473
zidealstar(2162,53552
idealstar0(2166,53627
idealstar0(2166,53627
check_nfelt(2179,53927
vecmodii(2200,54319
ideallog_sgn(2212,54678
ideallog(2256,55603
join_bid(2267,56218
typedef struct _ideal_data 2330,58171
  GEN nf,2331,58200
  GEN nf, emb,2331,58200
  GEN nf, emb, L,2331,58200
  GEN nf, emb, L, pr,2331,58200
  GEN nf, emb, L, pr, prL,2331,58200
  GEN nf, emb, L, pr, prL, arch,2331,58200
  GEN nf, emb, L, pr, prL, arch, sgnU;2331,58200
} ideal_data;2332,58239
concat_join(2336,58303
join_idealinit(2348,58629
join_ideal(2352,58718
join_unit(2356,58816
zlog_units(2362,58969
zlog_units_noarch(2373,59284
zlog_unitsarch(2384,59576
Ideallist(2396,59936
ideallist0(2476,62255
ideallist0(2476,62255
ideallist(2481,62393
join_bid_arch(2486,62619
join_arch(2512,63332
join_archunit(2516,63422
ideallistarch(2524,63665

/home/mengxue/pari/src/basemath/buch1.c,1680
#define HASHBITS 25,1224
static const long HASHT 26,1244
hash(29,1299
#undef HASHBITS30,1362
#define RANDOM_BITS 35,1513
static const long CBUCH 36,1535
struct buch_quad38,1583
  ulong limhash;40,1602
  long KC,41,1619
  long KC, KC2,41,1619
  long KC, KC2, PRECREG;41,1619
  long *primfact,primfact42,1644
  long *primfact, *exprimfact,exprimfact42,1644
  long *primfact, *exprimfact, **hashtab;hashtab42,1644
  GEN FB,43,1686
  GEN FB, numFB;43,1686
  GEN powsubFB,44,1703
  GEN powsubFB, vperm,44,1703
  GEN powsubFB, vperm, subFB,44,1703
  GEN powsubFB, vperm, subFB, badprim;44,1703
  struct qfr_data *QFR;QFR45,1742
qfr3_canon(55,2204
qfr3_canon_safe(66,2417
qfr5_canon(77,2643
QFR5_comp(88,2856
QFR3_comp(91,2954
qfr5_rho_pow(96,3077
qfr5_pf(113,3380
qfr3_pf(120,3532
#define qfi_pf 126,3644
init_form(130,3723
qfr5_factorback(144,4014
QFI_comp(147,4112
qfi_factorback(150,4201
random_form(153,4297
qfr3_random(167,4598
qfi_random(169,4691
check_LIMC(177,5128
isless_iu(192,5483
factorquad(198,5593
largeprime(248,6821
clearhash(273,7466
GRH_last_prime(288,7708
GRH_ensure(291,7841
cache_prime_quad(302,8162
compute_invresquad(324,8692
is_bad(350,9357
nthidealquad(366,9660
quadGRHchk(378,9911
FBquad(415,10766
subFBquad(456,11693
powsubFBquad(487,12470
sub_fact(517,13167
add_fact(530,13435
get_clgp(544,13703
trivial_relations(581,14608
dbg_all(597,14946
imag_relations(606,15138
imag_be_honest(676,16996
real_relations(698,17471
real_be_honest(856,21962
gcdreal(881,22587
get_R(906,23118
quad_be_honest(933,23688
Buchquad(946,23990
buchimag(1147,29997
buchreal(1151,30106
quadclassunit0(1157,30297
quadclassunit0(1157,30297

/home/mengxue/pari/src/basemath/FF.c,2178
_getFF(24,1012
_initFF(32,1114
_checkFF(39,1220
_mkFF(43,1318
_mkFF_i(53,1456
mkFF_i(63,1582
FF_samefield(71,1724
FF_equal(78,1868
FF_equal0(82,1959
FF_equal1(88,2014
Fp_cmp_1(101,2201
FF_equalm1(109,2312
FF_zero(124,2555
FF_1(143,2813
FF_q(162,3066
FF_p(181,3323
FF_p_i(187,3370
FF_mod(193,3412
FF_f(207,3600
FF_to_F2xq(219,3735
FF_to_F2xq_i(233,3927
FF_to_Flxq(247,4112
FF_to_Flxq_i(261,4319
FF_to_FpXQ(275,4519
FF_to_FpXQ_i(289,4710
FF_add(303,4894
FF_sub(322,5217
FF_Z_add(342,5541
FF_Q_add(364,5940
FF_neg(386,6350
FF_neg_i(405,6625
FF_mul(424,6889
FF_Z_mul(447,7278
FF_Z_Z_muldiv(466,7666
FF_sqr(486,8149
FF_mul2n(508,8483
FF_inv(538,9113
FF_div(558,9427
Z_FF_div(579,9830
FF_sqrtn(600,10304
FF_sqrt(626,10774
FF_issquare(646,11105
FF_issquareall(663,11375
FF_ispower(670,11485
FF_pow(697,12025
FF_norm(716,12340
FF_trace(733,12600
FF_conjvec(750,12869
FF_charpoly(776,13310
FF_minpoly(795,13750
FF_log(814,14185
FF_order(839,14729
FF_primroot(864,15219
to_FFE(883,15510
to_FFE_vec(892,15653
FpXQ_ell_to_a4a6(900,15785
F3xq_ell_to_a4a6(914,16256
Flxq_ell_to_a4a6(935,16923
F2xq_ell_to_a4a6(950,17430
FqV_to_FpXQV(984,18486
FF_ellcard(1000,18772
FF_ellgroup(1020,19172
FF_ellgens(1043,19644
FF_elldata(1069,20219
FF_ellinit(1087,20516
FF_elltwist(1125,21438
F3x_equalm1(1154,22326
FF_ellrandom(1158,22388
FF_ellmul(1200,23662
FF_ellorder(1229,24476
FF_elllog(1255,25132
FF_ellweilpairing(1284,25998
FF_elltatepairing(1314,26924
to_FF(1344,27857
to_FFX(1366,28292
to_FFC(1375,28483
raw_to_FFC(1384,28625
raw_to_FFM(1393,28772
to_FF_fact(1404,29089
FFX_init_fix_varn(1425,29631
FFX_factor(1452,30044
FFX_roots(1465,30300
ffgen(1476,30473
p_to_FF(1542,31912
Tp_to_FF(1577,32446
fforder(1616,33040
ffprimroot(1623,33146
fflog(1630,33262
ffrandom(1638,33420
Rg_is_FF(1657,33742
RgC_is_FFC(1672,33934
RgM_is_FFM(1681,34084
FFC_to_raw(1690,34243
FFM_to_raw(1700,34386
FqC_to_FpXQC(1710,34536
FqM_to_FpXQM(1720,34708
FFM_wrap(1730,34882
FFM_ker(1747,35328
FFM_image(1750,35414
FFM_inv(1753,35508
FFM_rank(1756,35595
FFM_det(1772,35906
FFM_FFC_mul(1788,36226
FFM_mul(1806,36618

/home/mengxue/pari/src/basemath/modsym.c,4664
p1_size(34,1180
p1N_get_N(36,1241
p1N_get_hash(38,1297
p1N_get_fa(40,1353
p1N_get_div(42,1407
get_ms(46,1520
ms_get_p1N(48,1581
ms_get_N(50,1647
ms_get_hashcusps(52,1711
ms_get_section(54,1783
ms_get_genindex(56,1853
ms_get_nbgen(58,1924
ms_get_nbE1(60,1993
msk_get_dim(68,2128
msk_get_basis(70,2186
msk_get_weight(72,2244
msk_get_st(74,2305
msk_get_link(76,2359
msk_get_invphiblock(78,2415
msk_get_sign(80,2479
msk_get_star(86,2577
msk_get_starproj(88,2633
checkms(91,2688
Q_log_init(101,2861
count_Manin_symbols(120,3246
generatemsymbols(130,3519
hash2(171,4654
inithashmsymbols(176,4892
inithashmsymbols(192,5227
SL2_inv(212,5712
sl2_inv(219,5900
mat2(226,6089
path_to_zm(232,6312
mkpath(241,6536
cc(243,6616
dd(245,6673
gamma_equiv(250,6832
gamma_equiv_matrix(262,7183
create_p1mod(281,7762
lcmuu(292,8086
Fl_inverse(295,8241
p1_std_form(318,9121
p1_index(339,9699
nbcusp(361,10167
inithashcusps(383,10711
cusp_std_form(411,11478
cusp_index(425,11859
ZM_inv_denom(437,12136
ZC_apply_dinv(446,12372
Qevproj_init(469,12854
Qevproj_init0(481,13144
Qevproj_apply(501,13576
Qevproj_apply_vecei(508,13792
Q_primpart_basis(517,14052
ZM_ker(525,14204
QM_ker(527,14267
QM_image(529,14326
cmp_dim(536,14427
mssplit_i(548,14666
mssplit(633,16707
msqexpansion_i(645,17009
msqexpansion(734,19360
Qevproj_star(743,19533
msnew_trivial(757,19829
msnew_i(787,20597
msnew(832,21877
Shift_left_cusp(853,22738
Shift_right_cusp(856,22892
Shift_left(860,23117
Shift_right(867,23379
typedef struct list_t 874,23531
typedef struct list_t { GEN data;874,23531
typedef struct list_t { GEN data; struct list_t *next;next874,23531
typedef struct list_t { GEN data; struct list_t *next; } list_t;874,23531
list_new(876,23612
list_insert(883,23740
enum { type_X,910,25089
enum { type_X, type_DO 910,25089
enum { type_X, type_DO /* ? */, type_T 910,25089
form_list_of_cusps(912,25142
Gamma0N_decompose(999,28194
path_Gamma0N_decompose(1023,28832
set_insert(1064,30595
hash_to_vec(1068,30689
path_to_p1_index(1087,30995
typedef struct PS_sets_t 1094,31129
  hashtable *F,F1095,31156
  hashtable *F, *T2,T21095,31156
  hashtable *F, *T2, *T31,T311095,31156
  hashtable *F, *T2, *T31, *T32,T321095,31156
  hashtable *F, *T2, *T31, *T32, *E1,E11095,31156
  hashtable *F, *T2, *T31, *T32, *E1, *E2;E21095,31156
  GEN E2_in_terms_of_E1,1096,31199
  GEN E2_in_terms_of_E1, stdE1;1096,31199
} PS_sets_t;1097,31231
set_init(1100,31264
insert_E(1104,31415
cusp_infinity(1132,32200
form_E_F_T(1135,32258
ZGl2Q_star(1214,34533
ZGl2QC_star(1230,34824
paths_decompose(1244,35286
fill_W2_W12(1259,35669
reverse_list(1277,36238
F_indices(1291,36566
F_indices_oo(1311,37148
indices_oo(1334,37932
indices_forward(1348,38353
indices_backward(1361,38684
msinit_N(1376,39060
cusp_to_P1Q(1478,42230
mspathgens(1480,42304
RgX_powers(1522,43625
voo_act_Gl2Q(1533,43851
RgX_act_Gl2Q(1542,44127
RgX_act_ZGl2Q(1562,44789
ZGl2QC_to_act(1589,45391
ZGV_tors(1600,45668
set_from_index(1613,45880
treat_index(1625,46102
treat_index_trivial(1671,47281
M2_log(1710,48136
Q_log_trivial(1761,49416
M2_log_trivial(1780,49782
cusp_to_ZC(1823,50961
path_to_M2(1841,51311
mspathlog_i(1847,51539
mspathlog_i_trivial(1851,51672
mspathlog(1855,51759
mspathlog_trivial(1873,52108
cusp_mul(1885,52312
path_mul(1893,52521
Gl2Q_act_path(1901,52733
init_act_trivial(1905,52856
getMorphism_trivial(1911,53092
init_dual_act(1942,54214
dual_act(1970,55052
getMorphism_basis(1993,55567
ZGl2Q_act_s(2044,57095
checksymbol(2076,57686
msissymbol(2116,58556
eval_phii_Gj(2145,59106
checkdec(2156,59421
getMorphism(2178,59964
Tp_matrices(2206,60665
Up_matrices(2215,60842
msendo(2223,60988
endo_project(2229,61139
mshecke_i(2238,61322
mshecke(2244,61437
msatkinlehner_i(2257,61706
msatkinlehner(2269,62099
msstar_i(2286,62482
msstar(2292,62554
iscuspeq(2306,62817
mscuspidal_trivial(2321,63176
get_Ec_r(2346,63812
Eisenstein_symbol(2361,64338
EC_subspace_trivial(2386,65018
mseisenstein_trivial(2405,65548
mseisenstein_i(2411,65646
mseisenstein(2424,65969
TpS_char_bound(2434,66214
mscuspidal_i(2441,66369
mscuspidal(2461,66957
RgMV_find_non_zero_last_row(2484,67479
Delta_inv(2511,68108
doo_decompose(2520,68420
get_phi_ij(2528,68595
mskinit_trivial(2555,69346
RgMV_dim(2562,69529
mskinit_nontrivial(2569,69649
add_star(2696,74308
mskinit(2705,74518
msinit(2713,74697
Q_xpm(2732,75285
mseval_by_values(2744,75578
mseval(2762,75981
twistcurve(2825,77462
get_X(2835,77721
get_alpha_d(2855,78175
get_Q(2864,78444
ell_get_scale(2882,78949
msfromell(2907,79566

/home/mengxue/pari/src/basemath/Flxq_log.c,951
Flx_cindex(22,799
Flx_cnext(38,1097
has_deg1_auto(53,1290
smallirred_Flx_next(66,1503
smallirred_Flx(79,1734
struct Flxq_log_rel87,1880
  long nbrel;89,1902
  GEN rel;90,1916
  long nb;91,1927
  long r,92,1938
  long r, off,92,1938
  long r, off, nbmax,92,1938
  long r, off, nbmax, nbexp;92,1938
  ulong nbtest;93,1967
cindex_Flx(97,1998
factorel(112,2252
Flx_addifsmooth3(128,2583
Flx_renormalize_inplace(150,3294
Flxq_log_cubic(166,3573
Flxq_log_find_rel(199,4515
smoothness_vec(230,5454
smooth_cost(267,6236
smooth_best(282,6664
check_kernel(331,8012
Flxq_log_rec(365,8971
Flxq_log_use_index_cubic(395,9599
Flxq_log_index_cubic(407,9873
INLINE GEN Flx_frob(461,11635
rel_Coppersmith(464,11713
Flxq_log_Coppersmith(479,12321
Flxq_log_from_rel(536,13824
Flxq_log_Coppersmith_d(558,14375
Flxq_log_Coppersmith_rec(621,16198
Flxq_log_index_Coppersmith(667,17247
Flxq_log_index(702,18456
Flxq_log_use_index(711,18685

/home/mengxue/pari/src/basemath/concat.c,304
listconcat(24,1007
strconcat(67,2280
vconcat(81,2600
err_cat(104,3075
shallowconcat(107,3140
catmanyMAT(218,5727
catmanySTR(241,6161
catmany(265,6689
shallowconcat1(288,7147
concat1(328,8121
matfill(336,8295
_matsize(363,8895
shallowmatconcat(378,9230
matconcat(454,10934
concat(461,11029

/home/mengxue/pari/src/basemath/elltors.c,477
smaller_x(22,979
best_in_cycle(30,1162
tors(46,1535
torsbound(92,2595
tpoint(124,3507
t2points(141,3848
elltors_divpol(157,4116
primedec_deg1(240,6153
nftorsbound(253,6553
nfellis_divisible_by(314,8435
ellisdivisible(330,8777
tor2(404,10604
ptor0(407,10692
ptor1(410,10759
ptor2(413,10847
nfelltorsprimary(422,11236
ellnftors(531,13848
elltors(557,14804
elltors0(574,15144
ellorder_Q(583,15607
ellorder_nf(626,16927
ellorder(675,18411
orderell(709,19279

/home/mengxue/pari/src/basemath/base1.c,3311
int new_galois_format 22,939
checkrnf_i(25,971
checkrnf(29,1042
checkbnf_i(33,1122
checknf_i(45,1293
checkbnf(59,1580
checknf(67,1712
checkbnr(75,1838
checkbnrgen(83,1999
checksqmat(91,2153
checkbid_i(98,2306
checkbid(107,2478
checkabgrp(112,2560
checknfelt_mod(126,2852
check_ZKmodule(134,3034
get_bnf(143,3300
get_nf(180,4327
nftyp(223,5598
transroot(263,6868
tschirnhaus(267,6961
tschirnhaus(267,6961
ZX_Z_normalize(294,7833
ZX_primitive_to_monic(339,9129
ZX_Q_normalize(397,10592
ZX_to_monic(408,10981
F4(418,11241
roots_to_ZX(426,11417
polgaloisnames(436,11588
galois_res(456,12453
polgalois(478,12815
#undef _res721,21492
nfpoleval(725,21572
QX_table_nfpoleval(738,21853
FpX_FpC_nfpoleval(753,22229
table_galoisapply(771,22659
ZC_galoisapply(780,22887
QX_galoisapplymod(788,23093
pr_galoisapply(805,23531
vecgaloisapply(817,23877
elt_galoisapply(828,24167
galoisapply(853,24804
galoisapply(853,24804
nfgaloismatrix(900,26062
idealquasifrob(916,26458
gal_check_pol(937,27029
idealfrobenius(941,27131
idealinertiagroup(965,27891
idealramgroupstame(990,28604
idealramgroupindex(1025,29359
idealramgroups(1072,30500
get_bnfpol(1104,31386
get_nfpol(1114,31577
tests_OK(1123,31850
nfiso0(1177,33453
nfisisom(1223,34805
nfisincl(1226,34859
get_roots(1235,35294
nf_get_allroots(1255,35678
quicktrace(1262,35843
get_Tr(1278,36092
get_bas_den(1303,36788
nf_set_multable(1321,37195
make_Tr(1358,38256
get_roots_for_M(1402,39364
make_M(1427,40034
make_G(1459,40824
make_M_G(1490,41377
remake_GM(1498,41473
nffp_init(1509,41694
get_nf_fp_compo(1521,41927
get_sign(1528,42062
nfbasic_to_nf(1531,42128
primes_certify(1576,43371
nfcertify(1596,43781
hnffromLLL(1604,43979
nfbasechange(1614,44187
nffromhnfbasis(1639,44660
nftohnfbasis(1651,44876
get_red_G(1665,45151
set_LLL_basis(1700,46160
cmp_abs_ZX(1719,46640
ZX_is_better(1723,46816
nfpolred(1738,47244
get_nfindex(1766,48035
nf_input_type(1805,49159
nfbasic_add_disc(1843,50106
nfbasic_init(1851,50297
nfinitall(1914,51688
nfinitred(1964,53245
nfinitred2(1966,53317
nfinit(1968,53397
nfinit0(1971,53465
nfinit0(1971,53465
nf_get_prec(1986,53799
nfnewprec_shallow(1994,53960
nfnewprec(2007,54184
embednorm_T2(2030,54900
real_norm(2041,55210
complex_norm(2054,55463
embed_T2(2061,55679
embed_norm(2082,56126
  long r1,2103,56539
  long r1, v,2103,56539
  long r1, v, prec;2103,56539
  GEN ZKembed;2104,56559
  GEN u;2105,56624
  GEN M;2106,56683
  GEN bound;2107,56743
  long expo_best_disc;2108,56800
} CG_data;2109,56866
get_pol(2113,56941
get_polchar(2122,57135
ZX_canon_neg(2131,57547
try_polmin(2150,58062
chk_gen(2183,58958
chk_gen_prec(2196,59295
remove_duplicates(2203,59574
polred_init(2231,60086
findmindisc(2251,60665
filter(2266,61083
polred_aux(2294,61590
Polred(2364,63457
polredbest_aux(2376,63895
polredbest(2409,64619
polred0(2431,65213
polred0(2431,65213
polredord(2440,65368
polred(2473,66269
smallpolred(2475,66318
factoredpolred(2477,66385
polred2(2479,66448
smallpolred2(2481,66504
factoredpolred2(2483,66580
set_mulid(2492,67075
ZM_image_shallow(2508,67468
chk_gen_init(2522,67791
store(2648,71829
polredabs_aux(2676,72504
polredabs0(2705,73150
polredabs0(2705,73150
polredabsall(2748,74163
polredabs(2750,74239
polredabs2(2752,74288
rnfpolred_i(2758,74519
rnfpolredabs(2836,76748
rnfpolredbest(2839,76839

/home/mengxue/pari/src/basemath/galconj.c,3673
static int is2sparse(22,999
galoisconj1(33,1165
galoisconj2pol(69,1963
galoisconj2(111,3150
struct galois_borne 163,4816
  GEN  l;164,4838
  long valsol;165,4848
  long valabs;166,4863
  GEN  bornesol;167,4878
  GEN  ladicsol;168,4895
  GEN  ladicabs;169,4912
struct galois_lift 171,4932
  GEN  T;172,4953
  GEN  den;173,4963
  GEN  p;174,4975
  GEN  L;175,4985
  GEN  Lden;176,4995
  long e;177,5008
  GEN  Q;178,5018
  GEN  TQ;179,5028
  struct galois_borne *gb;gb180,5039
struct galois_testlift 182,5069
  long n;183,5094
  long f;184,5104
  long g;185,5114
  GEN  bezoutcoeff;186,5124
  GEN  pauto;187,5144
  GEN  C;188,5158
  GEN  Cd;189,5168
struct galois_test 191,5182
  GEN order;192,5235
  GEN borne,193,5291
  GEN borne, lborne;193,5291
  GEN ladic;194,5337
  GEN PV;195,5350
  GEN TM;196,5408
  GEN L;197,5439
  GEN M;198,5484
enum ga_code 201,5569
enum ga_code {ga_all_normal=ga_all_normal201,5569
enum ga_code {ga_all_normal=1,ga_ext_2=201,5569
enum ga_code {ga_all_normal=1,ga_ext_2=2,ga_non_wss=201,5569
struct galois_analysis 202,5625
  long p;203,5650
  long deg;204,5685
  long ord;205,5722
  long l;206,5734
  long p4;207,5801
  enum ga_code group;208,5812
struct galois_frobenius 210,5837
  long p;211,5863
  long fp;212,5873
  long deg;213,5884
  GEN Tmod;214,5896
  GEN psi;215,5908
vandermondeinverseprep(219,5927
vandermondeinverse(238,6349
embed_roots(255,6765
embed_disc(275,7132
initgaloisborne(319,8223
matrixnorm(352,9082
galoisborne(369,9402
makeLden(405,10725
initlift(410,10875
poltopermtest(431,11378
struct monoratlift456,12062
  struct galois_lift *gl;gl458,12083
  GEN frob;459,12109
  long early;460,12121
monoratlift(464,12150
monomorphismratlift(492,12970
automorphismlift(513,13592
galoisdolift(519,13716
inittestlift(528,13929
intheadlong(553,14925
vecheadlong(560,15075
matheadlong(568,15232
polheadlong(576,15388
#define headlongisint(581,15483
frobeniusliftall(584,15549
Vmatrix(682,18761
inittest(691,18979
freetest(711,19500
padicisint(721,19775
galois_test_perm(732,20104
muldiv(770,21078
testpermutation(783,21507
listznstarelts(899,25066
sympol_eval_newtonsum(930,25941
sympol_eval(945,26283
sympol_aut_evalmod(959,26693
fixedfieldfactmod(981,27433
fixedfieldsurmer(994,27662
sympol_is1to1_lg(1020,28458
fixedfieldsympol(1038,28956
fixedfieldorbits(1063,29835
fixedfieldinclusion(1072,30001
vandermondeinversemod(1086,30307
vectopol(1109,30882
permtopol(1121,31243
galoisgrouptopol(1128,31451
notgalois(1141,31766
init_group(1150,31975
improves(1173,32721
galoisanalysis(1185,33018
a4galoisgen(1303,36807
s4makelift(1507,42595
s4test(1516,42842
aux(1546,43809
s4releveauto(1554,44029
lincomb(1568,44492
s4galoisgen(1576,44750
galoisfindgroups(1742,50077
galoisfrobeniustest(1760,50499
galoismakepsi(1772,50816
galoisfrobeniuslift(1781,50989
galoisfindfrobenius(1873,53869
get_image(1925,55630
galoisgenfixedfield(1941,56093
stpow(2008,57917
wpow(2018,58050
galoisgenliftauto(2034,58329
galoisgen(2097,60339
conjcyclo(2174,63073
galoisconj4_main(2192,63581
numberofconjugates(2267,65931
galoisconj4(2310,67045
galoisconj(2323,67369
galoisconj0(2332,67547
galoisconj0(2332,67547
checkgal(2348,68088
galoisinit(2356,68282
galoispermtopol_i(2363,68404
galoispermtopol(2391,69117
galoiscosets(2402,69341
fixedfieldfactor(2419,69710
chk_perm(2447,70650
is_group(2454,70786
galoisfixedfield(2461,70906
galois_group(2524,72734
checkgroup(2527,72819
galoisisabelian(2535,72967
galoisisnormal(2551,73379
galoissubgroups(2561,73572
galoissubfields(2569,73707
galoisexport(2580,73968
galoisidentify(2588,74117

/home/mengxue/pari/src/mt/single.h,95
#define MT_IS_THREAD 14,573
#define MT_SIGINT_BLOCK(15,596
#define MT_SIGINT_UNBLOCK(16,627

/home/mengxue/pari/src/mt/mpi.c,1432
static THREAD int pari_MPI_size,18,646
static THREAD int pari_MPI_size, pari_MPI_rank;18,646
static THREAD long nbreq 19,694
enum PMPI_cmd 21,725
enum PMPI_cmd { PMPI_close,21,725
enum PMPI_cmd { PMPI_close, PMPI_worker,21,725
enum PMPI_cmd { PMPI_close, PMPI_worker, PMPI_work,21,725
enum PMPI_cmd { PMPI_close, PMPI_worker, PMPI_work, PMPI_parisizemax,21,725
                PMPI_parisize,22,795
                PMPI_parisize, PMPI_precreal,22,795
                PMPI_parisize, PMPI_precreal, PMPI_eval 22,795
struct mt_mstate24,855
  long n;26,874
  int source;27,884
  long nbint;28,898
  long *workid;workid29,912
static struct mt_mstate pari_mt_data;32,932
static struct mt_mstate *pari_mt;pari_mt33,970
send_long(36,1017
send_request(42,1117
send_GEN(48,1209
send_request_GEN(60,1504
send_request_long(67,1628
recvfrom_long(74,1755
recvfrom_request(82,1898
recvstatus_buf(88,1990
recvstatus_GEN(101,2272
recvstatus_void(110,2473
recvfrom_GEN(117,2598
recvany_GEN(125,2742
recvany_void(134,2946
static jmp_buf child_env;142,3133
pari_MPI_child(145,3172
mt_err_recover(194,4211
void mt_sigint_block(198,4283
void mt_sigint_unblock(199,4314
void mt_sigint(200,4347
mt_is_parallel(203,4376
mt_is_thread(209,4426
mt_broadcast(215,4479
pari_mt_init(224,4634
pari_mt_close(244,5042
mtmpi_queue_get(255,5234
mtmpi_queue_submit(275,5724
mt_queue_reset(287,6024
mt_queue_start(298,6275

/home/mengxue/pari/src/mt/single.c,276
void mt_sigint_block(17,629
void mt_sigint_unblock(18,660
void mt_err_recover(19,693
void pari_mt_close(20,736
void mt_queue_reset(21,765
void mt_broadcast(22,795
mt_sigint(25,844
mt_is_parallel(28,868
mt_is_thread(34,910
pari_mt_init(40,951
mt_queue_start(46,1005

/home/mengxue/pari/src/mt/pthread.h,95
#define MT_IS_THREAD 14,573
#define MT_SIGINT_BLOCK(15,622
#define MT_SIGINT_UNBLOCK(16,701

/home/mengxue/pari/src/mt/pthread.c,1090
struct mt_queue18,650
  long no;20,668
  pari_sp avma;21,679
  GEN input,22,695
  GEN input, output;22,695
  GEN worker;23,716
  long workid;24,730
  pthread_cond_t cond;25,745
  pthread_mutex_t mut;26,768
  pthread_cond_t *pcond;pcond27,791
  pthread_mutex_t *pmut;pmut28,816
struct mt_pstate31,845
  pthread_t *th;th33,864
  struct pari_thread *pth;pth34,881
  struct mt_queue *mq;mq35,908
  long n,36,931
  long n, nbint,36,931
  long n, nbint, last;36,931
  long pending;37,954
  pthread_cond_t pcond;38,970
  pthread_mutex_t pmut;39,994
static THREAD long mt_thread_no 42,1022
static struct mt_pstate *pari_mt;pari_mt43,1060
#define LOCK(45,1095
#define UNLOCK(46,1137
mt_sigint_block(49,1195
mt_sigint_unblock(56,1307
mt_err_recover(63,1425
mt_sigint(80,1737
mt_is_parallel(86,1818
mt_is_thread(92,1868
void mt_broadcast(97,1918
void pari_mt_init(99,1962
void pari_mt_close(109,2152
mt_queue_run(112,2195
mt_queue_check(147,3014
mtpthread_queue_get(159,3189
mtpthread_queue_submit(202,4305
mt_queue_reset(233,4954
mt_queue_start(257,5474

/home/mengxue/pari/src/mt/mt.c,254
mtsingle_queue_get(20,643
mtsingle_queue_submit(29,842
mtsingle_queue_end(36,1014
mtsingle_queue_start(39,1050
mt_queue_end(49,1266
mt_queue_submit(52,1320
mt_queue_get(56,1423
mtstate_save(61,1538
mtstate_restore(67,1607
mtstate_reset(74,1707

/home/mengxue/pari/src/mt/mpi.h,95
#define MT_IS_THREAD 14,573
#define MT_SIGINT_BLOCK(15,611
#define MT_SIGINT_UNBLOCK(16,642

/home/mengxue/pari/src/graph/plotnull.c,40
rectdraw0(18,615
PARI_get_plot(27,716

/home/mengxue/pari/src/graph/plotps.c,41
rectdraw0(23,848
PARI_get_plot(47,1569

/home/mengxue/pari/src/graph/plotX.c,629
     typedef char *caddr_t;caddr_t26,1014
static Colormap PARI_Colormap;39,1196
static XColor  *PARI_Colors;PARI_Colors40,1227
struct data_x42,1257
  Display *display;display44,1273
  Window win;45,1293
  int numcolors;46,1307
  GC gc;47,1324
exiterr(52,1416
static void SetForeground(59,1547
static void DrawPoint(65,1708
static void DrawLine(71,1856
static void DrawRectangle(77,2031
static void DrawPoints(83,2208
static void DrawLines(97,2526
static void DrawString(111,2842
#define MAX_BUF 117,3033
Xerror(120,3065
IOerror(127,3223
PARI_ColorSetUp(134,3363
rectdraw0(158,3998
PARI_get_plot(282,7449

/home/mengxue/pari/src/graph/plotport.c,3001
static hashtable *rgb_colors rgb_colors27,1125
PariRect *rectgraph[rectgraph28,1162
static long current_color[current_color31,1238
PARI_plot pari_plot,33,1282
PARI_plot pari_plot, pari_psplot;33,1282
PARI_plot *pari_plot_engine pari_plot_engine34,1316
long rectpoint_itype 35,1358
const long NUMRECT 37,1406
const long RECUR_MAXDEPTH 38,1431
const double RECUR_PREC 39,1463
const long DEFAULT_COLOR 40,1496
DTOL(43,1555
#define ISCR 50,1954
#define JSCR 51,1970
PICT(53,1998
PICTZERO(61,2122
dsprintf9(70,2253
typedef unsigned char screen[screen81,2439
fill_gap(84,2498
todbl(105,3058
READ_EXPR(110,3235
plot(116,3373
init_graph(198,5799
free_graph(212,6052
check_rect(231,6443
check_rect_init(242,6722
initrect_get_arg(251,6897
initrect_gen(258,7157
Rchain(275,7587
initrect(283,7723
rectcursor(303,8230
rectscale0(310,8360
rectscale(324,8797
rectmove0(330,8943
rectmove(344,9355
rectrmove(350,9442
rectpoint0(356,9530
rectpoint(373,10145
rectrpoint(379,10234
rectcolor(385,10324
rectline0(395,10588
rectticks(439,12135
rectline(548,15541
rectrline(554,15638
rectbox0(560,15736
rectbox(586,16502
rectrbox(592,16598
freeobj(598,16702
killrect(611,16919
rectpoints0(627,17256
rectpoints(652,17913
rectlines0(678,18602
rectlines(707,19294
put_label(733,19972
rectstring(742,20141
rectstring3(749,20256
rectpointtype(768,20726
rectpointsize(785,21141
rectlinetype(799,21424
rectcopy_gen(814,21685
cp(855,22914
rectcopy(859,22997
enum {CLIPLINE_NONEMPTY CLIPLINE_NONEMPTY899,24224
enum {CLIPLINE_NONEMPTY = 1, CLIPLINE_CLIP_1 899,24224
enum {CLIPLINE_NONEMPTY = 1, CLIPLINE_CLIP_1 = 2, CLIPLINE_CLIP_2 899,24224
clipline(902,24355
rectclip(976,26330
#define REMOVE(985,26565
#define NEXT(986,26620
#undef REMOVE1106,31032
#undef NEXT1107,31046
Printx(1117,31425
Appendx(1127,31644
Appendy(1135,31797
get_xy(1143,31950
get_xy_from_vec(1165,32450
get_xy_from_vec2(1183,32873
gtodblList(1200,33229
rmiddle(1286,35565
single_recursion(1289,35656
param_recursion(1312,36218
rectplothin(1342,37244
rectsplines(1511,42078
set_range(1553,43256
rectplothrawin(1582,44330
rectploth(1726,49086
rectplothraw(1733,49273
plothraw_flags(1740,49419
plothraw0(1750,49602
plothraw(1758,49787
ploth(1762,49882
ploth2(1765,50010
plothmult(1768,50115
postplothraw(1772,50210
postploth(1775,50308
postploth2(1778,50442
plothsizes(1782,50577
plothsizes_flag(1784,50629
plot_count(1806,51264
PARI_get_psplot(1837,52474
gendraw(1851,52793
postdraw(1885,53710
rectdraw(1888,53760
postdraw_flag(1891,53810
rectdraw_flag(1894,53879
ps_sc(1897,53955
ps_point(1911,54275
ps_line(1917,54371
ps_rect(1924,54539
ps_points(1930,54713
ps_lines(1937,54849
ps_string(1947,55107
psplot_init(1964,55506
postdraw0(1988,56112
#define RoColT(2012,56833
gen_rectdraw0(2015,56883
#define COL(2131,60745
static hashentry col_list[col_list2132,60789
#undef COL2794,78838
colorname_to_rgb(2797,78862
color_to_rgb(2812,79218

/home/mengxue/pari/src/graph/plotQt4.c,2239
#undef grem55,1859
using namespace Qt;59,1892
class Plotter:Plotter61,1913
    long *w;Plotter::w87,2466
    long *x;Plotter::x88,2535
    long *y;Plotter::y89,2614
    long lw;Plotter::lw90,2694
    long numcolors;Plotter::numcolors91,2762
    QColor *color;Plotter::color92,2782
    QFont font;Plotter::font93,2801
    static QString *plotFile;Plotter::plotFile94,2817
QString *Plotter::plotFile Plotter::plotFile102,2939
Plotter::Plotter(105,2996
struct data_qt136,3843
  QPainter *p;data_qt::p138,3860
  long numcolors;data_qt::numcolors139,3875
  QColor *color;data_qt::color140,3893
static void SetForeground(143,3914
static void DrawPoint(149,4047
static void DrawLine(155,4176
static void DrawRectangle(161,4333
static void DrawPoints(167,4487
static void DrawLines(177,4730
static void DrawString(187,4974
void Plotter::draw(193,5156
void Plotter::save(213,5699
void Plotter::paintEvent(227,6000
void Plotter::keyPressEvent(238,6188
void Plotter::mouseReleaseEvent(251,6426
static const char * const fullscreen_xpm[fullscreen_xpm268,6592
class PlotWindow:PlotWindow384,9637
    static const QList<QByteArray> file_formats;PlotWindow::file_formats405,10015
    Plotter *plr;PlotWindow::plr406,10064
    QString saveFileName;PlotWindow::saveFileName407,10082
    int saveFileFormat;PlotWindow::saveFileFormat408,10108
    QLabel *res;PlotWindow::res410,10148
    QMenu* menuFile;PlotWindow::menuFile411,10165
    QMenu* menuView;PlotWindow::menuView412,10186
    QMenu* menuFormat;PlotWindow::menuFormat413,10207
    QAction* quitAction;PlotWindow::quitAction414,10230
    QAction* saveAction;PlotWindow::saveAction415,10255
    QAction* fullScreenAction;PlotWindow::fullScreenAction416,10280
    QSignalMapper* signalMapper;PlotWindow::signalMapper417,10311
    QIcon* icon;PlotWindow::icon418,10344
const QList<QByteArray> PlotWindow::file_formats 423,10373
PlotWindow::PlotWindow(426,10465
PlotWindow::~PlotWindow(488,12624
void PlotWindow::resizeEvent(493,12672
void PlotWindow::fullScreen(504,12962
void PlotWindow::normalView(512,13066
void PlotWindow::save(522,13232
void PlotWindow::save(534,13548
rectdraw0(564,14282
PARI_get_plot(596,14941

/home/mengxue/pari/src/graph/rect.h,5288
#define PLOT_NAME_LEN 16,586
typedef struct PARI_plot 17,611
  long width;18,638
  long height;19,652
  long hunit;20,667
  long vunit;21,681
  long fwidth;22,695
  long fheight;23,710
  long init;24,726
  char name[name25,739
} PARI_plot;26,769
typedef struct dblPointList{dblPointList31,861
  double *d;d32,890
  long nb;33,932
  double xsml,34,988
  double xsml,xbig,34,988
  double xsml,xbig,ysml,34,988
  double xsml,xbig,ysml,ybig;34,988
} dblPointList;35,1033
typedef struct RectObj 37,1050
  struct RectObj *next;next38,1075
  long code,39,1099
  long code,color;39,1099
} RectObj;40,1118
typedef struct PariRect 42,1130
  RectObj *head,head43,1156
  RectObj *head,*tail;tail43,1156
  long sizex,44,1179
  long sizex,sizey;44,1179
  double cursorx,45,1199
  double cursorx,cursory;45,1199
  double xscale,46,1225
  double xscale,yscale;46,1225
  double xshift,47,1249
  double xshift,yshift;47,1249
  long has_graph;48,1273
} PariRect;50,1390
typedef struct RectObj1P 54,1460
  struct RectObj *next;next55,1487
  long code,56,1511
  long code,color;56,1511
  double x,57,1530
  double x,y;57,1530
} RectObj1P;58,1544
typedef struct RectObj2P 60,1558
  struct RectObj *next;next61,1585
  long code,62,1609
  long code,color;62,1609
  double x1,63,1628
  double x1,y1;63,1628
  double x2,64,1644
  double x2,y2;64,1644
} RectObj2P;65,1660
typedef struct RectObjMP 67,1674
  struct RectObj *next;next68,1701
  long code,69,1725
  long code,color;69,1725
  long count;70,1744
  double *xs,xs71,1758
  double *xs,*ys;ys71,1758
} RectObjMP;72,1776
typedef struct RectObjST 74,1790
  struct RectObj *next;next75,1817
  long code,76,1841
  long code,color;76,1841
  long length;77,1860
  char *s;s78,1875
  double x,79,1886
  double x,y;79,1886
  long dir;80,1900
} RectObjST;81,1912
typedef struct RectObjPN 83,1926
  struct RectObj *next;next84,1953
  long code,85,1977
  long code,color;85,1977
  long pen;86,1996
} RectObjPN;87,2008
typedef struct RectObjPS 89,2022
  struct RectObj *next;next90,2049
  long code,91,2073
  long code,color;91,2073
  double size;92,2092
} RectObjPS;93,2107
struct plot_points 95,2121
struct plot_points { long x,95,2121
struct plot_points { long x, y;95,2121
struct plot_eng 97,2157
  PARI_plot *pl;pl98,2175
  void *data;data99,2192
  void (*sc)sc100,2206
  void (*pt)pt101,2242
  void (*ln)ln102,2284
  void (*bx)bx103,2346
  void (*mp)mp104,2404
  void (*ml)ml105,2466
  void (*st)st106,2528
#define ROt_MV 109,2591
#define ROt_PT 110,2642
#define ROt_LN 111,2694
#define ROt_BX 112,2745
#define ROt_MP 113,2795
#define ROt_ML 114,2856
#define ROt_ST 115,2917
#define ROt_PTT 116,2970
#define ROt_LNT 117,3035
#define ROt_PTS 118,3099
#define ROt_NULL 119,3164
#define ROt_MAX 121,3235
#define RoMV(125,3316
#define RoPT(126,3352
#define RoLN(127,3388
#define RoBX(128,3424
#define RoMP(129,3460
#define RoML(130,3496
#define RoST(131,3532
#define RoPTT(132,3568
#define RoPTS(133,3605
#define RoLNT(134,3642
#define RoNULL(135,3679
#define RHead(139,3790
#define RTail(140,3821
#define RXsize(141,3852
#define RYsize(142,3885
#define RXcursor(143,3918
#define RYcursor(144,3955
#define RXshift(145,3992
#define RYshift(146,4027
#define RXscale(147,4062
#define RYscale(148,4097
#define RHasGraph(149,4132
#define RoNext(151,4173
#define RoType(152,4207
#define RoCol(153,4241
#define RoMVx(154,4275
#define RoMVy(155,4309
#define RoPTx(156,4343
#define RoPTy(157,4377
#define RoLNx1(158,4411
#define RoLNy1(159,4447
#define RoLNx2(160,4483
#define RoLNy2(161,4519
#define RoBXx1(162,4555
#define RoBXy1(163,4591
#define RoBXx2(164,4627
#define RoBXy2(165,4663
#define RoMPcnt(167,4700
#define RoMPxs(168,4740
#define RoMPys(169,4776
#define RoMLcnt(171,4813
#define RoMLxs(172,4853
#define RoMLys(173,4889
#define RoSTs(175,4926
#define RoSTl(176,4960
#define RoSTx(177,4999
#define RoSTy(178,5033
#define RoSTdir(179,5067
#define RoSTdirLEFT 181,5106
#define RoSTdirCENTER 182,5140
#define RoSTdirRIGHT 183,5176
#define RoSTdirHPOS_mask 184,5211
#define RoSTdirBOTTOM 186,5243
#define RoSTdirVCENTER 187,5279
#define RoSTdirTOP 188,5316
#define RoSTdirVPOS_mask 189,5349
#define RoSTdirHGAP 191,5381
#define RoSTdirVGAP 192,5415
#define RoPTTpen(195,5451
#define RoLNTpen(196,5491
#define RoPTSsize(197,5531
#define PL_POINTS 199,5574
#define PLOT_PARAMETRIC 201,5595
#define PLOT_RECURSIVE 202,5629
#define PLOT_NO_RESCALE 203,5663
#define PLOT_NO_AXE_X 204,5697
#define PLOT_NO_AXE_Y 205,5731
#define PLOT_NO_FRAME 206,5765
#define PLOT_POINTS 207,5799
#define PLOT_POINTS_LINES 208,5833
#define PLOT_SPLINES 209,5867
#define PLOT_NO_TICK_X 210,5901
#define PLOT_NO_TICK_Y 211,5935
#define PLOT_NODOUBLETICK 212,5969
#define PLOT_COMPLEX 213,6003
#define RECT_CP_RELATIVE 215,6038
#define RECT_CP_NW 216,6068
#define RECT_CP_SW 217,6098
#define RECT_CP_SE 218,6128
#define RECT_CP_NE 219,6158
#define TICKS_CLOCKW 221,6189
#define TICKS_ACLOCKW 222,6260
#define TICKS_ENDSTOO 223,6336
#define TICKS_NODOUBLE 224,6409
#define TICKS_COORD 227,6513
#define TICKS_RELATIVE 228,6591
typedef long (*col_counter)col_counter234,6744

/home/mengxue/pari/src/graph/plotQt.c,2236
#undef grem28,1236
#undef swap29,1248
class Plotter:Plotter48,1528
    long *w;Plotter::w74,2116
    long *x;Plotter::x75,2185
    long *y;Plotter::y76,2264
    long lw;Plotter::lw77,2344
    long numcolors;Plotter::numcolors78,2412
    QColor *color;Plotter::color79,2432
    QFont font;Plotter::font80,2451
    static QString *plotFile;Plotter::plotFile81,2467
QString *Plotter::plotFile Plotter::plotFile89,2589
Plotter::Plotter(92,2646
struct data_qt121,3480
  QPainter *p;data_qt::p123,3497
  long numcolors;data_qt::numcolors124,3512
  QColor *color;data_qt::color125,3530
static void SetForeground(128,3551
static void DrawPoint(134,3684
static void DrawLine(140,3813
static void DrawRectangle(146,3970
static void DrawPoints(152,4124
static void DrawLines(162,4373
static void DrawString(172,4623
void Plotter::draw(178,4800
void Plotter::save(198,5345
void Plotter::paintEvent(212,5687
void Plotter::resizeEvent(220,5803
void Plotter::keyPressEvent(223,5873
void Plotter::mouseReleaseEvent(236,6111
static const char * const fullscreen_xpm[fullscreen_xpm267,6589
class SaveAsDialog:SaveAsDialog287,6945
    QString selectedFile(SaveAsDialog::selectedFile303,7287
    int picWidth(SaveAsDialog::picWidth305,7346
    int picHeight(SaveAsDialog::picHeight306,7392
    QLineEdit *nameW;SaveAsDialog::nameW309,7450
    QSpinBox *widthW,SaveAsDialog::widthW310,7472
    QSpinBox *widthW, *heightW;SaveAsDialog::heightW310,7472
SaveAsDialog::SaveAsDialog(315,7510
SaveAsDialog::~SaveAsDialog(378,9593
class PlotWindow:PlotWindow383,9630
    static const QStrList file_formats;PlotWindow::file_formats404,10023
    Plotter *plr;PlotWindow::plr405,10063
    QString saveFileName;PlotWindow::saveFileName406,10081
    int saveFileFormat;PlotWindow::saveFileFormat407,10107
    QLabel *res;PlotWindow::res409,10147
const QStrList PlotWindow::file_formats 414,10176
PlotWindow::PlotWindow(417,10245
PlotWindow::~PlotWindow(479,12395
void PlotWindow::resizeEvent(484,12443
void PlotWindow::fullScreen(495,12733
void PlotWindow::normalView(506,13027
void PlotWindow::save(516,13215
void PlotWindow::save(528,13539
rectdraw0(577,14918
PARI_get_plot(609,15596

/home/mengxue/pari/src/graph/plotfltk.c,635
static long numcolors;30,1010
class Plotter:Plotter32,1034
    long *my_w;Plotter::my_w42,1213
    long *my_x;Plotter::my_x43,1282
    long *my_y;Plotter::my_y44,1362
    long my_lw;Plotter::my_lw45,1440
    Fl_Color *color;Plotter::color46,1508
rgb_color(50,1549
Plotter::Plotter(55,1666
static void DrawPoint(73,2179
static void DrawLine(79,2265
static void DrawRectangle(85,2378
static void DrawPoints(91,2487
static void SetForeground(98,2632
static void DrawLines(104,2746
static void DrawString(111,2909
void Plotter::draw(117,3034
int Plotter::handle(139,3606
rectdraw0(198,4633
PARI_get_plot(218,4994

/home/mengxue/pari/src/graph/plotWin32.c,272
static void SetForeground(22,702
static void DrawPoint(31,942
static void DrawLine(36,1035
static void DrawRectangle(42,1173
static void DrawPoints(50,1382
static void DrawLines(57,1522
static void DrawString(65,1707
void rectdraw0(70,1832
PARI_get_plot(102,2738

/home/mengxue/pari/src/modules/subfield.c,1219
typedef struct _poldata 23,1039
  GEN pol;24,1065
  GEN dis;25,1076
  GEN roo;26,1105
  GEN den;27,1133
} poldata;28,1173
typedef struct _primedata 29,1184
  GEN p;30,1212
  GEN pol;31,1234
  GEN ff;32,1273
  GEN Z;33,1316
  long lcm;34,1381
  GEN T;35,1416
  GEN fk;37,1448
  GEN firstroot;38,1505
  GEN interp;39,1564
  GEN bezoutC;41,1703
  GEN Trk;42,1768
} primedata;43,1826
typedef struct _blockdata 44,1839
  poldata *PD;PD45,1867
  primedata *S;S46,1912
  GEN DATA;47,1960
  long N;48,2039
  long d;49,2067
  long size;50,2099
} blockdata;51,2136
#define BIL 58,2322
calc_block(64,2652
perm_mul_i(157,4959
cycle_power_to_perm(169,5235
im_block_by_perm(192,5722
append(201,5903
print_block_system(210,6054
polsimplify(307,8449
ok_coeffs(317,8665
trace(327,8906
poltrace(341,9266
chinese_retrieve_pol(357,9910
embedding(381,10733
get_bezout(440,12912
init_traces(458,13325
init_primedata(490,14226
choose_prime(522,15185
bound_for_coeff(571,16570
compute_data(609,17989
_subfield(705,20877
subfield(709,21015
test_block(768,23067
subfields_of_given_degree(782,23333
fix_var(797,23753
subfields_poldata(806,23924
subfieldsall(827,24366
nfsubfields(881,25639

/home/mengxue/pari/src/modules/genus2red.c,2013
igusaj2(26,1122
igusaj4(36,1667
igusaj6(57,3604
apol2(124,7627
apol3(133,7795
apol5(142,8064
bpol2(151,8416
static const long VERYBIG 156,8560
myval(158,8610
my3val(160,8685
polval(163,8792
myval_zi(173,9020
myval_zi2(176,9146
min3(187,9323
gmin3(196,9450
frac2s(206,9586
padicfactors(210,9733
RgX_recip6(214,9851
RgX_to_6(225,10166
factmz(250,10888
discpart(290,11623
theta_j(315,12318
theta_3_zi(334,12785
theta_3_zi2(343,13034
deg1root(353,13274
polymini(365,13580
zi_pow3mod(472,16112
polymini_zi(481,16290
polymini_zi2(520,17365
struct igusa 578,18930
  GEN j2,579,18945
  GEN j2, i4,579,18945
  GEN j2, i4, j4,579,18945
  GEN j2, i4, j4, j6,579,18945
  GEN j2, i4, j4, j6, j8,579,18945
  GEN j2, i4, j4, j6, j8, j10,579,18945
  GEN j2, i4, j4, j6, j8, j10, i12;579,18945
  GEN a0,580,18981
  GEN a0, A2,580,18981
  GEN a0, A2, A3,580,18981
  GEN a0, A2, A3, A5,580,18981
  GEN a0, A2, A3, A5, B2;580,18981
struct igusa_p 582,19010
  long eps,583,19027
  long eps, eps2,583,19027
  long eps, eps2, tt,583,19027
  long eps, eps2, tt, r1,583,19027
  long eps, eps2, tt, r1, r2,583,19027
  long eps, eps2, tt, r1, r2, R,583,19027
  long eps, eps2, tt, r1, r2, R, tame;583,19027
  GEN p,584,19066
  GEN p, stable,584,19066
  GEN p, stable, val,584,19066
  GEN p, stable, val, neron;584,19066
  const char *type;type585,19095
stable_reduction(589,19131
struct red 662,21126
  const char *t,t663,21139
  const char *t, *pages;pages663,21139
  GEN g;664,21164
zv_snf(669,21204
cyclic(688,21526
dicyclic(691,21610
groupH(703,21848
get_red(706,21921
tame_1(772,23594
tame_234_init(821,24731
tame_2(869,25823
tame_3(964,28659
tame_4(1016,30194
tame_567_init_3(1078,32208
tame_567_init(1089,32427
tame_5(1164,34482
tame_6(1450,44055
tame_7(1560,47765
tame(1609,49229
get_maxc(1634,50056
quartic(1647,50267
litredtp(1710,52305
labelm3(1796,55150
quadratic(1826,56136
genus2localred(1854,56901
chk_pol(2181,67562
genus2red(2193,67803

/home/mengxue/pari/src/modules/ellfromeqn.c,104
jac_cubic(47,1721
jac_quart(62,4731
jac_biquadr(77,5774
dg(91,7461
co(99,7578
ellfromeqn(108,7731

/home/mengxue/pari/src/modules/ellsea.c,2638
static GEN modular_eqn;36,1352
pari_init_seadata(39,1382
pari_close_seadata(41,1436
FqX_equal(44,1517
FlxX_equal(47,1577
seadata_filename(50,1641
get_seadata(54,1747
list_to_pol(77,2206
struct meqn 90,2472
  char type;91,2486
  GEN eq,92,2499
  GEN eq, eval;92,2499
  long vx,93,2515
  long vx,vy;93,2515
get_modular_eqn(97,2544
err_modular_eqn(125,3089
ellmodulareqn(129,3178
Fq_elldivpol2(146,3624
Fq_elldivpol2d(152,3764
FqX_numer_isog_abscissa(158,3875
Zq_inv(177,4583
Zq_div(184,4737
Zq_sqrt(191,4891
Zq_divexact(198,5052
Zq_pval(204,5159
Zq_Z_div_safe(210,5251
find_coeff(228,5759
Fq_ellj(269,6974
Zq_ellj(279,7260
struct eigen_ellinit291,7795
  GEN a4,293,7818
  GEN a4, h,293,7818
  GEN a4, h, T,293,7818
  GEN a4, h, T, p;293,7818
  GEN RHS,294,7837
  GEN RHS, DRHS,294,7837
  GEN RHS, DRHS, X12,294,7837
  GEN RHS, DRHS, X12, Gy,294,7837
  GEN RHS, DRHS, X12, Gy, nGy,294,7837
  GEN RHS, DRHS, X12, Gy, nGy, O;294,7837
  ulong pp;295,7871
init_eigen(299,7899
init_eigenu(326,8865
eigen_elldbl(354,9905
eigen_elladd(381,11006
eigenu_elldbl(405,11776
eigenu_elladd(434,12951
eigen_ellmulu(459,13730
Fq_to_Flx(471,14079
find_eigen_value(480,14396
find_eigen_value_power(520,15758
find_kernel(556,17097
compute_u(618,19194
find_isogenous_from_Atkin(640,20306
find_isogenous_from_canonical(714,23248
corr(791,26734
RgXY_deflatex(800,27000
Fq_polmodular_eval(814,27285
meqn_j(881,30997
find_isogenous_from_J(893,31252
find_isogenous(954,33518
FqX_homogenous_eval(972,34113
FqX_homogenous_div(985,34441
find_kernel_power(999,34851
enum mod_type 1035,36269
enum mod_type {MTpathological,MTpathological1035,36269
enum mod_type {MTpathological, MTAtkin,1035,36269
enum mod_type {MTpathological, MTAtkin, MTElkies,1035,36269
enum mod_type {MTpathological, MTAtkin, MTElkies, MTone_root,1035,36269
enum mod_type {MTpathological, MTAtkin, MTElkies, MTone_root, MTroots}MTroots1035,36269
Flxq_study_eqn(1038,36353
Fp_study_eqn(1055,36829
FpXQ_study_eqn(1071,37193
study_modular_eqn(1101,37943
find_trace_Elkies_power(1134,38959
find_trace_Atkin(1186,40796
find_trace_one_root(1219,41861
find_trace_lp1_roots(1226,42006
find_trace(1236,42285
separation(1307,44558
multiple_crt(1340,45451
possible_traces(1366,46197
cost(1404,47136
value(1416,47363
set_cost(1428,47594
get_lgatkin(1439,47818
champion(1448,47997
compute_diff(1496,49140
cmp_atkin(1506,49371
add_atkin(1517,49598
BSGS_pre(1530,49931
match_and_sort(1553,50738
get_bound_bsgs(1694,55555
get_FqE_group(1708,55934
Fq_ellcard_SEA(1727,56612
Fp_ellcard_SEA(1843,60438
ellsea(1849,60557

/home/mengxue/pari/src/modules/aprcl.c,1394
typedef struct Red 22,964
  GEN N;24,1003
  GEN N2;25,1042
  long k,27,1106
  long k, lv;27,1106
  ulong mask;28,1120
  long n;30,1155
  GEN C;31,1165
  GEN (*red)red32,1192
} Red;33,1226
typedef struct Cache 35,1234
  GEN aall,36,1286
  GEN aall, tall;36,1286
  GEN cyc;37,1304
  GEN E;38,1315
  GEN eta;39,1324
  GEN matvite,40,1335
  GEN matvite, matinvvite;40,1335
  GEN avite,41,1362
  GEN avite, pkvite;41,1362
  ulong ctsgt;42,1383
} Cache;43,1410
makepoldeg1(46,1431
red_cyclop(63,1781
u_red_cyclo2n_ip(84,2176
red_cyclo2n_ip(99,2546
red_cyclo2n(107,2761
smallpolrev(111,2871
u_red(125,3156
_red_cyclo2n(131,3269
_red_cyclop(136,3407
_red(140,3505
_redsimple(144,3590
sqrmod(147,3668
sqrconst(152,3735
sqrmod3(161,3916
sqrmod4(177,4278
sqrmod5(193,4631
_mul(238,5883
_powpolmod(242,6016
_powpolmodsimple(271,6745
powpolmod(286,7125
compute_e(314,7811
compute_t_small(361,9223
compute_t(442,11956
computetabdl(471,12730
compute_g(488,13087
get_jac(505,13446
get_jac2(517,13710
finda(554,14826
filltabs(596,15709
alloc_cache(676,17779
calcglobs(685,17936
aut(722,18855
autvec_TH(741,19293
autvec_AL(754,19521
look_eta(769,19885
look_eta2(778,20047
step4a(794,20346
is_m1(814,20801
step4b(821,20887
step4c(845,21440
step4d(865,21878
_res(875,22094
step5(879,22216
step6(919,23227
aprcl(937,23575
isprimeAPRCL(1023,26033

/home/mengxue/pari/src/modules/part.c,249
psi(43,1770
L(55,2197
estim(80,2787
pinit(94,3175
numbpart(108,3618
parse_interval(177,5784
forpart_init(198,6232
forpart_next(239,7435
forpart_prev(298,8941
countpart(351,10208
partitions(364,10425
forpart(378,10719
forpart0(388,10922
forpart0(388,10922

/home/mengxue/pari/src/modules/stark.c,4380
static const long EXTRA_PREC 22,964
static const long EXTRA_BITS 23,1010
  GEN L0,27,1082
  GEN L0, L1,27,1082
  GEN L0, L1, L11,27,1082
  GEN L0, L1, L11, L2;27,1082
  GEN L1ray,28,1125
  GEN L1ray, L11ray;28,1125
  GEN rayZ;29,1191
  long condZ;30,1250
} LISTray;31,1312
  long ord;35,1363
  GEN *val,val36,1375
  GEN *val, chi;36,1375
} CHI_t;37,1392
  GEN M,41,1434
  GEN M, beta,41,1434
  GEN M, beta, B,41,1434
  GEN M, beta, B, U,41,1434
  GEN M, beta, B, U, nB;41,1434
  long v,42,1459
  long v, G,42,1459
  long v, G, N;42,1459
} RC_data;43,1475
InitRU(50,1751
ComputeImagebyChar(59,1993
EvalChar_n(74,2352
EvalChar(81,2489
init_CHI(87,2577
init_CHI_alg(100,2834
init_CHI_C(113,3094
ConjChar(119,3214
  long r;129,3423
  GEN j;130,3454
  GEN cyc;131,3512
} GROUP_t;132,3563
NextElt(135,3586
EltsOfGroup(149,3918
ComputeLift(173,4359
init_get_chic(192,4771
get_chic(206,5022
get_Char(223,5446
divcond(248,5968
get_prdiff(252,6107
GetPrimChar(265,6556
#define ch_chi(283,7055
#define ch_C(284,7083
#define ch_bnr(285,7111
#define ch_4(286,7139
#define ch_CHI(287,7167
#define ch_diff(288,7195
#define ch_cond(289,7223
#define ch_CHI0(290,7251
#define ch_comp(291,7279
GetDeg(294,7319
InitQuotient(315,8022
ComputeKernel0(325,8279
ComputeKernel(340,8766
Order(348,8980
IsGoodSubgroup(369,9512
CplxModulus(436,11418
FindModulus(474,12759
ArtinNumber(636,18229
ComputeAllArtinNumbers(777,22548
SingleArtinNumber(798,23211
bnrrootnumber(804,23444
LiftChar(846,24481
ComputeAChi(869,25252
L_vanishes_at_0(900,25870
_data4(918,26199
InitChar(946,26921
get_listCR(1014,28876
CharNewPrec(1058,30006
_0toCoeff(1092,31040
Polmod2Coeff(1100,31169
InitMatAn(1121,31563
FreeMat(1136,31873
InitReduction(1146,32047
pan(1168,32455
IsZero(1182,32711
MulCoeff(1192,32852
AddMulCoeff(1217,33303
EvalCoeff(1249,33948
CopyCoeff(1286,34624
next_pow(1299,34850
an_AddMul(1307,35023
CorrectCoeff(1327,35569
ComputeCoeff(1360,36264
deg11(1393,37081
deg12(1399,37241
deg0(1405,37412
deg2(1407,37485
InitPrimesQuad(1410,37559
InitPrimes(1461,39131
_sercoeff(1502,40312
affect_coeff(1509,40415
  GEN c1,1516,40559
  GEN c1, aij,1516,40559
  GEN c1, aij, bij,1516,40559
  GEN c1, aij, bij, cS,1516,40559
  GEN c1, aij, bij, cS, cT,1516,40559
  GEN c1, aij, bij, cS, cT, powracpi;1516,40559
  long i0,1517,40597
  long i0, a,1517,40597
  long i0, a,b,1517,40597
  long i0, a,b,c,1517,40597
  long i0, a,b,c, r,1517,40597
  long i0, a,b,c, r, rc1,1517,40597
  long i0, a,b,c, r, rc1, rc2;1517,40597
} ST_t;1518,40628
ppgamma(1524,40866
_cond(1623,44023
sortChars(1627,44137
GetValue(1665,45117
GetValue1(1702,46122
TestOne(1730,46862
chk_reccoeff_init(1741,47105
chk_reccoeff(1748,47245
RecCoeff3(1761,47527
RecCoeff2(1830,49339
RecCoeff(1861,50205
an_mul(1898,51127
an_set0_coprime(1913,51499
an_set0(1921,51710
computean(1929,51892
mpvecpowdiv(2014,53834
QuadGetST(2033,54433
_addmulrr(2147,57770
_addrr(2158,57969
get_cS_cT(2163,58108
clear_cScT(2227,59707
init_cScT(2239,59922
zeta_get_limx(2254,60214
zeta_get_N0(2273,60823
get_i0(2286,61214
zeta_get_i0(2307,61904
GetST0(2318,62236
GetST(2407,64794
GenusFieldQuadReal(2438,65859
GenusFieldQuadImag(2472,66672
AllStark(2501,67394
get_subgroup(2664,72189
bnrstark(2673,72420
bnrL1(2740,74673
split_pol_quad(2822,77035
makescind(2846,77737
quadray_init(2890,79195
quadhilbertreal(2922,80043
hasexp2(2994,82344
uhasexp2(3000,82489
qfbforms(3007,82602
GCD24(3040,83474
struct gpq_data 3072,84085
  long p,3073,84103
  long p, q;3073,84103
  GEN sqd;3074,84116
  GEN u,3075,84149
  GEN u, D;3075,84149
  GEN pq,3076,84161
  GEN pq, pq2;3076,84161
  GEN qfpq 3077,84193
init_pq(3085,84447
gpq(3166,87033
quadhilbertimag(3217,88451
quadhilbert(3298,90658
getallrootsof1(3308,90917
get_lambda(3326,91398
to_approx(3362,92476
get_om(3369,92624
getallelts(3378,92931
findbezk(3425,94162
findbezk_pol(3439,94546
form_to_ideal(3450,94796
get_prec(3464,95242
ellphistinit(3477,95615
ellphist(3491,96084
computeth2(3501,96404
computeP2(3515,96836
#define nexta(3544,97665
do_compo(3546,97710
#undef nexta3563,98201
galoisapplypol(3566,98226
findquad(3576,98467
findquad_pol(3593,98955
compocyclo(3601,99138
isZ(3637,100328
treatspecialsigma(3646,100552
quadray(3694,101975

/home/mengxue/pari/src/modules/mpqs.c,1595
paristrtok_r(78,4115
decimal_len(106,5018
mpqs_set_parameters(118,5374
mpqs_handle_ctor(194,8314
mpqs_FB_ctor(211,8938
mpqs_sieve_array_ctor(236,9890
mpqs_poly_ctor(281,11998
mpqs_handle_dtor(311,13105
#define myfree(313,13142
mpqs_find_k(341,14019
    const mpqs_multiplier_t *_k;_k347,14163
    long np;348,14196
    double value;349,14264
mpqs_create_FB(424,17263
mpqs_set_sieve_threshold(530,21538
mpqs_locate_A_range(585,23720
mpqs_print_histo(661,27070
mpqs_eval_histograms(720,30135
mpqs_get_filename(825,33476
mpqs_relations_cmp(839,33829
pari_fputs(853,34242
#define min_bufspace 857,34355
#define buflist_size 858,34428
mpqs_sort_lp_file(865,34777
mpqs_append_file(1019,40801
#define swap_lines(1040,41763
mpqs_mergesort_lp_file0(1046,41899
mpqs_mergesort_lp_file(1228,47642
check_root(1257,48794
mpqs_increment(1319,52066
#  define MPQS_DEBUG_SI_CHOOSE_PRIMES 1395,55244
mpqs_si_choose_primes(1398,55302
mpqs_self_init(1536,60880
mpqs_sieve_p(1756,68963
mpqs_sieve(1776,69678
mpqs_eval_sieve(1808,70948
mpqs_add_factor(1840,72201
mpqs_add_0(1847,72354
mpqs_factorback(1856,72482
mpqs_eval_cand(1880,73137
  long q;2144,82871
  char Y[Y2145,82881
  char E[E2146,82911
} mpqs_lp_entry;2147,82941
mpqs_set_exponents(2150,82971
set_lp_entry(2167,83295
mpqs_combine_large_primes(2179,83575
stream_read_F2m(2312,87956
mpqs_add_relation(2358,89229
mpqs_get_relation(2383,89761
#define isprobableprime(2392,90035
split(2394,90095
mpqs_solve_linear_system(2425,90996
mpqs_i(2707,102706
#define unlink_all(2857,108193
mpqs(3133,118245

/home/mengxue/pari/src/modules/mpqs.h,4871
#  define MPQS_DEBUG_VERBOSE5,82
#  define MPQS_DEBUG11,175
#  define PRINT_IF_VERBOSE(13,205
#  define PRINT_IF_VERBOSE(15,255
#  define MPQS_DEBUGLEVEL 19,311
#  define MPQS_DEBUGLEVEL 21,364
#  define SEEK_SET 27,495
#  define WRITE 32,617
#  define READ 33,638
#  define WRITE 35,664
#  define READ 36,684
#define MPQS_STRING_LENGTH 39,711
#define MPQS_POSSIBLE_MULTIPLIERS 43,804
#define MPQS_MULTIPLIER_SEARCH_DEPTH 45,948
#define MPQS_LP_BOUND 50,1186
#define MPQS_A_FUDGE 56,1519
#define MPQS_CANDIDATE_ARRAY_SIZE 58,1579
#  define MPQS_MIN_SIZE_FB_FOR_HISTO 62,1760
#  define MPQS_MIN_CANDS_FOR_HISTO 64,1872
#  define MPQS_MIN_FRELS_FOR_HISTO 66,1982
#  define MPQS_HISTO_FREL_QUANTILE 69,2090
#  define MPQS_HISTO_DROP_LIMIT 70,2131
#  define MPQS_HISTO_LPREL_BASEFLOW 71,2172
#define MPQS_ADMIT_DEFEAT 77,2416
typedef int  mpqs_int32_t;84,2547
typedef unsigned int  mpqs_uint32_t;85,2574
typedef ulong mpqs_uint64_t;86,2611
typedef long mpqs_int32_t;88,2646
typedef ulong mpqs_uint32_t;89,2673
  ulong _w0;91,2719
  ulong _w1;92,2732
} mpqs_uint64_t;93,2745
typedef union mpqs_invp 98,2913
  ulong _ul;99,2939
  mpqs_uint64_t _u64;100,2952
} mpqs_invp_t;101,2974
#define MPQS_FB_ENTRY_PAD 118,3868
typedef union mpqs_FB_entry 120,3898
  char __pad[__pad121,3928
    mpqs_int32_t __p;123,3972
    float __flogp;125,4064
    mpqs_invp_t __invp;126,4134
    mpqs_int32_t __start1;128,4204
    mpqs_int32_t __start2;129,4279
    mpqs_uint32_t __sqrt_kN;130,4306
    unsigned char __val;131,4359
    unsigned char __flags;132,4434
  } __entry;133,4461
} mpqs_FB_entry_t;134,4474
#define fbe_p 137,4551
#define fbe_flogp 138,4587
#define fbe_invp 139,4627
#define fbe_start1 140,4666
#define fbe_start2 141,4707
#define fbe_sqrt_kN 142,4748
#define fbe_logval 143,4790
#define fbe_flags 144,4828
#define MPQS_FBE_CLEAR 149,4916
#define MPQS_FBE_DIVIDES_A 154,5170
#define MPQS_MAX_OMEGA_K 166,5725
typedef struct mpqs_multiplier 167,5752
  mpqs_uint32_t k;168,5785
  mpqs_uint32_t omega_k;169,5856
  mpqs_uint32_t kp[kp170,5928
} mpqs_multiplier_t;171,5999
static const mpqs_multiplier_t cand_multipliers[cand_multipliers173,6021
typedef struct mqps_per_A_prime 221,7346
  GEN _H;222,7380
  mpqs_int32_t _i;223,7432
} mpqs_per_A_prime_t;224,7488
#define MPQS_H(230,7779
#define MPQS_I(231,7814
#define MPQS_AP(232,7849
#define MPQS_LP(233,7895
#define MPQS_SQRT(234,7945
#define MPQS_FLG(235,7999
#define MPQS_MAX_OMEGA_A 252,8993
typedef struct mpqs_inv_A_H 253,9021
  mpqs_uint32_t _i[_i254,9051
} mpqs_inv_A_H_t;255,9093
#define MPQS_INV_A_H(257,9112
typedef struct mpqs_handle 263,9384
  unsigned char *sieve_array;sieve_array265,9489
  unsigned char *sieve_array_end;sieve_array_end266,9558
  mpqs_FB_entry_t *FB;FB267,9625
  long *candidates;candidates268,9689
  char *relations;relations269,9763
  long *relaprimes;relaprimes270,9835
  mpqs_inv_A_H_t *inv_A_H;inv_A_H271,9908
  mpqs_per_A_prime_t *per_A_pr;per_A_pr272,9987
  mpqs_int32_t M;275,10111
  mpqs_int32_t size_of_FB;276,10171
  mpqs_int32_t index0_FB;279,10366
  mpqs_int32_t index1_FB;281,10520
  mpqs_int32_t index2_FB;282,10595
  unsigned char index2_moved;283,10674
  unsigned char sieve_threshold;284,10750
  unsigned char do_histograms;287,10877
  unsigned char done_histograms;288,10951
  long *histo_full;histo_full290,11068
  long *histo_lprl;histo_lprl291,11143
  long *histo_drop;histo_drop292,11205
  GEN N;294,11274
  GEN kN;295,11340
  GEN A;298,11537
  GEN B;299,11595
  GEN C;301,11670
  mpqs_int32_t omega_A;303,11740
  mpqs_int32_t no_B;304,11813
  double l2_target_A;305,11891
  mpqs_uint32_t bin_index;308,12044
  mpqs_uint32_t index_i;309,12121
  mpqs_uint32_t index_j;310,12180
  mpqs_int32_t target_no_rels;314,12328
  mpqs_int32_t largest_FB_p;315,12398
  mpqs_int32_t pmin_index1;316,12460
  mpqs_int32_t lp_scale;317,12541
  mpqs_int32_t first_sort_point;319,12621
  mpqs_int32_t sort_pt_interval;320,12685
  long lp_bound;325,12881
  long digit_size_N;326,12943
  long digit_size_kN;327,12964
  const mpqs_multiplier_t *_k;_k328,12986
  double tolerance;329,13063
  double dkN;330,13137
  double l2sqrtkN;331,13210
  double l2M;332,13264
  void *FB_chunk;FB_chunk338,13552
  void *invAH_chunk;invAH_chunk339,13626
} mpqs_handle_t;341,13703
typedef struct mpqs_parameterset 367,15127
  float tolerance;368,15162
  mpqs_int32_t lp_scale;370,15273
  mpqs_int32_t M;371,15352
  mpqs_int32_t size_of_FB;372,15424
  mpqs_int32_t omega_A;373,15498
  mpqs_int32_t pmin_index1;377,15775
  mpqs_int32_t first_sort_point;382,16159
  mpqs_int32_t sort_pt_interval;383,16192
} mpqs_parameterset_t;384,16225
static const mpqs_parameterset_t mpqs_parameters[mpqs_parameters390,16395
#define MPQS_MAX_DIGIT_SIZE_KN 502,22422

/home/mengxue/pari/src/modules/elldata.c,338
strtoclass(23,981
ellparsename(38,1331
ellrecode(62,1927
ellconvertname(76,2173
ellcondfile(104,2866
static int cmpi1(121,3330
ellcondlist(123,3403
ellsearchbyname(137,3643
ellsearchbyclass(152,3914
ellsearch(165,4188
ellsearchcurve(196,4943
ellidentify(206,5240
elldatagenerators(221,5605
forell(231,5783
forell0(258,6287
forell0(258,6287

/home/mengxue/pari/src/modules/galois.c,1852
#define NMAX 22,939
typedef GEN PERM;24,977
typedef PERM *GROUP;GROUP25,995
  PERM *a;a27,1033
  long nm,28,1044
  long nm, nv;28,1044
} resolv;29,1059
  long pr,32,1103
  long pr, prmax,32,1103
  long pr, prmax, N;32,1103
  GEN p,33,1124
  GEN p, r,33,1124
  GEN p, r, coef;33,1124
} buildroot;34,1142
static long *par_vec;par_vec38,1212
do_par(42,1349
partitions_galois(57,1692
_aff(85,2434
_gr(94,2657
_typ(107,2943
_cr(120,3196
permmul(132,3404
printperm(141,3592
raye(150,3743
rayergroup11(160,3937
rayergroup(184,4336
galmodp(204,4735
preci(239,5665
fixprec(249,5867
getpreci(259,6072
#define setcard_obj(265,6192
#define getcard_obj(266,6238
alloc_pobj(270,6363
allocgroup(281,6617
galopen(291,6767
bin(304,7107
#define BUFFS 313,7311
read_obj(316,7410
#undef BUFFS325,7659
lirecoset(329,7754
lireresolv(343,8098
cmp_re(357,8415
Monomial(366,8656
gpolynomial(404,9662
zaux1(430,10362
zaux(453,10899
gpoly(459,10968
new_pol(677,18178
tschirn(693,18540
sortroots(720,19272
delete_roots(741,19745
moreprec(751,19923
get_ro(777,20670
sufprec_r(786,20936
sufprec(794,21169
get_ro_perm(803,21311
dbg_rac(830,21966
#define M 840,22318
check_isin(843,22419
#undef M934,25337
galoisprim8(938,25374
galoisimpodd8(954,25670
galoisimpeven8(1077,28222
closure8(1248,31897
initgroup(1270,32313
data8(1280,32470
galoismodulo8(1437,37431
galoisprim9(1502,39546
galoisimpodd9(1532,40101
galoisimpeven9(1579,41038
closure9(1627,41978
data9(1644,42245
galoismodulo9(1692,43701
galoisprim10(1741,45254
galoisimpeven10(1769,45743
galoisimpodd10(1798,46284
closure10(2028,51560
data10(2049,51979
galoismodulo10(2117,54315
closure11(2176,56670
data11(2204,57292
galoismodulo11(2220,57687
init_isin(2250,58426
isin_G_H(2302,60104
polgaloisnamesbig(2340,60981
galoisbig(2362,61549

/home/mengxue/pari/src/modules/galpol.c,41
galoisnbpol(18,623
galoisgetpol(32,986

/home/mengxue/pari/src/modules/groupid.c,209
groupelts_sumorders(18,626
vecgroup_sumorders(26,753
indexgroupsubgroup(34,877
indexgroupcentre(53,1253
vecgroup_idxlist(78,1758
group_ident_i(99,2275
group_ident(505,19379
group_ident_trans(515,19628

/home/mengxue/pari/src/modules/thue.c,2546
checktnf(30,1357
myround(50,1893
vecmax_shallow(58,2040
tnf_get_roots(61,2109
LogHeight(78,2523
absisqrtn(93,2815
get_emb(97,2925
Conj_LH(116,3338
T_A_Matrices(133,3704
get_prime_info(166,4861
inithue(205,5988
  GEN c10,285,8151
  GEN c10, c11,285,8151
  GEN c10, c11, c13,285,8151
  GEN c10, c11, c13, c15,285,8151
  GEN c10, c11, c13, c15, c91,285,8151
  GEN c10, c11, c13, c15, c91, bak,285,8151
  GEN c10, c11, c13, c15, c91, bak, NE,285,8151
  GEN c10, c11, c13, c15, c91, bak, NE, Ind,285,8151
  GEN c10, c11, c13, c15, c91, bak, NE, Ind, hal,285,8151
  GEN c10, c11, c13, c15, c91, bak, NE, Ind, hal, MatFU,285,8151
  GEN c10, c11, c13, c15, c91, bak, NE, Ind, hal, MatFU, divro,285,8151
  GEN c10, c11, c13, c15, c91, bak, NE, Ind, hal, MatFU, divro, Hmu;285,8151
  GEN delta,286,8220
  GEN delta, lambda,286,8220
  GEN delta, lambda, inverrdelta,286,8220
  GEN delta, lambda, inverrdelta, ro,286,8220
  GEN delta, lambda, inverrdelta, ro, Pi,286,8220
  GEN delta, lambda, inverrdelta, ro, Pi, Pi2;286,8220
  long r,287,8267
  long r, iroot,287,8267
  long r, iroot, deg;287,8267
} baker_s;288,8289
other_roots(291,8313
static GEN abslog(300,8503
Baker(304,8669
errnum(335,9656
CF_1stPass(343,9841
get_B0Bx(370,10503
LLL_1stPass(378,10701
add_sol(424,11981
add_pm(429,12175
CheckSol(443,12523
static const long EXPO1 462,13088
round_to_b(464,13128
Fl_factorback(508,13933
check_pr(526,14377
check_prinfo(536,14776
TrySol(546,15056
GuessQi(581,15957
myfloor(600,16382
MiddleSols(604,16524
check_y_root(663,18262
check_y(672,18436
SmallSols(688,18839
fact(740,20156
RgX_homogenize(748,20266
thueinit(759,20570
argsqr(856,23621
init_get_B(874,23958
get_B0(900,24632
get_Bx_LLL(946,26111
LargeSols(998,27779
filter_sol_x(1164,32725
tnf_get_Ind(1180,33050
tnf_get_bnf(1182,33109
maybe_warn(1185,33166
get_ne(1192,33410
get_neabs(1199,33580
ne2_to_xy(1208,33829
ne2V_to_xyV(1220,34049
sol_0(1229,34191
sols_from_R(1231,34252
thue(1242,34627
struct sol_abs1360,38808
  GEN rel;1362,38825
  GEN partrel;1363,38897
  GEN cyc;1364,38968
  long *f;f1366,39033
  long *n;n1367,39088
  long *next;next1368,39157
  long *S;S1369,39224
  long *u;u1370,39285
  GEN  normsol;1371,39351
  long nPR;1373,39420
  long sindex,1374,39462
  long sindex, smax;1374,39462
test_sol(1380,39644
fix_partrel(1406,40396
isintnorm_loop(1425,40948
get_sol_abs(1474,42345
get_unit_1(1558,44626
bnfisintnormabs(1572,45012
bnfisintnorm_i(1601,45864
bnfisintnorm(1649,47362

/home/mengxue/pari/src/modules/krasner.c,1484
#undef CHECK_EXTENSIONS23,930
  GEN p;30,1175
  long e,31,1184
  long e, f,31,1184
  long e, f, j;31,1184
  long a,32,1200
  long a, b,32,1200
  long a, b, c;32,1200
  long v;33,1216
  long r;34,1255
  GEN pr;35,1284
  GEN q,36,1341
  GEN q, qm1;36,1341
  GEN upl;37,1372
  GEN mv;38,1446
  GEN uplr;39,1486
  GEN frob;40,1524
  GEN nbext;41,1589
  GEN roottable;42,1630
  GEN pk;43,1706
} KRASNER_t;44,1760
  GEN p;48,1862
  GEN top;49,1871
  GEN topr;50,1936
  GEN eis;51,2000
  GEN zq;52,2067
  GEN pi;53,2141
  GEN ipi;54,2190
  GEN pik;55,2255
  long cj;56,2336
} FAD_t;57,2381
ceildiv(60,2403
ZX_z_eval(69,2569
ZXY_z_eval(83,2881
FqX_FpXQ_eval(97,3237
InitSieve(125,3732
NextZeroValue(127,3786
SetSieveValue(134,3947
VerifyOre(139,4100
possible_efj_by_d(160,4627
NumberExtensions(179,5109
get_topx(211,5875
FieldData(235,6648
DivideByPi(271,7755
GetSharp(294,8346
PrintValuations(338,9292
DegreeMod(347,9527
Quick_FqX_roots(365,9899
FreeRootTable(384,10296
RootCongruents(398,10657
RootCountingAlgorithm(435,11661
IsIsomorphic(459,12338
NbConjugateFields(479,12898
TamelyRamifiedCase(507,13689
function_l(588,15577
StructureOmega(601,15978
RandomFF(630,16661
RandomPol(639,16892
CloneFieldData(670,17708
FreeFieldData(681,17990
WildlyRamifiedCase(693,18201
CycloPol(773,20442
get_pk(791,20932
GetRamifiedPol(805,21388
possible_efj(874,23126
pols_from_efj(918,24502
padicfields0(935,25227
padicfields0(935,25227
padicfields(963,25915

/home/mengxue/pari/src/modules/kummer.c,1790
  GEN R;23,981
  GEN x;24,1003
  GEN zk;25,1036
} tau_s;26,1085
  GEN polnf,29,1112
  GEN polnf, invexpoteta1,29,1112
  GEN polnf, invexpoteta1, powg;29,1112
  tau_s *tau;tau30,1145
  long m;31,1159
} toK_s;32,1169
  GEN R;35,1196
  GEN p;36,1231
  GEN q;37,1269
  long k;38,1307
  GEN rev;39,1351
} compo_s;40,1362
prank(43,1386
increment(53,1591
ok_congruence(66,1779
ok_sign(80,2075
logarch2arch(89,2219
reduce_mod_Qell(107,2579
idealsqrtn(125,3008
reducebeta(145,3470
tauofalg(186,4629
get_tau(194,4837
tauofelt(214,5314
tauofvec(224,5511
powtau(233,5699
lambdaofelt(243,5891
lambdaofvec(256,6174
tauoffamat(265,6332
tauofideal(271,6430
isprimeidealconj(277,6538
isconjinprimelist(294,6936
downtoK(307,7181
no_sol(315,7387
get_gell(322,7516
  GEN Sm,333,7783
  GEN Sm, Sml1,333,7783
  GEN Sm, Sml1, Sml2,333,7783
  GEN Sm, Sml1, Sml2, Sl,333,7783
  GEN Sm, Sml1, Sml2, Sl, ESml2;333,7783
} primlist;334,7816
build_list_Hecke(337,7840
logall(390,9226
get_u(409,9697
isprincipalell(420,9942
famat_factorback(436,10383
compute_beta(446,10586
get_Selmer(458,10909
lift_if_rational(466,11127
grptocol(496,11732
fix_kernel(512,12135
Flm_init(602,14894
Flv_fill(609,15046
get_badbnf(616,15145
get_prlist(638,15814
subgroup_info(690,17349
rnfkummersimple(722,18411
isvirtualunit(891,23406
Stelt(918,24242
polrelKzK(936,24595
invimsubgroup(946,24858
pol_from_Newton(972,25657
get_mmu(989,26073
get_reverse(998,26306
split_pol(1008,26507
mod_Xell_a(1024,26923
to_alg(1033,27196
compute_polrel(1044,27400
lifttoKz(1117,30237
ideallifttoKz(1125,30431
prlifttoKz(1137,30927
get_przlist(1150,31339
compositum_red(1159,31529
nfX_Z_normalize(1179,32205
Fl_powers_FpV(1205,32762
_rnfkummer(1215,32957
rnfkummer(1470,41024

/home/mengxue/pari/src/modules/algebras.c,6146
checkalg_i(34,1520
checkalg(47,1903
alg_type(52,2026
algtype(66,2349
alg_get_dim(71,2455
algdim(83,2764
alg_get_absdim(87,2827
algabsdim(99,3189
alg_get_auts(104,3275
alg_get_aut(111,3417
algaut(118,3571
alg_get_b(120,3632
algb(127,3768
alg_get_relmultable(131,3841
algrelmultable(138,4009
alg_get_splittingdata(140,4086
algsplittingdata(147,4257
alg_get_splittingbasis(149,4338
alg_get_splittingbasisinv(156,4515
alg_get_splitting(165,4725
algsplittingfield(167,4777
alg_get_degree(177,4993
algdegree(186,5198
alg_get_center(193,5270
alggetcenter(202,5470
alg_get_splitpol(208,5544
alg_get_abssplitting(216,5743
alg_get_hasse_i(225,6014
alghassei(234,6271
alg_get_hasse_f(236,6339
alghassef(245,6596
alg_get_ord(249,6681
algbasis(251,6727
alg_get_invord(253,6790
alginvbasis(255,6839
alg_get_multable(257,6908
alggetmultable(259,6959
alg_get_char(261,7033
algchar(263,7081
alg_get_tracebasis(265,7144
rnfrealdec(271,7253
backtrackfacto(283,7552
factoredextchinesetest(330,8714
factoredextchinese(359,9562
algtensor(420,11971
Flm_invimage_init(459,13185
Flm_invimage_pre(467,13449
algradical(474,13593
alg_quotient0(531,15150
alg_quotient(548,15614
alg_quotient(548,15614
alg_centralproj(577,16327
alg_centralproj(577,16327
algcenter(611,17270
GEN gp_algcenter(635,17887
algprimesubalg(644,18085
_FpX_mul(668,18549
_FpX_pow(670,18624
FpX_factorback(672,18706
out_decompose(678,18841
alg_decompose0(687,19140
random_pm1(716,19941
try_fact(728,20250
randcol(752,20959
alg_decompose(767,21314
alg_decompose_total(806,22149
alg_subalg(846,23097
algsubalg(871,23798
algsimpledec(883,24061
alg_decomposition(904,24509
alg_decomposition(904,24509
check_mt(918,24928
algisassociative(936,25370
algiscommutative(976,26469
algissemisimple(1000,27017
algissimple(1013,27233
is_place_prid_i(1035,27653
is_place_prid(1050,28067
linear_prime_search(1061,28492
alghasse_emb(1070,28639
alghasse_pr(1081,28840
alghasse_0(1093,29035
alghasse(1109,29471
indexfromhasse(1118,29639
algindex(1121,29700
algisdivision(1153,30363
algissplit(1165,30637
algisramified(1173,30799
algramifiedplaces(1181,30967
alg_model0(1212,31649
checkalgx(1252,32728
long alg_model(1275,33249
alC_add_i(1284,33417
alM_add(1292,33589
algadd(1304,33935
algneg(1324,34388
alC_sub_i(1327,34479
alM_sub(1335,34651
algsub(1347,34997
algalgmul_cyc(1367,35458
_tablemul(1406,36447
_tablemul_Fp(1424,36825
_tablemul_ej(1443,37227
_tablemul_ej_Fp(1460,37600
algbasismul_ej(1478,37986
_tablemul_ej_Fl(1482,38110
algalgmul_csa(1500,38491
algalgmul(1505,38632
algbasismul(1516,38836
alMrow_alC_mul_i(1525,39075
alM_alC_mul_i(1540,39477
alM_mul(1548,39657
algmul(1561,39979
algsqr(1581,40575
algmtK2Z_cyc(1595,40972
algmtK2Z_csa(1620,41642
algmtK2Z(1645,42277
algalgmultable_cyc(1657,42589
elementmultable(1685,43306
elementabsmultable(1699,43583
elementabsmultable_Fp(1715,43930
algalgmultable_csa(1729,44225
algalgmultable(1736,44363
algZmultable(1749,44637
algbasisrightmultable(1766,45056
algbasismultable(1782,45424
algbasismultable_Flm(1790,45653
algmat2basis(1808,46167
algbasis2mat(1827,46598
algmatbasis_ei(1850,47092
algmultable_mat(1880,47585
algmultable(1897,48043
gp_algmultable(1915,48493
gp_algmultable(1915,48493
algbasissplittingmatrix_csa(1922,48602
algsplittingmatrix(1936,49060
algdivl_i(1969,49941
algdivl_i2(1987,50540
GEN algdivl(2004,51000
algisdivl(2013,51128
alginv_i(2024,51318
alginv(2051,52321
algisinv(2061,52448
algdivr(2074,52659
static GEN _mul(2076,52731
static GEN _sqr(2077,52807
algmatid(2080,52886
algpow(2096,53185
algredcharpoly_i(2114,53672
algredcharpoly(2125,53943
algbasischarpoly(2138,54169
algcharpoly(2153,54553
algabstrace(2174,55070
algredtrace(2187,55433
algtrace_mat(2211,56078
algtrace(2229,56615
ZM_trace(2241,56912
FpM_trace(2251,57122
algtracebasis(2262,57345
algtracei(2276,57822
algnorm(2287,58051
algalgtonat_cyc(2318,58849
algalgtonat_csa(2336,59301
algalgtonat(2354,59718
algnattoalg_cyc(2365,59922
algnattoalg_csa(2380,60335
algnattoalg(2396,60724
algalgtobasis_mat(2407,60928
algalgtobasis(2423,61284
algbasistoalg_mat(2439,61675
algbasistoalg(2455,62031
algrandom(2471,62416
algpoleval(2495,63141
uispow2(2534,64097
get_phi0(2537,64150
bnrgwsearch(2623,66434
bnfgwgeneric(2638,66813
bnrconj(2680,68249
localextdeg(2692,68535
nfgwkummer(2714,69210
get_vecsmall(2746,70029
nfgrunwaldwang(2757,70234
hasseconvert(2816,72111
cyclicrelfrob0(2850,73032
rnfprimedec(2866,73417
cyclicrelfrob(2874,73578
localhasse(2900,74201
allauts(2937,75325
clean_factor(2951,75638
colconcat(2969,76101
nfmakecoprime(2980,76363
computecnd(3013,77218
nextgen(3029,77633
dividesmod(3040,77898
localcomplete(3044,78025
testsplits(3114,79878
hassereduce(3136,80393
pr_primes(3154,80770
alg_complete0(3163,80929
alg_complete(3246,83201
checkhasse(3253,83381
hassecoprime(3283,84615
zv_z_div(3317,85385
hassewedderburn(3326,85512
alldegmultiple(3350,86053
searchprimedeg(3360,86243
sortedp(3386,86875
solvablecrt(3395,87065
hdown(3409,87325
hassedown0(3425,87773
hassedown(3475,89051
genefrob(3482,89202
rnfcycaut(3497,89559
alg_hasse(3528,90339
linindep(3567,91458
subcycloindep(3580,91656
alg_matrix(3600,92183
alg_hilbert(3615,92637
alginit(3635,93148
algnatmultable(3665,93976
algcomputehasse(3679,94219
pr_idem(3759,96663
alg_maximal_primes(3776,96993
alg_cyclic(3789,97200
ismaximalsubfield(3839,98472
findmaximalsubfield(3849,98761
frobeniusform(3878,99512
computesplitting(3892,99778
alg_csa_table(3935,101083
algtableinit(3970,102144
mattocol(3997,102775
algleftordermodp(4009,103029
alg_ordermodp(4037,103719
algpradical_i(4053,104114
algpradical(4104,105341
algpdecompose0(4112,105495
algpdecompose_i(4158,106628
algpdecompose(4167,106840
alg_change_overorder_shallow(4177,107106
alg_changeorder_shallow(4213,107923
alg_changeorder(4237,108414
algfromcenter(4246,108569
algfromcenterhnf(4265,108943
algcenter_precompute(4276,109156
algcenter_prad(4295,109661
algcenter_p_projs(4310,110052
alg_pmaximal_i(4322,110336
alg_pmaximal(4360,111377
algtracematrix(4367,111492
algdisc(4383,111802
alg_maximal(4390,111928

/home/mengxue/pari/src/kernel/arm/asm0.h,227
#define LOCAL_HIREMAINDER 18,626
#define LOCAL_OVERFLOW 19,680
#define addll(21,732
#define addllx(29,979
#define subll(38,1266
#define subllx(47,1535
#define mulll(56,1838
#define addmul(64,2054
#define bfffo(73,2344

/home/mengxue/pari/src/kernel/none/bfffo.h,64
#  define bfffo(22,738
#  define bfffo(34,1190
bfffo(49,1599

/home/mengxue/pari/src/kernel/none/add.c,232
icopy_sign(16,624
addsi_sign(24,708
addui_sign(57,1344
addii_sign(87,1919
rcopy_sign(114,2480
addir_sign(117,2560
addsr_sign(145,3101
addsr(174,3675
subsr(177,3740
addrex01(181,3878
subrex01(194,4251
addrr_sign(215,4758

/home/mengxue/pari/src/kernel/none/level1.h,5282
evallg(20,813
evalvalp(26,911
evalexpo(33,1031
evalprecp(40,1151
varncmp(48,1303
stackdummy(63,1816
fixlg(74,2061
affrr_fixlg(88,2403
new_chunk(96,2825
stack_malloc(118,3392
stack_calloc(125,3491
cgetg_copy(133,3649
cgetg_block(139,3791
cgetg(146,3910
cgeti(153,4024
cgetipos(160,4134
cgetineg(167,4238
cgetr_block(174,4343
cgetr(181,4459
leafcopy(195,4978
icopy(203,5188
icopyspec(212,5396
INLINE GEN rcopy(221,5650
INLINE GEN mpcopy(222,5698
mpabs(225,5759
mpabs_shallow(227,5833
INLINE GEN absi(228,5892
INLINE GEN absi_shallow(229,5936
INLINE GEN absr(230,6004
mpneg(233,6060
INLINE GEN negi(234,6123
INLINE GEN negr(235,6167
togglesign(239,6246
setabssign(241,6322
togglesign_safe(244,6424
affectsign(257,6720
affectsign_safe(263,6869
utoineg(274,7364
utoipos(277,7473
utoi(279,7546
stoi(281,7604
uutoi(289,7730
uutoineg(299,7907
itos(309,8080
itos_or_0(322,8333
itou(328,8464
itou_or_0(341,8723
real_0_bit(347,8811
real_0(349,8901
real_1(351,8972
real_m1(359,9145
real2n(369,9332
real_m2n(371,9420
stor(373,9511
utor(375,9593
itor(377,9675
rtor(379,9756
INLINE ulong int_bit(381,9827
cmpir(393,10321
cmpri(408,10604
cmpsr(410,10659
cmprs(420,10817
cmpui(423,10897
cmpiu(435,11109
cmpsi(437,11166
cmpis(457,11543
mpcmp(459,11599
equalsi(468,11778
equalui(481,12059
equaliu(487,12174
equalis(489,12234
absrnz_equal2n(493,12331
absrnz_equal1(505,12544
maxss(508,12620
minss(510,12674
minuu(512,12728
maxuu(514,12784
maxdd(516,12842
mindd(518,12902
subuu(526,13310
adduu(534,13438
addss(537,13519
INLINE GEN subss(548,13784
subii(551,13853
addii(557,13996
addrr(559,14076
subrr(561,14156
addir(563,14237
subir(565,14317
subri(567,14398
addsi(569,14479
addui(571,14550
subsi(573,14622
subui(575,14694
INLINE ulong mod2BIL(582,15107
INLINE long mod64(583,15159
INLINE long mod32(584,15212
INLINE long mod16(585,15265
INLINE long mod8(586,15318
INLINE long mod4(587,15370
INLINE long mod2(588,15422
mpodd(590,15485
truedivii(593,15542
truedivis(595,15609
truedivsi(597,15678
divii(600,15748
remii(602,15808
divss(605,15873
modss(607,15930
remss(609,15994
smodss(611,16052
umodsu(617,16143
sdivss_rem(623,16224
divss_rem(634,16523
udivuu_rem(636,16607
udivui_rem(643,16736
udiviu_rem(658,17128
sdivsi_rem(682,17533
divsi_rem(695,17909
sdivsi(698,17992
dvmdss(711,18227
dvmdsBIL(718,18340
dvmduBIL(720,18419
dvmdsi(722,18498
dvmdis(729,18609
smodis(737,18722
modis(744,18863
modsi(746,18925
umodui(753,19053
remsi(761,19203
remis(764,19290
rdivis(772,19413
rdivsi(780,19563
rdivss(788,19714
rdiviiz(797,19869
rdivii(811,20128
fractor(825,20393
dvdii(828,20476
dvdsi(835,20584
dvdui(842,20709
dvdis(849,20835
dvdiu(852,20915
dvdisz(856,20997
dvdiuz(865,21164
dvdiiz(874,21333
remlll_pre(885,21521
Fl_sqr_pre(892,21673
Fl_mul_pre(901,21832
Fl_addmul_pre(910,22000
Fl_addmulmul_pre(920,22214
Fl_ellj_pre(932,22570
mptrunc(950,23306
mpfloor(952,23379
mpceil(954,23452
mpround(956,23523
mpexpo(959,23600
mpadd(962,23672
mpsub(969,23834
mpmul(976,23996
mpsqr(983,24158
mpdiv(985,24230
Fl_double(998,24745
Fl_triple(1004,24860
Fl_halve(1012,25022
Fl_add(1021,25179
Fl_neg(1027,25299
Fl_sub(1030,25363
Fl_center(1038,25496
Fl_mul(1041,25588
Fl_sqr(1050,25772
Fl_div(1059,25947
addri(1067,26382
addis(1069,26436
addiu(1071,26491
addrs(1073,26547
subiu(1076,26603
subis(1078,26685
subrs(1080,26741
mulis(1083,26798
muliu(1085,26853
mulru(1087,26909
mulri(1089,26965
mulrs(1091,27019
vali(1099,27426
expu(1113,27621
expi(1116,27694
shiftr(1123,27831
mpshift(1132,28024
shift_left(1138,28263
shift_right(1152,28672
shiftl(1167,29058
shiftlr(1171,29151
shiftr_inplace(1175,29244
affii(1186,29666
affsi(1193,29819
affui(1203,30057
affsr(1210,30204
affur(1232,30579
affiz(1247,30833
affsz(1249,30917
mpaff(1251,31002
INLINE void addiiz(1259,31427
INLINE void addirz(1261,31522
INLINE void addriz(1263,31617
INLINE void addrrz(1265,31712
INLINE void addsiz(1267,31807
INLINE void addsrz(1269,31903
INLINE void addssz(1271,31999
INLINE void diviiz(1274,32097
INLINE void divirz(1276,32192
INLINE void divisz(1278,32287
INLINE void divriz(1280,32383
INLINE void divrrz(1282,32478
INLINE void divrsz(1284,32573
INLINE void divsiz(1286,32669
INLINE void divsrz(1288,32758
INLINE void divssz(1290,32854
INLINE void modisz(1293,32916
INLINE void modsiz(1295,33012
INLINE void modssz(1297,33108
INLINE void mpaddz(1300,33206
INLINE void mpsubz(1302,33301
INLINE void mpmulz(1304,33396
INLINE void muliiz(1307,33492
INLINE void mulirz(1309,33587
INLINE void mulriz(1311,33682
INLINE void mulrrz(1313,33777
INLINE void mulsiz(1315,33872
INLINE void mulsrz(1317,33968
INLINE void mulssz(1319,34064
INLINE void remiiz(1322,34162
INLINE void remisz(1324,34257
INLINE void remsiz(1326,34353
INLINE void remssz(1328,34449
INLINE void subiiz(1331,34547
INLINE void subirz(1333,34642
INLINE void subisz(1335,34737
INLINE void subriz(1337,34834
INLINE void subrrz(1339,34929
INLINE void subrsz(1341,35024
INLINE void subsiz(1343,35121
INLINE void subsrz(1345,35217
INLINE void subssz(1347,35313
dvmdssz(1350,35388
dvmdsiz(1356,35528
dvmdisz(1362,35667
dvmdiiz(1368,35805

/home/mengxue/pari/src/kernel/none/mpinl.c,149
#define PARI_NO_PARIINL_H13,572
#define INLINE14,598
#  define DISABLE_INLINE16,636
ulong hiremainder,19,686
ulong hiremainder, overflow;19,686

/home/mengxue/pari/src/kernel/none/cmp.c,123
equalii(25,1028
cmpii(32,1193
equalrr(45,1473
cmprr(76,2009
absi_equal(110,2743
absi_cmp(119,2950
absr_cmp(128,3156

/home/mengxue/pari/src/kernel/none/ratlift.c,38
get_vmax(49,2040
Fp_ratlift(74,2717

/home/mengxue/pari/src/kernel/none/mp_indep.c,1704
invmod2BIL(17,695
affrr(31,989
trunc2nr(50,1311
mantissa_real(60,1518
mului(67,1615
mulsi(78,1773
mulss(90,1968
sqrs(106,2357
muluu(116,2504
sqru(125,2649
mulur_2(136,2839
mul0r(154,3323
div0r(162,3479
mulsr(168,3575
mulur(188,3897
mulrrz_end(200,4096
mulrrz_3end(223,4631
sqrz_i(245,5171
mulrrz_int(310,6444
mulrrz_3(320,6679
mulrrz_i(339,7169
mulrr(388,8335
sqrr(406,8749
mulir(418,8908
addmulii_gen(449,9824
addmulii_lg3(463,10176
addmulii(488,10783
addmulii_inplace(500,11070
vals(515,11377
divsi(538,11927
divir(552,12243
divur(571,12588
divsr(590,12950
invr_basecase(611,13396
invr(621,13581
modii(653,14402
modiiz(671,14721
divrs(678,14817
divru(692,14972
truedvmdii(753,16264
truedvmdis(780,16870
truedvmdsi(799,17179
int2n(817,17508
int2u(831,17819
shifti(843,18015
mulii(856,18271
sqri(869,18502
usqrt(874,18666
dblexpo(891,19179
  union { double f;893,19199
  union { double f; ulong i;893,19199
dblmantissa(903,19456
  union { double f;905,19480
  union { double f; ulong i;905,19480
dbltor(914,19657
  union { double f;918,19695
  union { double f; ulong i;918,19695
rtodbl(945,20407
  union { double f;949,20456
  union { double f; ulong i;949,20456
#  define INDEX0 968,21054
#  define INDEX1 969,21073
#  define INDEX0 971,21122
#  define INDEX1 972,21141
dblexpo(976,21173
  union { double f;978,21193
  union { double f; ulong i[i978,21193
dblmantissa(992,21524
  union { double f;994,21548
  union { double f; ulong i[i994,21548
dbltor(1007,21834
  union { double f;1011,21872
  union { double f; ulong i[i1011,21872
rtodbl(1056,22963
  union { double f;1060,23025
  union { double f; ulong i[i1060,23025

/home/mengxue/pari/src/kernel/none/tune-gen.h,1614
long AGM_ATAN_LIMIT 2,17
long DIVRR_GMP_LIMIT 3,73
long EXPNEWTON_LIMIT 4,130
long Flx_BARRETT_HALFMULII_LIMIT 5,187
long Flx_BARRETT_KARATSUBA_LIMIT 6,256
long Flx_BARRETT_MULII2_LIMIT 7,325
long Flx_BARRETT_MULII_LIMIT 8,391
long Flx_DIVREM_BARRETT_LIMIT 9,456
long Flx_EXTGCD_LIMIT 10,522
long Flx_GCD_LIMIT 11,580
long Flx_HALFGCD_KARATSUBA_LIMIT 12,635
long Flx_HALFGCD_HALFMULII_LIMIT 13,704
long Flx_HALFGCD_MULII2_LIMIT 14,773
long Flx_HALFGCD_MULII_LIMIT 15,839
long Flx_INVBARRETT_HALFMULII_LIMIT 16,904
long Flx_INVBARRETT_KARATSUBA_LIMIT 17,976
long Flx_INVBARRETT_MULII2_LIMIT 18,1048
long Flx_INVBARRETT_MULII_LIMIT 19,1117
long Flx_MUL_HALFMULII_LIMIT 20,1185
long Flx_MUL_KARATSUBA_LIMIT 21,1250
long Flx_MUL_MULII2_LIMIT 22,1315
long Flx_MUL_MULII_LIMIT 23,1377
long Flx_REM_BARRETT_LIMIT 24,1438
long Flx_SQR_HALFSQRI_LIMIT 25,1501
long Flx_SQR_KARATSUBA_LIMIT 26,1565
long Flx_SQR_SQRI2_LIMIT 27,1630
long Flx_SQR_SQRI_LIMIT 28,1691
long FpX_BARRETT_LIMIT 29,1751
long FpX_DIVREM_BARRETT_LIMIT 30,1810
long FpX_EXTGCD_LIMIT 31,1876
long FpX_GCD_LIMIT 32,1934
long FpX_HALFGCD_LIMIT 33,1989
long FpX_INVBARRETT_LIMIT 34,2048
long FpX_REM_BARRETT_LIMIT 35,2110
long Fp_POW_BARRETT_LIMIT 36,2173
long Fp_POW_REDC_LIMIT 37,2235
long INVMOD_GMP_LIMIT 38,2294
long INVNEWTON_LIMIT 39,2352
long LOGAGMCX_LIMIT 40,2409
long LOGAGM_LIMIT 41,2465
long MULII_FFT_LIMIT 42,2519
long MULII_KARATSUBA_LIMIT 43,2576
long MULRR_MULII_LIMIT 44,2639
long RgX_MUL_LIMIT 45,2698
long RgX_SQR_LIMIT 46,2753
long SQRI_FFT_LIMIT 47,2808
long SQRI_KARATSUBA_LIMIT 48,2864

/home/mengxue/pari/src/kernel/none/gcd.c,52
resiu(17,660
gcd_plus_minus(30,945
gcdii(63,1613

/home/mengxue/pari/src/kernel/none/divll_pre.h,266
#undef  LOCAL_HIREMAINDER15,614
#define LOCAL_HIREMAINDER 18,735
#define LOCAL_HIREMAINDER20,794
get_Fl_red(25,940
get_Fl_red(34,1097
divll_pre_normalized(46,1306
remll_pre_normalized(67,1706
remll_pre(82,2043
#define divll_pre(106,2710
divll_pre(121,3576

/home/mengxue/pari/src/kernel/none/invmod.c,21
invmod_pari(28,1032

/home/mengxue/pari/src/kernel/none/gcdext.c,16
bezout(30,1122

/home/mengxue/pari/src/kernel/none/divll.h,243
#undef  LOCAL_HIREMAINDER20,769
#define LOCAL_HIREMAINDER21,795
#define __GLUE(28,913
#define __SPLIT(29,973
#define __LDIV(30,1030
#undef LOCAL_HIREMAINDER37,1286
#define LOCAL_HIREMAINDER 38,1311
#define divll(40,1365
divll(99,5488

/home/mengxue/pari/src/kernel/none/int.h,182
#define int_MSW(15,608
#define int_LSW(18,709
#define int_precW(21,824
#define int_nextW(25,946
#define int_W(29,1064
#define int_W_lg(32,1188
#define PARI_KERNEL_NONE36,1337

/home/mengxue/pari/src/kernel/none/mp.c,1817
void pari_kernel_init(24,1063
void pari_kernel_close(25,1095
#define LIMBS(32,1397
#define NLIMBS(33,1423
int_normalize(37,1500
setloop(62,2422
resetloop(71,2640
incpos(80,2842
incneg(93,3126
incloop(119,3634
adduispec(133,3898
adduispec_offset(157,4425
addiispec(166,4624
subiuspec(202,5458
subiispec(230,6021
roundr_up_ip(264,6775
affir(275,6945
shiftispec(313,7706
mantissa2nr(357,8685
truncr(369,8909
floorr(388,9332
cmpiispec(422,10100
equaliispec(433,10323
muluispec(448,10869
addumului(465,11255
umodiu(495,12160
diviu_rem(527,12805
divis_rem(560,13410
divis(596,14255
divrr(630,14886
divri(750,17808
dvmdii(776,18511
red_montgomery(970,23137
  avma 1060,25655
diviuexact_i(1067,25797
diviuexact(1112,26841
diviiexact(1145,27656
diviuuexact(1220,29589
muliispec_basecase(1241,30314
sqrispec_basecase(1280,31186
mulliifft_params(1362,33221
Zf_add(1384,33685
Zf_sub(1396,33907
Zf_red_destroy(1404,34026
Zf_shift(1419,34318
Zf_mulsqrt2(1427,34509
Zf_sqr(1445,34899
Zf_mul(1448,34971
muliifft_dit(1452,35088
muliifft_dis(1475,35696
muliifft_spliti(1498,36245
muliifft_unspliti(1524,36784
sqrispec_fft(1551,37362
muliispec_fft(1582,38017
addshiftw(1624,39249
muliispec(1655,39981
muluui(1703,41113
#define sqrispec_mirror 1723,41471
#define muliispec_mirror 1724,41504
remi2n(1728,41577
sqrispec(1760,42283
static const unsigned char approx_tab[approx_tab1800,43578
p_sqrtu1(1818,44532
p_sqrtu2(1852,45485
xmpn_zero(1890,46393
xmpn_copy(1895,46461
catii(1902,46597
sqrtispec2(1913,46833
sqrtispec1_sh(1924,47038
sqrtispec2_sh(1948,47560
sqrtispec(1982,48454
sqrtremi(2011,49251
sqrtr_abs(2056,50358
sqrtu2(2088,51234
sqrtu2_1(2101,51579
sqrtu2(2111,51763
sqrtu2_1(2114,51876
sqrtr_abs(2118,51950
convi_dac(2158,53109
convi(2173,53413

/home/mengxue/pari/src/kernel/none/mulll.h,213
#undef  LOCAL_HIREMAINDER15,610
#define LOCAL_HIREMAINDER16,636
#undef LOCAL_HIREMAINDER42,1438
#define LOCAL_HIREMAINDER 43,1463
#define mulll(45,1517
#define addmul(67,2186
mulll(94,2981
addmul(116,3490

/home/mengxue/pari/src/kernel/none/tune.h,3718
#define __AGM_ATAN_LIMIT 2,21
#define __DIVRR_GMP_LIMIT 3,65
#define __EXPNEWTON_LIMIT 4,109
#define __Flx_BARRETT_HALFMULII_LIMIT 5,153
#define __Flx_BARRETT_KARATSUBA_LIMIT 6,197
#define __Flx_BARRETT_MULII2_LIMIT 7,243
#define __Flx_BARRETT_MULII_LIMIT 8,287
#define __Flx_DIVREM_BARRETT_LIMIT 9,333
#define __Flx_EXTGCD_LIMIT 10,379
#define __Flx_GCD_LIMIT 11,424
#define __Flx_HALFGCD_HALFMULII_LIMIT 12,470
#define __Flx_HALFGCD_KARATSUBA_LIMIT 13,514
#define __Flx_HALFGCD_MULII2_LIMIT 14,558
#define __Flx_HALFGCD_MULII_LIMIT 15,602
#define __Flx_INVBARRETT_HALFMULII_LIMIT 16,646
#define __Flx_INVBARRETT_KARATSUBA_LIMIT 17,691
#define __Flx_INVBARRETT_MULII2_LIMIT 18,737
#define __Flx_INVBARRETT_MULII_LIMIT 19,781
#define __Flx_MUL_HALFMULII_LIMIT 20,827
#define __Flx_MUL_KARATSUBA_LIMIT 21,870
#define __Flx_MUL_MULII2_LIMIT 22,915
#define __Flx_MUL_MULII_LIMIT 23,958
#define __Flx_REM_BARRETT_LIMIT 24,1004
#define __Flx_SQR_HALFSQRI_LIMIT 25,1050
#define __Flx_SQR_KARATSUBA_LIMIT 26,1093
#define __Flx_SQR_SQRI2_LIMIT 27,1138
#define __Flx_SQR_SQRI_LIMIT 28,1181
#define __FpX_BARRETT_LIMIT 29,1224
#define __FpX_DIVREM_BARRETT_LIMIT 30,1268
#define __FpX_EXTGCD_LIMIT 31,1313
#define __FpX_GCD_LIMIT 32,1358
#define __FpX_HALFGCD_LIMIT 33,1403
#define __FpX_INVBARRETT_LIMIT 34,1447
#define __FpX_REM_BARRETT_LIMIT 35,1492
#define __Fp_POW_BARRETT_LIMIT 36,1537
#define __Fp_POW_REDC_LIMIT 37,1582
#define __INVMOD_GMP_LIMIT 38,1626
#define __INVNEWTON_LIMIT 39,1670
#define __LOGAGMCX_LIMIT 40,1715
#define __LOGAGM_LIMIT 41,1759
#define __MULII_FFT_LIMIT 42,1803
#define __MULII_KARATSUBA_LIMIT 43,1849
#define __MULRR_MULII_LIMIT 44,1893
#define __RgX_MUL_LIMIT 45,1938
#define __RgX_SQR_LIMIT 46,1981
#define __SQRI_FFT_LIMIT 47,2025
#define __SQRI_KARATSUBA_LIMIT 48,2071
#define __AGM_ATAN_LIMIT 50,2121
#define __DIVRR_GMP_LIMIT 51,2166
#define __EXPNEWTON_LIMIT 52,2210
#define __Flx_BARRETT_HALFMULII_LIMIT 53,2254
#define __Flx_BARRETT_KARATSUBA_LIMIT 54,2299
#define __Flx_BARRETT_MULII2_LIMIT 55,2344
#define __Flx_BARRETT_MULII_LIMIT 56,2390
#define __Flx_DIVREM_BARRETT_LIMIT 57,2436
#define __Flx_EXTGCD_LIMIT 58,2482
#define __Flx_GCD_LIMIT 59,2527
#define __Flx_HALFGCD_HALFMULII_LIMIT 60,2573
#define __Flx_HALFGCD_KARATSUBA_LIMIT 61,2618
#define __Flx_HALFGCD_MULII2_LIMIT 62,2663
#define __Flx_HALFGCD_MULII_LIMIT 63,2709
#define __Flx_INVBARRETT_HALFMULII_LIMIT 64,2754
#define __Flx_INVBARRETT_KARATSUBA_LIMIT 65,2799
#define __Flx_INVBARRETT_MULII2_LIMIT 66,2845
#define __Flx_INVBARRETT_MULII_LIMIT 67,2891
#define __Flx_MUL_HALFMULII_LIMIT 68,2937
#define __Flx_MUL_KARATSUBA_LIMIT 69,2980
#define __Flx_MUL_MULII2_LIMIT 70,3024
#define __Flx_MUL_MULII_LIMIT 71,3070
#define __Flx_REM_BARRETT_LIMIT 72,3115
#define __Flx_SQR_HALFSQRI_LIMIT 73,3161
#define __Flx_SQR_KARATSUBA_LIMIT 74,3204
#define __Flx_SQR_SQRI2_LIMIT 75,3249
#define __Flx_SQR_SQRI_LIMIT 76,3295
#define __FpX_BARRETT_LIMIT 77,3341
#define __FpX_DIVREM_BARRETT_LIMIT 78,3386
#define __FpX_EXTGCD_LIMIT 79,3431
#define __FpX_GCD_LIMIT 80,3476
#define __FpX_HALFGCD_LIMIT 81,3522
#define __FpX_INVBARRETT_LIMIT 82,3567
#define __FpX_REM_BARRETT_LIMIT 83,3612
#define __Fp_POW_BARRETT_LIMIT 84,3657
#define __Fp_POW_REDC_LIMIT 85,3701
#define __INVMOD_GMP_LIMIT 86,3745
#define __INVNEWTON_LIMIT 87,3789
#define __LOGAGMCX_LIMIT 88,3834
#define __LOGAGM_LIMIT 89,3878
#define __MULII_FFT_LIMIT 90,3922
#define __MULII_KARATSUBA_LIMIT 91,3968
#define __MULRR_MULII_LIMIT 92,4012
#define __RgX_MUL_LIMIT 93,4057
#define __RgX_SQR_LIMIT 94,4100
#define __SQRI_FFT_LIMIT 95,4144
#define __SQRI_KARATSUBA_LIMIT 96,4190

/home/mengxue/pari/src/kernel/none/gcdll.c,251
gcduodd(25,1168
mygcduodd(61,2507
cgcd(83,2801
ugcd(94,3065
igcduu(107,3347
clcm(117,3546
xgcduu(218,8922
xxgcduu(287,11077
rgcduu(350,12430
cbezout(432,14493
lgcdii(555,18850
Fl_invsafe(1068,38763
Fl_invgen(1080,39036
Fl_inv(1091,39218

/home/mengxue/pari/src/kernel/none/addll.h,277
#undef LOCAL_OVERFLOW20,769
#define LOCAL_OVERFLOW21,791
#undef LOCAL_OVERFLOW32,1066
#define LOCAL_OVERFLOW 33,1088
#define addll(35,1136
#define addllx(42,1470
#define subll(51,1932
#define subllx(58,2256
addll(70,2704
addllx(78,2805
subll(86,2940
subllx(94,3043

/home/mengxue/pari/src/kernel/ix86/asm0.h,308
#define LOCAL_HIREMAINDER 30,1036
#define LOCAL_OVERFLOW 31,1090
#define addll(33,1142
#define addllx(42,1400
#define addllx8(51,1729
#define subll(68,2661
#define subllx(77,2919
#define subllx8(86,3248
#define mulll(104,4181
#define addmul(112,4423
#define divll(120,4751
#define bfffo(128,5028

/home/mengxue/pari/src/kernel/hppa/asm0.h,205
#define LOCAL_HIREMAINDER 25,853
#define LOCAL_OVERFLOW 26,907
#define addll(28,959
#define addllx(37,1211
#define subll(46,1515
#define subllx(55,1783
#define mulll(64,2088
#define addmul(75,2374

/home/mengxue/pari/src/kernel/ppc/asm0.h,227
#define LOCAL_HIREMAINDER 18,629
#define LOCAL_OVERFLOW 19,683
#define addll(21,735
#define addllx(29,993
#define bfffo(37,1291
#define subll(43,1436
#define subllx(51,1697
#define mulll(59,2004
#define addmul(67,2235

/home/mengxue/pari/src/kernel/ia64/asm1.h,48
#define sub_ddmmss(6,169
#define divll(14,442

/home/mengxue/pari/src/kernel/ia64/asm0.h,103
#define LOCAL_HIREMAINDER 22,701
#define bfffo(24,756
#define mulll(38,1648
#define addmul(47,2170

/home/mengxue/pari/src/kernel/gmp/gcd.c,28
resiu(17,664
gcdii(23,739

/home/mengxue/pari/src/kernel/gmp/gcdext.c,31
invmod(22,826
bezout(74,2595

/home/mengxue/pari/src/kernel/gmp/int.h,181
#define int_MSW(15,607
#define int_LSW(18,721
#define int_precW(21,823
#define int_nextW(25,945
#define int_W(29,1063
#define int_W_lg(32,1174
#define PARI_KERNEL_GMP36,1320

/home/mengxue/pari/src/kernel/gmp/mp.c,1381
#define INVMOD_PARI44,1937
static void *pari_gmp_realloc(pari_gmp_realloc46,1958
static void pari_gmp_free(50,2100
pari_kernel_init(59,2382
pari_kernel_close(66,2586
#define LIMBS(78,3144
#define NLIMBS(79,3185
#define RLIMBS(81,3279
#define RNLIMBS(82,3321
xmpn_copy(85,3363
xmpn_mirror(91,3456
xmpn_mirrorcopy(103,3602
xmpn_zero(111,3719
icopy_ef(117,3795
setloop(140,4627
resetloop(149,4863
incpos(156,5025
incneg(169,5283
incloop(193,5711
adduispec(207,5949
adduispec_offset(223,6223
addiispec(232,6407
subiuspec(252,6767
subiispec(269,7063
roundr_up_ip(284,7379
affir(295,7549
shiftispec(336,8516
mantissa2nr(384,9480
truncr(435,10585
floorr(458,11110
cmpiispec(492,11863
equaliispec(500,12024
muluispec(513,12552
addumului(530,12870
umodiu(553,13587
diviu_rem(566,13826
divis_rem(585,14235
divis(606,14721
divrr_with_gmp(627,15175
divri_with_gmp(665,16165
divri(702,17145
divrr(717,17420
dvmdii(848,20734
red_montgomery(944,23171
  avma 1035,25777
GEN2mpz(1043,25988
mpz2GEN(1051,26133
diviuexact(1059,26295
diviiexact(1077,26645
diviuexact(1103,27164
diviiexact(1113,27469
diviuuexact(1122,27597
muliispec(1145,28317
muluui(1165,28745
sqrispec(1186,29109
sqrispec_mirror(1208,29475
muliispec_mirror(1220,29715
remi2n(1245,30388
sqrtremi(1287,31639
sqrtr_abs(1312,32164
int_normalize(1349,33170
convi(1364,33746

/home/mengxue/pari/src/kernel/gmp/tune.h,3717
#define __AGM_ATAN_LIMIT 2,21
#define __DIVRR_GMP_LIMIT 3,65
#define __EXPNEWTON_LIMIT 4,108
#define __Flx_BARRETT_HALFMULII_LIMIT 5,152
#define __Flx_BARRETT_KARATSUBA_LIMIT 6,196
#define __Flx_BARRETT_MULII2_LIMIT 7,242
#define __Flx_BARRETT_MULII_LIMIT 8,286
#define __Flx_DIVREM_BARRETT_LIMIT 9,331
#define __Flx_EXTGCD_LIMIT 10,376
#define __Flx_GCD_LIMIT 11,421
#define __Flx_HALFGCD_HALFMULII_LIMIT 12,467
#define __Flx_HALFGCD_KARATSUBA_LIMIT 13,511
#define __Flx_HALFGCD_MULII2_LIMIT 14,555
#define __Flx_HALFGCD_MULII_LIMIT 15,599
#define __Flx_INVBARRETT_HALFMULII_LIMIT 16,643
#define __Flx_INVBARRETT_KARATSUBA_LIMIT 17,688
#define __Flx_INVBARRETT_MULII2_LIMIT 18,734
#define __Flx_INVBARRETT_MULII_LIMIT 19,778
#define __Flx_MUL_HALFMULII_LIMIT 20,824
#define __Flx_MUL_KARATSUBA_LIMIT 21,867
#define __Flx_MUL_MULII2_LIMIT 22,912
#define __Flx_MUL_MULII_LIMIT 23,955
#define __Flx_REM_BARRETT_LIMIT 24,998
#define __Flx_SQR_HALFSQRI_LIMIT 25,1044
#define __Flx_SQR_KARATSUBA_LIMIT 26,1087
#define __Flx_SQR_SQRI2_LIMIT 27,1132
#define __Flx_SQR_SQRI_LIMIT 28,1175
#define __FpX_BARRETT_LIMIT 29,1218
#define __FpX_DIVREM_BARRETT_LIMIT 30,1262
#define __FpX_EXTGCD_LIMIT 31,1307
#define __FpX_GCD_LIMIT 32,1351
#define __FpX_HALFGCD_LIMIT 33,1396
#define __FpX_INVBARRETT_LIMIT 34,1440
#define __FpX_REM_BARRETT_LIMIT 35,1485
#define __Fp_POW_BARRETT_LIMIT 36,1530
#define __Fp_POW_REDC_LIMIT 37,1575
#define __INVMOD_GMP_LIMIT 38,1619
#define __INVNEWTON_LIMIT 39,1662
#define __LOGAGMCX_LIMIT 40,1707
#define __LOGAGM_LIMIT 41,1751
#define __MULII_FFT_LIMIT 42,1794
#define __MULII_KARATSUBA_LIMIT 43,1838
#define __MULRR_MULII_LIMIT 44,1882
#define __RgX_MUL_LIMIT 45,1926
#define __RgX_SQR_LIMIT 46,1969
#define __SQRI_FFT_LIMIT 47,2013
#define __SQRI_KARATSUBA_LIMIT 48,2057
#define __AGM_ATAN_LIMIT 50,2107
#define __DIVRR_GMP_LIMIT 51,2151
#define __EXPNEWTON_LIMIT 52,2194
#define __Flx_BARRETT_HALFMULII_LIMIT 53,2239
#define __Flx_BARRETT_KARATSUBA_LIMIT 54,2283
#define __Flx_BARRETT_MULII2_LIMIT 55,2328
#define __Flx_BARRETT_MULII_LIMIT 56,2373
#define __Flx_DIVREM_BARRETT_LIMIT 57,2418
#define __Flx_EXTGCD_LIMIT 58,2464
#define __Flx_GCD_LIMIT 59,2509
#define __Flx_HALFGCD_HALFMULII_LIMIT 60,2555
#define __Flx_HALFGCD_KARATSUBA_LIMIT 61,2599
#define __Flx_HALFGCD_MULII2_LIMIT 62,2644
#define __Flx_HALFGCD_MULII_LIMIT 63,2689
#define __Flx_INVBARRETT_HALFMULII_LIMIT 64,2733
#define __Flx_INVBARRETT_KARATSUBA_LIMIT 65,2778
#define __Flx_INVBARRETT_MULII2_LIMIT 66,2824
#define __Flx_INVBARRETT_MULII_LIMIT 67,2870
#define __Flx_MUL_HALFMULII_LIMIT 68,2916
#define __Flx_MUL_KARATSUBA_LIMIT 69,2959
#define __Flx_MUL_MULII2_LIMIT 70,3003
#define __Flx_MUL_MULII_LIMIT 71,3048
#define __Flx_REM_BARRETT_LIMIT 72,3091
#define __Flx_SQR_HALFSQRI_LIMIT 73,3136
#define __Flx_SQR_KARATSUBA_LIMIT 74,3179
#define __Flx_SQR_SQRI2_LIMIT 75,3224
#define __Flx_SQR_SQRI_LIMIT 76,3269
#define __FpX_BARRETT_LIMIT 77,3312
#define __FpX_DIVREM_BARRETT_LIMIT 78,3356
#define __FpX_EXTGCD_LIMIT 79,3401
#define __FpX_GCD_LIMIT 80,3445
#define __FpX_HALFGCD_LIMIT 81,3490
#define __FpX_INVBARRETT_LIMIT 82,3534
#define __FpX_REM_BARRETT_LIMIT 83,3579
#define __Fp_POW_BARRETT_LIMIT 84,3624
#define __Fp_POW_REDC_LIMIT 85,3668
#define __INVMOD_GMP_LIMIT 86,3711
#define __INVNEWTON_LIMIT 87,3754
#define __LOGAGMCX_LIMIT 88,3798
#define __LOGAGM_LIMIT 89,3842
#define __MULII_FFT_LIMIT 90,3886
#define __MULII_KARATSUBA_LIMIT 91,3930
#define __MULRR_MULII_LIMIT 92,3974
#define __RgX_MUL_LIMIT 93,4017
#define __RgX_SQR_LIMIT 94,4060
#define __SQRI_FFT_LIMIT 95,4104
#define __SQRI_KARATSUBA_LIMIT 96,4148

/home/mengxue/pari/src/kernel/ppc64/asm0.h,227
#define LOCAL_HIREMAINDER 18,629
#define LOCAL_OVERFLOW 19,683
#define addll(21,735
#define addllx(29,993
#define bfffo(37,1291
#define subll(43,1436
#define subllx(51,1697
#define mulll(59,2004
#define addmul(67,2235

/home/mengxue/pari/src/kernel/sparcv8_micro/asm0-common.h,205
#define LOCAL_HIREMAINDER 21,680
#define LOCAL_OVERFLOW 22,725
#define addll(24,768
#define addllx(33,1033
#define subll(43,1348
#define subllx(52,1613
#define mulll(62,1928
#define addmul(70,2175

/home/mengxue/pari/src/kernel/sparcv8_micro/asm0.h,22
#define divll(17,605

/home/mengxue/pari/src/kernel/hppa64/asm0.h,257
#define LOCAL_HIREMAINDER 24,854
#define LOCAL_OVERFLOW 25,908
#define addll(27,960
#define addllx(36,1214
#define subll(45,1522
#define subllx(54,1792
#define __addllc(64,2135
#define __mulhh(74,2419
#define mulll(84,2656
#define addmul(102,3348

/home/mengxue/pari/src/kernel/alpha/asm1.h,65
#define sub_ddmmss(24,899
#define divll(34,1201
divll(67,2892

/home/mengxue/pari/src/kernel/alpha/asm0.h,204
#define LOCAL_HIREMAINDER 19,630
#define LOCAL_OVERFLOW 20,684
#define addll(22,736
#define addllx(30,977
#define subll(38,1329
#define subllx(46,1569
#define mulll(54,1963
#define addmul(62,2192

/home/mengxue/pari/src/kernel/mips/asm0.h,111
#define LOCAL_HIREMAINDER 19,665
#define LOCAL_OVERFLOW 20,719
#define mulll(22,771
#define addmul(31,1209

/home/mengxue/pari/src/kernel/m68k/asm0.h,251
#define LOCAL_HIREMAINDER 23,761
#define LOCAL_OVERFLOW 24,815
#define addll(26,867
#define addllx(35,1333
#define subll(44,1803
#define subllx(53,2269
#define mulll(62,2739
#define addmul(72,3335
#define bfffo(82,3931
#define divll(92,4527

/home/mengxue/pari/src/kernel/mips64/asm0.h,111
#define LOCAL_HIREMAINDER 19,667
#define LOCAL_OVERFLOW 20,721
#define mulll(22,773
#define addmul(31,1211

/home/mengxue/pari/src/language/parse.y,605
#define YYSIZE_T 15,573
#define YYSTYPE 16,597
#define YYLTYPE 17,631
#define YYLLOC_DEFAULT(18,663
#define NOARG(22,837
sequence:sequence85,2348
seq:seq88,2407
range:range94,2565
matrix_index:matrix_index100,2820
backticks:backticks104,2965
history:history108,3027
expr:expr116,3467
lvalue:lvalue176,6478
matrixelts:matrixelts181,6702
matrixlines:matrixlines185,6800
matrix:matrix189,6959
in:in197,7306
inseq:inseq200,7367
compr:compr206,7636
arg:arg209,7698
listarg:listarg216,7966
funcid:funcid220,8050
memberid:memberid223,8139
definition:definition226,8224

/home/mengxue/pari/src/kernel/x86-64/asm0.h,259
#define LOCAL_HIREMAINDER 21,
#define LOCAL_OVERFLOW 22,
#define addll(24,
#define addllx(33,
#define addllx8(42,
#define subll(60,
#define subllx(69,
#define subllx8(78,
#define mulll(96,
#define addmul(104,
#define divll(112,
#define bfffo(120,

/home/mengxue/pari/src/kernel/sparcv8_super/asm0.h,0

/home/mengxue/pari/src/kernel/x86_64/asm0.h,0

/home/mengxue/pari/src/kernel/none/asm0.h,0

/home/mengxue/pari/src/mt/mt.h,0

/home/mengxue/pari/src/systems/mingw/mingw.h,0

/home/mengxue/pari/src/systems/win32/pariinl.h,0

/home/mengxue/pari/src/gp/gp.h,0
